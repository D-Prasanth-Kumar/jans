dn: inum=%(inumOrg)s!2124.0CF1,ou=scripts,o=%(inumOrg)s,o=gluu
objectClass: top
objectClass: oxCustomScript
description: Cert authentication module
displayName: cert
gluuStatus: false
inum: %(inumOrg)s!2124.0CF1
oxConfigurationProperty: {"value1":"chain_cert_file_path","value2":"/etc/certs/chain_cert.pem","description":""}
oxConfigurationProperty: {"value1":"credentials_file","value2":"/etc/certs/cert_creds.json","description":""}
oxConfigurationProperty: {"value1":"map_user_cert","value2":"true","description":""}
oxConfigurationProperty: {"value1":"use_generic_validator","value2":"true","description":""}
oxConfigurationProperty: {"value1":"use_path_validator","value2":"true","description":""}
oxConfigurationProperty: {"value1":"use_ocsp_validator","value2":"true","description":""}
oxConfigurationProperty: {"value1":"use_crl_validator","value2":"false","description":""}
oxConfigurationProperty: {"value1":"crl_max_response_size","value2":"10485760","description":""}
oxLevel: 25
oxModuleProperty: {"value1":"location_type","value2":"ldap","description":""}
oxModuleProperty: {"value1":"usage_type","value2":"interactive","description":""}
oxRevision: 1
oxScript:: IwojIG94QXV0aCBpcyBhdmFpbGFibGUgdW5kZXIgdGhlIE1JVCBMaWNlbnNlICgyMDA4KS4gU2VlIGh0dHA6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9NSVQgZm9yIGZ1bGwgdGV4d
 C4KIyBDb3B5cmlnaHQgKGMpIDIwMTYsIEdsdXUKIwojIEF1dGhvcjogWXVyaXkgTW92Y2hhbgojCgppbXBvcnQgc3lzCmltcG9ydCBiYXNlNjQKaW1wb3J0IHVybGxpYgoKZnJvbSBvcmcueGRpLm1v
 ZGVsLmN1c3RvbS5zY3JpcHQudHlwZS5hdXRoIGltcG9ydCBQZXJzb25BdXRoZW50aWNhdGlvblR5cGUKZnJvbSBvcmcuamJvc3Muc2VhbS5jb250ZXh0cyBpbXBvcnQgQ29udGV4dHMKZnJvbSBqYXZ
 heC5mYWNlcy5jb250ZXh0IGltcG9ydCBGYWNlc0NvbnRleHQKZnJvbSBvcmcuamJvc3Muc2VhbS5zZWN1cml0eSBpbXBvcnQgSWRlbnRpdHkKZnJvbSBvcmcueGRpLm94YXV0aC5zZXJ2aWNlIGltcG
 9ydCBVc2VyU2VydmljZQpmcm9tIG9yZy54ZGkudXRpbCBpbXBvcnQgU3RyaW5nSGVscGVyCmZyb20gb3JnLnhkaS5veGF1dGgudXRpbCBpbXBvcnQgU2VydmVyVXRpbApmcm9tIG9yZy54ZGkudXRpb
 C5zZWN1cml0eSBpbXBvcnQgU3RyaW5nRW5jcnlwdGVyCmZyb20gamF2YS51dGlsIGltcG9ydCBBcnJheXMKZnJvbSBvcmcueGRpLm94YXV0aC5jZXJ0LmZpbmdlcnByaW50IGltcG9ydCBGaW5nZXJw
 cmludEhlbHBlcgpmcm9tIG9yZy54ZGkub3hhdXRoLmNlcnQudmFsaWRhdGlvbiBpbXBvcnQgR2VuZXJpY0NlcnRpZmljYXRlVmVyaWZpZXIsIFBhdGhDZXJ0aWZpY2F0ZVZlcmlmaWVyLCBPQ1NQQ2V
 ydGlmaWNhdGVWZXJpZmllciwgQ1JMQ2VydGlmaWNhdGVWZXJpZmllcgpmcm9tIG9yZy54ZGkub3hhdXRoLmNlcnQudmFsaWRhdGlvbi5tb2RlbCBpbXBvcnQgVmFsaWRhdGlvblN0YXR1cwpmcm9tIG
 9yZy54ZGkub3hhdXRoLnV0aWwgaW1wb3J0IENlcnRVdGlsCmZyb20gb3JnLnhkaS5veGF1dGguc2VydmljZS5uZXQgaW1wb3J0IEh0dHBTZXJ2aWNlCmZyb20gb3JnLmFwYWNoZS5odHRwLnBhcmFtc
 yBpbXBvcnQgQ29yZUNvbm5lY3Rpb25QTmFtZXMKaW1wb3J0IGphdmEKCgp0cnk6CiAgICBpbXBvcnQganNvbgpleGNlcHQgSW1wb3J0RXJyb3I6CiAgICBpbXBvcnQgc2ltcGxlanNvbiBhcyBqc29u
 CgpjbGFzcyBQZXJzb25BdXRoZW50aWNhdGlvbihQZXJzb25BdXRoZW50aWNhdGlvblR5cGUpOgogICAgZGVmIF9faW5pdF9fKHNlbGYsIGN1cnJlbnRUaW1lTWlsbGlzKToKICAgICAgICBzZWxmLmN
 1cnJlbnRUaW1lTWlsbGlzID0gY3VycmVudFRpbWVNaWxsaXMKCiAgICBkZWYgaW5pdChzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6CiAgICAgICAgcHJpbnQgIkNlcnQuIEluaXRpYWxpem
 F0aW9uIgoKICAgICAgICBpZiBub3QgKGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmNvbnRhaW5zS2V5KCJjaGFpbl9jZXJ0X2ZpbGVfcGF0aCIpKToKICAgICAgICAgICAgcHJpbnQgIkNlcnQuIElua
 XRpYWxpemF0aW9uLiBQcm9wZXJ0eSBjaGFpbl9jZXJ0X2ZpbGVfcGF0aCBpcyBtYW5kYXRvcnkiCiAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICBpZiBub3QgKGNvbmZpZ3VyYXRpb25B
 dHRyaWJ1dGVzLmNvbnRhaW5zS2V5KCJtYXBfdXNlcl9jZXJ0IikpOgogICAgICAgICAgICBwcmludCAiQ2VydC4gSW5pdGlhbGl6YXRpb24uIFByb3BlcnR5IG1hcF91c2VyX2NlcnQgaXMgbWFuZGF
 0b3J5IgogICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgY2hhaW5fY2VydF9maWxlX3BhdGggPSBjb25maWd1cmF0aW9uQXR0cmlidXRlcy5nZXQoImNoYWluX2NlcnRfZmlsZV9wYXRoIi
 kuZ2V0VmFsdWUyKCkKCiAgICAgICAgc2VsZi5jaGFpbl9jZXJ0cyA9IENlcnRVdGlsLmxvYWRYNTA5Q2VydGlmaWNhdGVGcm9tRmlsZShjaGFpbl9jZXJ0X2ZpbGVfcGF0aCkKICAgICAgICBwcmlud
 CAiQ2VydC4gSW5pdGlhbGl6YXRpb24uIExvYWRlZCAnJWQnIGNoYWluIGNlcnRpZmljYXRlcyIgJSBzZWxmLmNoYWluX2NlcnRzLnNpemUoKQogICAgICAgIAogICAgICAgIGNybF9tYXhfcmVzcG9u
 c2Vfc2l6ZSA9IDUgKiAxMDI0ICogMTAyNCAgIyAxME1iCiAgICAgICAgaWYgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuY29udGFpbnNLZXkoImNybF9tYXhfcmVzcG9uc2Vfc2l6ZSIpOgogICAgICA
 gICAgICBjcmxfbWF4X3Jlc3BvbnNlX3NpemUgPSBTdHJpbmdIZWxwZXIudG9JbnRlZ2VyKGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmdldCgiY3JsX21heF9yZXNwb25zZV9zaXplIikuZ2V0VmFsdW
 UyKCksIGNybF9tYXhfcmVzcG9uc2Vfc2l6ZSkKICAgICAgICAgICAgcHJpbnQgIkNlcnQuIEluaXRpYWxpemF0aW9uLiBDUkwgbWF4IHJlc3BvbnNlIHNpemUgaXMgJyVkJyIgJSBjcmxfbWF4X3Jlc
 3BvbnNlX3NpemUKCiAgICAgICAgIyBEZWZpbmUgYXJyYXkgdG8gb3JkZXIgbWV0aG9kcyBjb3JyZWN0bHkKICAgICAgICBzZWxmLnZhbGlkYXRvcl90eXBlcyA9IFsgJ2dlbmVyaWMnLCAncGF0aCcs
 ICdvY3NwJywgJ2NybCddCiAgICAgICAgc2VsZi52YWxpZGF0b3JzID0geyAnZ2VuZXJpYycgOiBbR2VuZXJpY0NlcnRpZmljYXRlVmVyaWZpZXIoKSwgRmFsc2VdLAogICAgICAgICAgICAgICAgICA
 gICAgICAgICAgJ3BhdGgnIDogW1BhdGhDZXJ0aWZpY2F0ZVZlcmlmaWVyKEZhbHNlKSwgRmFsc2VdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ29jc3AnIDogW09DU1BDZXJ0aWZpY2F0ZV
 ZlcmlmaWVyKCksIEZhbHNlXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICdjcmwnIDogW0NSTENlcnRpZmljYXRlVmVyaWZpZXIoY3JsX21heF9yZXNwb25zZV9zaXplKSwgRmFsc2VdIH0KC
 iAgICAgICAgZm9yIHR5cGUgaW4gc2VsZi52YWxpZGF0b3JfdHlwZXM6CiAgICAgICAgICAgIHZhbGlkYXRvcl9wYXJhbV9uYW1lID0gInVzZV8lc192YWxpZGF0b3IiICUgdHlwZQogICAgICAgICAg
 ICBpZiBjb25maWd1cmF0aW9uQXR0cmlidXRlcy5jb250YWluc0tleSh2YWxpZGF0b3JfcGFyYW1fbmFtZSk6CiAgICAgICAgICAgICAgICB2YWxpZGF0b3Jfc3RhdHVzID0gU3RyaW5nSGVscGVyLnR
 vQm9vbGVhbihjb25maWd1cmF0aW9uQXR0cmlidXRlcy5nZXQodmFsaWRhdG9yX3BhcmFtX25hbWUpLmdldFZhbHVlMigpLCBGYWxzZSkKICAgICAgICAgICAgICAgIHNlbGYudmFsaWRhdG9yc1t0eX
 BlXVsxXSA9IHZhbGlkYXRvcl9zdGF0dXMKCiAgICAgICAgICAgIHByaW50ICJDZXJ0LiBJbml0aWFsaXphdGlvbi4gVmFsaWRhdGlvbiBtZXRob2QgJyVzJyBzdGF0dXM6ICclcyciICUgKHR5cGUsI
 HNlbGYudmFsaWRhdG9yc1t0eXBlXVsxXSkKCiAgICAgICAgc2VsZi5tYXBfdXNlcl9jZXJ0ID0gU3RyaW5nSGVscGVyLnRvQm9vbGVhbihjb25maWd1cmF0aW9uQXR0cmlidXRlcy5nZXQoIm1hcF91
 c2VyX2NlcnQiKS5nZXRWYWx1ZTIoKSwgRmFsc2UpCiAgICAgICAgcHJpbnQgIkNlcnQuIEluaXRpYWxpemF0aW9uLiBtYXBfdXNlcl9jZXJ0OiAnJXMnIiAlIHNlbGYubWFwX3VzZXJfY2VydAoKICA
 gICAgICBzZWxmLmVuYWJsZWRfcmVjYXB0Y2hhID0gc2VsZi5pbml0UmVjYXB0Y2hhKGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKQogICAgICAgIHByaW50ICJDZXJ0LiBJbml0aWFsaXphdGlvbi4gZW
 5hYmxlZF9yZWNhcHRjaGE6ICclcyciICUgc2VsZi5lbmFibGVkX3JlY2FwdGNoYQoKICAgICAgICBwcmludCAiQ2VydC4gSW5pdGlhbGl6ZWQgc3VjY2Vzc2Z1bGx5IgoKICAgICAgICByZXR1cm4gV
 HJ1ZSAgIAoKICAgIGRlZiBkZXN0cm95KHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKToKICAgICAgICBwcmludCAiQ2VydC4gRGVzdHJveSIKCiAgICAgICAgZm9yIHR5cGUgaW4gc2VsZi52
 YWxpZGF0b3JfdHlwZXM6CiAgICAgICAgICAgIHNlbGYudmFsaWRhdG9yc1t0eXBlXVswXS5kZXN0cm95KCkKCiAgICAgICAgcHJpbnQgIkNlcnQuIERlc3Ryb3llZCBzdWNjZXNzZnVsbHkiCgogICA
 gICAgIHJldHVybiBUcnVlCgogICAgZGVmIGdldEFwaVZlcnNpb24oc2VsZik6CiAgICAgICAgcmV0dXJuIDEKCiAgICBkZWYgaXNWYWxpZEF1dGhlbnRpY2F0aW9uTWV0aG9kKHNlbGYsIHVzYWdlVH
 lwZSwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOgogICAgICAgIHJldHVybiBUcnVlCgogICAgZGVmIGdldEFsdGVybmF0aXZlQXV0aGVudGljYXRpb25NZXRob2Qoc2VsZiwgdXNhZ2VUeXBlLCBjb
 25maWd1cmF0aW9uQXR0cmlidXRlcyk6CiAgICAgICAgcmV0dXJuIE5vbmUKCiAgICBkZWYgYXV0aGVudGljYXRlKHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCByZXF1ZXN0UGFyYW1ldGVy
 cywgc3RlcCk6CiAgICAgICAgY3JlZGVudGlhbHMgPSBJZGVudGl0eS5pbnN0YW5jZSgpLmdldENyZWRlbnRpYWxzKCkKICAgICAgICB1c2VyX25hbWUgPSBjcmVkZW50aWFscy5nZXRVc2VybmFtZSg
 pCgogICAgICAgIGNvbnRleHQgPSBDb250ZXh0cy5nZXRFdmVudENvbnRleHQoKQogICAgICAgIHVzZXJTZXJ2aWNlID0gVXNlclNlcnZpY2UuaW5zdGFuY2UoKQoKICAgICAgICBpZiBzdGVwID09ID
 E6CiAgICAgICAgICAgIHByaW50ICJDZXJ0LiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMSIKICAgICAgICAgICAgbG9naW5fYnV0dG9uID0gU2VydmVyVXRpbC5nZXRGaXJzdFZhbHVlKHJlcXVlc3RQY
 XJhbWV0ZXJzLCAibG9naW5Gb3JtOmxvZ2luQnV0dG9uIikKICAgICAgICAgICAgaWYgU3RyaW5nSGVscGVyLmlzRW1wdHkobG9naW5fYnV0dG9uKToKICAgICAgICAgICAgICAgIHByaW50ICJDZXJ0
 LiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gRm9ybSB3ZXJlIHN1Ym1pdHRlZCBpbmNvcnJlY3RseSIKICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQogICAgICAgICAgICBpZiBzZWxmLmVuYWJ
 sZWRfcmVjYXB0Y2hhOgogICAgICAgICAgICAgICAgcHJpbnQgIkNlcnQuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxLiBWYWxpZGF0aW5nIHJlY2FwdGNoYSByZXNwb25zZSIKICAgICAgICAgICAgIC
 AgIHJlY2FwdGNoYV9yZXNwb25zZSA9IFNlcnZlclV0aWwuZ2V0Rmlyc3RWYWx1ZShyZXF1ZXN0UGFyYW1ldGVycywgImctcmVjYXB0Y2hhLXJlc3BvbnNlIikKCiAgICAgICAgICAgICAgICByZWNhc
 HRjaGFfcmVzdWx0ID0gc2VsZi52YWxpZGF0ZVJlY2FwdGNoYShyZWNhcHRjaGFfcmVzcG9uc2UpCiAgICAgICAgICAgICAgICBwcmludCAiQ2VydC4gQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIHJl
 Y2FwdGNoYV9yZXN1bHQ6ICclcyciICUgcmVjYXB0Y2hhX3Jlc3VsdAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICByZXR1cm4gcmVjYXB0Y2hhX3Jlc3VsdAoKICAgICAgICAgICAgcmV
 0dXJuIFRydWUKICAgICAgICBlbGlmIHN0ZXAgPT0gMjoKICAgICAgICAgICAgcHJpbnQgIkNlcnQuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAyIgoKICAgICAgICAgICAgIyBWYWxpZGF0ZSBpZiB1c2
 VyIHNlbGVjdGVkIGNlcnRpZmljYXRlCiAgICAgICAgICAgIGNlcnRfeDUwOSA9IHNlbGYuZ2V0U2Vzc2lvbkF0dHJpYnV0ZSgiY2VydF94NTA5IikKICAgICAgICAgICAgaWYgY2VydF94NTA5ID09I
 E5vbmU6CiAgICAgICAgICAgICAgICBwcmludCAiQ2VydC4gQXV0aGVudGljYXRlIGZvciBzdGVwIDIuIFVzZXIgbm90IHNlbGVjdGVkIGFueSBjZXJ0cyIKICAgICAgICAgICAgICAgIGNvbnRleHQu
 c2V0KCJjZXJ0X3NlbGVjdGVkIiwgRmFsc2UpCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAjIFJldHVybiBUcnVlIHRvIGluZm9ybSB1c2VyIGhvdyB0byByZXNldCB3b3JrZmx
 vdwogICAgICAgICAgICAgICAgcmV0dXJuIFRydWUKICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgIGNvbnRleHQuc2V0KCJjZXJ0X3NlbGVjdGVkIiwgVHJ1ZSkKICAgICAgICAgICAgIC
 AgIHg1MDlDZXJ0aWZpY2F0ZSA9IHNlbGYuY2VydEZyb21TdHJpbmcoY2VydF94NTA5KQoKICAgICAgICAgICAgc3ViamVjdFg1MDBQcmluY2lwYWwgPSB4NTA5Q2VydGlmaWNhdGUuZ2V0U3ViamVjd
 Fg1MDBQcmluY2lwYWwoKQogICAgICAgICAgICBwcmludCAiQ2VydC4gQXV0aGVudGljYXRlIGZvciBzdGVwIDIuIFVzZXIgc2VsZWN0ZWQgY2VydGlmaWNhdGUgd2l0aCBETiAnJXMnIiAlIHN1Ympl
 Y3RYNTAwUHJpbmNpcGFsCiAgICAgICAgICAgIAogICAgICAgICAgICAjIFZhbGlkYXRlIGNlcnRpZmljYXRlcyB3aGljaCB1c2VyIHNlbGVjdGVkCiAgICAgICAgICAgIHZhbGlkID0gc2VsZi52YWx
 pZGF0ZUNlcnRpZmljYXRlKHg1MDlDZXJ0aWZpY2F0ZSkKICAgICAgICAgICAgaWYgbm90IHZhbGlkOgogICAgICAgICAgICAgICAgcHJpbnQgIkNlcnQuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAyLi
 BDZXJ0aWZpY2F0ZSBETiAnJXMnIGlzIG5vdCB2YWxpZCIgJSBzdWJqZWN0WDUwMFByaW5jaXBhbAogICAgICAgICAgICAgICAgY29udGV4dC5zZXQoImNlcnRfdmFsaWQiLCBGYWxzZSkKICAgICAgI
 CAgICAgICAgIAogICAgICAgICAgICAgICAgIyBSZXR1cm4gVHJ1ZSB0byBpbmZvcm0gdXNlciBob3cgdG8gcmVzZXQgd29ya2Zsb3cKICAgICAgICAgICAgICAgIHJldHVybiBUcnVlCgogICAgICAg
 ICAgICBjb250ZXh0LnNldCgiY2VydF92YWxpZCIsIFRydWUpCiAgICAgICAgICAgIAogICAgICAgICAgICAjIENhbGN1bGF0ZSBjZXJ0aWZpY2F0ZSBmaW5nZXJwcmludAogICAgICAgICAgICB4NTA
 5Q2VydGlmaWNhdGVGaW5nZXJwcmludCA9IHNlbGYuY2FsY3VsYXRlQ2VydGlmaWNhdGVGaW5nZXJwcmludCh4NTA5Q2VydGlmaWNhdGUpCiAgICAgICAgICAgIGNvbnRleHQuc2V0KCJjZXJ0X3g1MD
 lfZmluZ2VycHJpbnQiLCB4NTA5Q2VydGlmaWNhdGVGaW5nZXJwcmludCkKICAgICAgICAgICAgcHJpbnQgIkNlcnQuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAyLiBGaW5nZXJwcmludCBpcyAnJXMnI
 G9mIGNlcnRpZmljYXRlIHdpdGggRE4gJyVzJyIgJSAoeDUwOUNlcnRpZmljYXRlRmluZ2VycHJpbnQsIHN1YmplY3RYNTAwUHJpbmNpcGFsKQogICAgICAgICAgICAKICAgICAgICAgICAgIyBBdHRl
 bXB0IHRvIGZpbmQgdXNlciBieSBjZXJ0aWZpY2F0ZSBmaW5nZXJwcmludAogICAgICAgICAgICBjZXJ0X3VzZXJfZXh0ZXJuYWxfdWlkID0gImNlcnQ6JXMiICUgeDUwOUNlcnRpZmljYXRlRmluZ2V
 ycHJpbnQKICAgICAgICAgICAgcHJpbnQgIkNlcnQuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAyLiBBdHRlbXB0aW5nIHRvIGZpbmQgdXNlciBieSBveEV4dGVybmFsVWlkIGF0dHJpYnV0ZSB2YWx1ZS
 AlcyIgJSBjZXJ0X3VzZXJfZXh0ZXJuYWxfdWlkCgogICAgICAgICAgICBmaW5kX3VzZXJfYnlfZXh0ZXJuYWxfdWlkID0gdXNlclNlcnZpY2UuZ2V0VXNlckJ5QXR0cmlidXRlKCJveEV4dGVybmFsV
 WlkIiwgY2VydF91c2VyX2V4dGVybmFsX3VpZCkKICAgICAgICAgICAgaWYgZmluZF91c2VyX2J5X2V4dGVybmFsX3VpZCA9PSBOb25lOgogICAgICAgICAgICAgICAgcHJpbnQgIkNlcnQuIEF1dGhl
 bnRpY2F0ZSBmb3Igc3RlcCAyLiBGYWlsZWQgdG8gZmluZCB1c2VyIgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICBpZiBzZWxmLm1hcF91c2VyX2NlcnQ6CiAgICAgICAgICAgICAgICA
 gICAgcHJpbnQgIkNlcnQuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAyLiBTdG9yaW5nIGNlcnRfdXNlcl9leHRlcm5hbF91aWQgZm9yIHN0ZXAgMyIKICAgICAgICAgICAgICAgICAgICBjb250ZXh0Ln
 NldCgiY2VydF91c2VyX2V4dGVybmFsX3VpZCIsIGNlcnRfdXNlcl9leHRlcm5hbF91aWQpCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFRydWUKICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgI
 CAgICAgICAgICAgICAgcHJpbnQgIkNlcnQuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAyLiBNYXBwaW5nIGNlcnQgdG8gdXNlciBhY2NvdW50IGlzIG5vdCBhbGxvd2VkIgogICAgICAgICAgICAgICAg
 ICAgIGNvbnRleHQuc2V0KCJjZXJ0X2NvdW50X2xvZ2luX3N0ZXBzIiwgMikKICAgICAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgICAgIGZvdW5kVXNlck5hbWUgPSBmaW5kX3V
 zZXJfYnlfZXh0ZXJuYWxfdWlkLmdldFVzZXJJZCgpCiAgICAgICAgICAgIHByaW50ICJDZXJ0LiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMi4gZm91bmRVc2VyTmFtZTogIiArIGZvdW5kVXNlck5hbW
 UKCiAgICAgICAgICAgIGxvZ2dlZF9pbiA9IEZhbHNlCiAgICAgICAgICAgIHVzZXJTZXJ2aWNlID0gVXNlclNlcnZpY2UuaW5zdGFuY2UoKQogICAgICAgICAgICBsb2dnZWRfaW4gPSB1c2VyU2Vyd
 mljZS5hdXRoZW50aWNhdGUoZm91bmRVc2VyTmFtZSkKICAgICAgICAKICAgICAgICAgICAgcHJpbnQgIkNlcnQuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAyLiBTZXR0aW5nIGNvdW50IHN0ZXBzIHRv
 IDIiCiAgICAgICAgICAgIGNvbnRleHQuc2V0KCJjZXJ0X2NvdW50X2xvZ2luX3N0ZXBzIiwgMikKCiAgICAgICAgICAgIHJldHVybiBsb2dnZWRfaW4KICAgICAgICBlbGlmIHN0ZXAgPT0gMzoKICA
 gICAgICAgICAgcHJpbnQgIkNlcnQuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAzIgoKICAgICAgICAgICAgY2VydF91c2VyX2V4dGVybmFsX3VpZCA9IHNlbGYuZ2V0U2Vzc2lvbkF0dHJpYnV0ZSgiY2
 VydF91c2VyX2V4dGVybmFsX3VpZCIpCiAgICAgICAgICAgIGlmIGNlcnRfdXNlcl9leHRlcm5hbF91aWQgPT0gTm9uZToKICAgICAgICAgICAgICAgIHByaW50ICJDZXJ0LiBBdXRoZW50aWNhdGUgZ
 m9yIHN0ZXAgMy4gY2VydF91c2VyX2V4dGVybmFsX3VpZCBpcyBlbXB0eSIKICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgY3JlZGVudGlhbHMgPSBJZGVudGl0eS5pbnN0
 YW5jZSgpLmdldENyZWRlbnRpYWxzKCkKICAgICAgICAgICAgdXNlcl9uYW1lID0gY3JlZGVudGlhbHMuZ2V0VXNlcm5hbWUoKQogICAgICAgICAgICB1c2VyX3Bhc3N3b3JkID0gY3JlZGVudGlhbHM
 uZ2V0UGFzc3dvcmQoKQoKICAgICAgICAgICAgbG9nZ2VkX2luID0gRmFsc2UKICAgICAgICAgICAgaWYgKFN0cmluZ0hlbHBlci5pc05vdEVtcHR5U3RyaW5nKHVzZXJfbmFtZSkgYW5kIFN0cmluZ0
 hlbHBlci5pc05vdEVtcHR5U3RyaW5nKHVzZXJfcGFzc3dvcmQpKToKICAgICAgICAgICAgICAgIGxvZ2dlZF9pbiA9IHVzZXJTZXJ2aWNlLmF1dGhlbnRpY2F0ZSh1c2VyX25hbWUsIHVzZXJfcGFzc
 3dvcmQpCgogICAgICAgICAgICBpZiAobm90IGxvZ2dlZF9pbik6CiAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgICAgICMgRG91YmxlIGNoZWNrIGp1c3QgdG8gbWFrZSBzdXJl
 LiBXZSBkaWQgY2hlY2tpbmcgaW4gcHJldmlvdXMgc3RlcAogICAgICAgICAgICAjIENoZWNrIGlmIHRoZXJlIGlzIHVzZXIgd2hpY2ggaGFzIGNlcnRfdXNlcl9leHRlcm5hbF91aWQKICAgICAgICA
 gICAgIyBBdm9pZCBtYXBwaW5nIHVzZXIgY2VydCB0byBtb3JlIHRoYW4gb25lIElEUCBhY2NvdW50CiAgICAgICAgICAgIGZpbmRfdXNlcl9ieV9leHRlcm5hbF91aWQgPSB1c2VyU2VydmljZS5nZX
 RVc2VyQnlBdHRyaWJ1dGUoIm94RXh0ZXJuYWxVaWQiLCBjZXJ0X3VzZXJfZXh0ZXJuYWxfdWlkKQogICAgICAgICAgICBpZiBmaW5kX3VzZXJfYnlfZXh0ZXJuYWxfdWlkID09IE5vbmU6CiAgICAgI
 CAgICAgICAgICAjIEFkZCBjZXJ0X3VzZXJfZXh0ZXJuYWxfdWlkIHRvIHVzZXIncyBleHRlcm5hbCBHVUlEIGxpc3QKICAgICAgICAgICAgICAgIGZpbmRfdXNlcl9ieV9leHRlcm5hbF91aWQgPSB1
 c2VyU2VydmljZS5hZGRVc2VyQXR0cmlidXRlKHVzZXJfbmFtZSwgIm94RXh0ZXJuYWxVaWQiLCBjZXJ0X3VzZXJfZXh0ZXJuYWxfdWlkKQogICAgICAgICAgICAgICAgaWYgZmluZF91c2VyX2J5X2V
 4dGVybmFsX3VpZCA9PSBOb25lOgogICAgICAgICAgICAgICAgICAgIHByaW50ICJDZXJ0LiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMy4gRmFpbGVkIHRvIHVwZGF0ZSBjdXJyZW50IHVzZXIiCiAgIC
 AgICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgICAgICAgICAgICAgcmV0dXJuIFRydWUKICAgICAgICAKICAgICAgICAgICAgcmV0dXJuIFRydWUKICAgICAgICBlbHNlOgogICAgICAgI
 CAgICByZXR1cm4gRmFsc2UKCiAgICBkZWYgcHJlcGFyZUZvclN0ZXAoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIHJlcXVlc3RQYXJhbWV0ZXJzLCBzdGVwKToKICAgICAgICBwcmludCAi
 Q2VydC4gUHJlcGFyZSBmb3Igc3RlcCAlZCIgJSBzdGVwCiAgICAgICAgY29udGV4dCA9IENvbnRleHRzLmdldEV2ZW50Q29udGV4dCgpCiAgICAgICAgCiAgICAgICAgaWYgc3RlcCA9PSAxOgogICA
 gICAgICAgICBpZiBzZWxmLmVuYWJsZWRfcmVjYXB0Y2hhOgogICAgICAgICAgICAgICAgY29udGV4dC5zZXQoInJlY2FwdGNoYV9zaXRlX2tleSIsIHNlbGYucmVjYXB0Y2hhX2NyZWRzWydzaXRlX2
 tleSddKQogICAgICAgIGVsaWYgc3RlcCA9PSAyOgogICAgICAgICAgICAjIFN0b3JlIGNlcnRpZmljYXRlIGluIHNlc3Npb24KICAgICAgICAgICAgcmVxdWVzdCA9IEZhY2VzQ29udGV4dC5nZXRDd
 XJyZW50SW5zdGFuY2UoKS5nZXRFeHRlcm5hbENvbnRleHQoKS5nZXRSZXF1ZXN0KCkKICAgICAgICAgICAgeDUwOUNlcnRpZmljYXRlcyA9IHJlcXVlc3QuZ2V0QXR0cmlidXRlKCdqYXZheC5zZXJ2
 bGV0LnJlcXVlc3QuWDUwOUNlcnRpZmljYXRlJykKICAgICAgICAgICAgaWYgKHg1MDlDZXJ0aWZpY2F0ZXMgIT0gTm9uZSkgYW5kIChsZW4oeDUwOUNlcnRpZmljYXRlcykgPiAwKToKICAgICAgICA
 gICAgICAgIGNvbnRleHQuc2V0KCJjZXJ0X3g1MDkiLCBzZWxmLmNlcnRUb1N0cmluZyh4NTA5Q2VydGlmaWNhdGVzKSkKICAgICAgICAgICAgICAgIHByaW50ICJDZXJ0LiBQcmVwYXJlIGZvciBzdG
 VwIDIuIFN0b3JpbmcgdXNlciBjZXJ0aWZpY2F0ZSIKCiAgICAgICAgaWYgc3RlcCA8IDQ6CiAgICAgICAgICAgIHJldHVybiBUcnVlCiAgICAgICAgZWxzZToKICAgICAgICAgICAgcmV0dXJuIEZhb
 HNlCgogICAgZGVmIGdldEV4dHJhUGFyYW1ldGVyc0ZvclN0ZXAoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIHN0ZXApOgogICAgICAgIHJldHVybiBBcnJheXMuYXNMaXN0KCJjZXJ0X3Nl
 bGVjdGVkIiwgImNlcnRfdmFsaWQiLCAiY2VydF94NTA5IiwgImNlcnRfeDUwOV9maW5nZXJwcmludCIsICJjZXJ0X2NvdW50X2xvZ2luX3N0ZXBzIiwgImNlcnRfdXNlcl9leHRlcm5hbF91aWQiKQo
 KICAgIGRlZiBnZXRDb3VudEF1dGhlbnRpY2F0aW9uU3RlcHMoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOgogICAgICAgIGNlcnRfY291bnRfbG9naW5fc3RlcHMgPSBzZWxmLmdldFNlc3
 Npb25BdHRyaWJ1dGUoImNlcnRfY291bnRfbG9naW5fc3RlcHMiKQogICAgICAgIGlmIGNlcnRfY291bnRfbG9naW5fc3RlcHMgIT0gTm9uZToKICAgICAgICAgICAgcmV0dXJuIGNlcnRfY291bnRfb
 G9naW5fc3RlcHMKICAgICAgICBlbHNlOgogICAgICAgICAgICByZXR1cm4gMwoKICAgIGRlZiBnZXRQYWdlRm9yU3RlcChzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcywgc3RlcCk6CiAgICAg
 ICAgaWYgc3RlcCA9PSAxOgogICAgICAgICAgICByZXR1cm4gIi9hdXRoL2NlcnQvbG9naW4ueGh0bWwiCiAgICAgICAgaWYgc3RlcCA9PSAyOgogICAgICAgICAgICByZXR1cm4gIi9jZXJ0LWxvZ2l
 uLnhodG1sIgogICAgICAgIGVsaWYgc3RlcCA9PSAzOgogICAgICAgICAgICBjZXJ0X3NlbGVjdGVkID0gc2VsZi5nZXRTZXNzaW9uQXR0cmlidXRlKCJjZXJ0X3NlbGVjdGVkIikKICAgICAgICAgIC
 AgaWYgVHJ1ZSAhPSBjZXJ0X3NlbGVjdGVkOgogICAgICAgICAgICAgICAgcmV0dXJuICIvYXV0aC9jZXJ0L2NlcnQtbm90LXNlbGVjdGVkLnhodG1sIgoKICAgICAgICAgICAgY2VydF92YWxpZCA9I
 HNlbGYuZ2V0U2Vzc2lvbkF0dHJpYnV0ZSgiY2VydF92YWxpZCIpCiAgICAgICAgICAgIGlmIFRydWUgIT0gY2VydF92YWxpZDoKICAgICAgICAgICAgICAgIHJldHVybiAiL2F1dGgvY2VydC9jZXJ0
 LWludmFsaWQueGh0bWwiCiAgICAgICAgICAgIAogICAgICAgICAgICByZXR1cm4gIi9sb2dpbi54aHRtbCIKCiAgICAgICAgcmV0dXJuICIiCgogICAgZGVmIGxvZ291dChzZWxmLCBjb25maWd1cmF
 0aW9uQXR0cmlidXRlcywgcmVxdWVzdFBhcmFtZXRlcnMpOgogICAgICAgIHJldHVybiBUcnVlCgogICAgZGVmIHByb2Nlc3NCYXNpY0F1dGhlbnRpY2F0aW9uKHNlbGYsIGNyZWRlbnRpYWxzKToKIC
 AgICAgICB1c2VyU2VydmljZSA9IFVzZXJTZXJ2aWNlLmluc3RhbmNlKCkKCiAgICAgICAgdXNlcl9uYW1lID0gY3JlZGVudGlhbHMuZ2V0VXNlcm5hbWUoKQogICAgICAgIHVzZXJfcGFzc3dvcmQgP
 SBjcmVkZW50aWFscy5nZXRQYXNzd29yZCgpCgogICAgICAgIGxvZ2dlZF9pbiA9IEZhbHNlCiAgICAgICAgaWYgKFN0cmluZ0hlbHBlci5pc05vdEVtcHR5U3RyaW5nKHVzZXJfbmFtZSkgYW5kIFN0
 cmluZ0hlbHBlci5pc05vdEVtcHR5U3RyaW5nKHVzZXJfcGFzc3dvcmQpKToKICAgICAgICAgICAgbG9nZ2VkX2luID0gdXNlclNlcnZpY2UuYXV0aGVudGljYXRlKHVzZXJfbmFtZSwgdXNlcl9wYXN
 zd29yZCkKCiAgICAgICAgaWYgKG5vdCBsb2dnZWRfaW4pOgogICAgICAgICAgICByZXR1cm4gTm9uZQoKICAgICAgICBmaW5kX3VzZXJfYnlfdWlkID0gdXNlclNlcnZpY2UuZ2V0VXNlcih1c2VyX2
 5hbWUpCiAgICAgICAgaWYgKGZpbmRfdXNlcl9ieV91aWQgPT0gTm9uZSk6CiAgICAgICAgICAgIHByaW50ICJDZXJ0LiBQcm9jZXNzIGJhc2ljIGF1dGhlbnRpY2F0aW9uLiBGYWlsZWQgdG8gZmluZ
 CB1c2VyICclcyciICUgdXNlcl9uYW1lCiAgICAgICAgICAgIHJldHVybiBOb25lCiAgICAgICAgCiAgICAgICAgcmV0dXJuIGZpbmRfdXNlcl9ieV91aWQKCiAgICBkZWYgZ2V0U2Vzc2lvbkF0dHJp
 YnV0ZShzZWxmLCBhdHRyaWJ1dGVfbmFtZSk6CiAgICAgICAgY29udGV4dCA9IENvbnRleHRzLmdldEV2ZW50Q29udGV4dCgpCgogICAgICAgICMgVHJ5IHRvIGdldCBhdHRyaWJ1dGUgdmFsdWUgZnJ
 vbSBTZWFtIGV2ZW50IGNvbnRleHQKICAgICAgICBpZiBjb250ZXh0LmlzU2V0KGF0dHJpYnV0ZV9uYW1lKToKICAgICAgICAgICAgcmV0dXJuIGNvbnRleHQuZ2V0KGF0dHJpYnV0ZV9uYW1lKQogIC
 AgICAgIAogICAgICAgICMgVHJ5IHRvIGdldCBhdHRyaWJ1dGUgZnJvbSBwZXJzaXN0ZW50IHNlc3Npb24KICAgICAgICBzZXNzaW9uX2F0dHJpYnV0ZXMgPSBjb250ZXh0LmdldCgic2Vzc2lvbkF0d
 HJpYnV0ZXMiKQogICAgICAgIGlmIHNlc3Npb25fYXR0cmlidXRlcy5jb250YWluc0tleShhdHRyaWJ1dGVfbmFtZSk6CiAgICAgICAgICAgIHJldHVybiBzZXNzaW9uX2F0dHJpYnV0ZXMuZ2V0KGF0
 dHJpYnV0ZV9uYW1lKQoKICAgICAgICByZXR1cm4gTm9uZQoKICAgIGRlZiBjYWxjdWxhdGVDZXJ0aWZpY2F0ZUZpbmdlcnByaW50KHNlbGYsIHg1MDlDZXJ0aWZpY2F0ZSk6CiAgICAgICAgcHJpbnQ
 gIkNlcnQuIENhbGN1bGF0ZSBmaW5nZXJwcmludCBmb3IgY2VydGlmaWNhdGUgRE4gJyVzJyIgJSB4NTA5Q2VydGlmaWNhdGUuZ2V0U3ViamVjdFg1MDBQcmluY2lwYWwoKQogICAgICAgIAogICAgIC
 AgIHB1YmxpY0tleSA9IHg1MDlDZXJ0aWZpY2F0ZS5nZXRQdWJsaWNLZXkoKQogICAgICAgIAogICAgICAgICMgVXNlIG94QXV0aCBpbXBsZW1lbnRhdGlvbgogICAgICAgIGZpbmdlcnByaW50ID0gR
 mluZ2VycHJpbnRIZWxwZXIuZ2V0UHVibGljS2V5U3NoRmluZ2VycHJpbnQocHVibGljS2V5KQogICAgICAgIAogICAgICAgIHJldHVybiBmaW5nZXJwcmludCAgICAgIAoKICAgIGRlZiB2YWxpZGF0
 ZUNlcnRpZmljYXRlKHNlbGYsIHg1MDlDZXJ0aWZpY2F0ZSk6CiAgICAgICAgc3ViamVjdFg1MDBQcmluY2lwYWwgPSB4NTA5Q2VydGlmaWNhdGUuZ2V0U3ViamVjdFg1MDBQcmluY2lwYWwoKQoKICA
 gICAgICBwcmludCAiQ2VydC4gVmFsaWRhdGluZyBjZXJ0aWZpY2F0ZSB3aXRoIEROICclcyciICUgc3ViamVjdFg1MDBQcmluY2lwYWwKICAgICAgICAKICAgICAgICB2YWxpZGF0aW9uX2RhdGUgPS
 BqYXZhLnV0aWwuRGF0ZSgpCgogICAgICAgIGZvciB0eXBlIGluIHNlbGYudmFsaWRhdG9yX3R5cGVzOgogICAgICAgICAgICBpZiBzZWxmLnZhbGlkYXRvcnNbdHlwZV1bMV06CiAgICAgICAgICAgI
 CAgICByZXN1bHQgPSBzZWxmLnZhbGlkYXRvcnNbdHlwZV1bMF0udmFsaWRhdGUoeDUwOUNlcnRpZmljYXRlLCBzZWxmLmNoYWluX2NlcnRzLCB2YWxpZGF0aW9uX2RhdGUpCiAgICAgICAgICAgICAg
 ICBwcmludCAiQ2VydC4gVmFsaWRhdGUgY2VydGlmaWNhdGU6ICclcycuIFZhbGlkYXRpb24gbWV0aG9kICclcycgcmVzdWx0OiAnJXMnIiAlIChzdWJqZWN0WDUwMFByaW5jaXBhbCwgdHlwZSwgcmV
 zdWx0KQogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICBpZiAocmVzdWx0LmdldFZhbGlkaXR5KCkgIT0gVmFsaWRhdGlvblN0YXR1cy5DZXJ0aWZpY2F0ZVZhbGlkaXR5LlZBTElEKToKIC
 AgICAgICAgICAgICAgICAgICBwcmludCAiQ2VydC4gQ2VydGlmaWNhdGU6ICclcycgaXMgaW52YWxpZCIgJSBzdWJqZWN0WDUwMFByaW5jaXBhbAogICAgICAgICAgICAgICAgICAgIHJldHVybiBGY
 WxzZQogICAgICAgIAogICAgICAgIHJldHVybiBUcnVlCgogICAgZGVmIGNlcnRUb1N0cmluZyhzZWxmLCB4NTA5Q2VydGlmaWNhdGVzKToKICAgICAgICByZXR1cm4gYmFzZTY0LmI2NGVuY29kZSh4
 NTA5Q2VydGlmaWNhdGVzWzBdLmdldEVuY29kZWQoKSkKCiAgICBkZWYgY2VydEZyb21TdHJpbmcoc2VsZiwgeDUwOUNlcnRpZmljYXRlRW5jb2RlZCk6CiAgICAgICAgeDUwOUNlcnRpZmljYXRlRGV
 jb2RlZCA9IGJhc2U2NC5iNjRkZWNvZGUoeDUwOUNlcnRpZmljYXRlRW5jb2RlZCkKCiAgICAgICAgcmV0dXJuIENlcnRVdGlsLng1MDlDZXJ0aWZpY2F0ZUZyb21CeXRlcyh4NTA5Q2VydGlmaWNhdG
 VEZWNvZGVkKQoKICAgIGRlZiBpbml0UmVjYXB0Y2hhKHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKToKICAgICAgICBwcmludCAiQ2VydC4gSW5pdGlhbGl6ZSByZWNhcHRjaGEiCiAgICAgI
 CAgaWYgbm90IGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmNvbnRhaW5zS2V5KCJjcmVkZW50aWFsc19maWxlIik6CiAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICBjZXJ0X2NyZWRzX2Zp
 bGUgPSBjb25maWd1cmF0aW9uQXR0cmlidXRlcy5nZXQoImNyZWRlbnRpYWxzX2ZpbGUiKS5nZXRWYWx1ZTIoKQoKICAgICAgICAjIExvYWQgY3JlZGVudGlhbHMgZnJvbSBmaWxlCiAgICAgICAgZiA
 9IG9wZW4oY2VydF9jcmVkc19maWxlLCAncicpCiAgICAgICAgdHJ5OgogICAgICAgICAgICBjcmVkcyA9IGpzb24ubG9hZHMoZi5yZWFkKCkpCiAgICAgICAgZXhjZXB0OgogICAgICAgICAgICBwcm
 ludCAiQ2VydC4gSW5pdGlhbGl6ZSByZWNhcHRjaGEuIEZhaWxlZCB0byBsb2FkIGNyZWRlbnRpYWxzIGZyb20gZmlsZTogJXMiICUgY2VydF9jcmVkc19maWxlCiAgICAgICAgICAgIHJldHVybiBGY
 WxzZQogICAgICAgIGZpbmFsbHk6CiAgICAgICAgICAgIGYuY2xvc2UoKQogICAgICAgIAogICAgICAgIHRyeToKICAgICAgICAgICAgcmVjYXB0Y2hhX2NyZWRzID0gY3JlZHNbInJlY2FwdGNoYSJd
 CiAgICAgICAgZXhjZXB0OgogICAgICAgICAgICBwcmludCAiQ2VydC4gSW5pdGlhbGl6ZSByZWNhcHRjaGEuIEludmFsaWQgY3JlZGVudGlhbHMgZmlsZSAnJXMnIGZvcm1hdDoiICUgY2VydF9jcmV
 kc19maWxlCiAgICAgICAgICAgIHJldHVybiBGYWxzZQogICAgICAgIAogICAgICAgIHNlbGYucmVjYXB0Y2hhX2NyZWRzID0gTm9uZQogICAgICAgIGlmIHJlY2FwdGNoYV9jcmVkc1siZW5hYmxlZC
 JdOgogICAgICAgICAgICBwcmludCAiQ2VydC4gSW5pdGlhbGl6ZSByZWNhcHRjaGEuIFJlY2FwdGNoYSBpcyBlbmFibGVkIgoKICAgICAgICAgICAgc3RyaW5nRW5jcnlwdGVyID0gU3RyaW5nRW5jc
 nlwdGVyLmRlZmF1bHRJbnN0YW5jZSgpCgogICAgICAgICAgICBzaXRlX2tleSA9IHJlY2FwdGNoYV9jcmVkc1sic2l0ZV9rZXkiXQogICAgICAgICAgICBzZWNyZXRfa2V5ID0gcmVjYXB0Y2hhX2Ny
 ZWRzWyJzZWNyZXRfa2V5Il0KCiAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgIHNpdGVfa2V5ID0gc3RyaW5nRW5jcnlwdGVyLmRlY3J5cHQoc2l0ZV9rZXkpCiAgICAgICAgICAgIGV4Y2V
 wdDoKICAgICAgICAgICAgICAgICMgSWdub3JlIGV4Y2VwdGlvbi4gVmFsdWUgaXMgbm90IGVuY3J5cHRlZAogICAgICAgICAgICAgICAgcHJpbnQgIkNlcnQuIEluaXRpYWxpemUgcmVjYXB0Y2hhLi
 BBc3N1bWluZyB0aGF0ICdzaXRlX2tleScgaW4gbm90IGVuY3J5cHRlZCIKCiAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgIHNlY3JldF9rZXkgPSBzdHJpbmdFbmNyeXB0ZXIuZGVjcnlwd
 ChzZWNyZXRfa2V5KQogICAgICAgICAgICBleGNlcHQ6CiAgICAgICAgICAgICAgICAjIElnbm9yZSBleGNlcHRpb24uIFZhbHVlIGlzIG5vdCBlbmNyeXB0ZWQKICAgICAgICAgICAgICAgIHByaW50
 ICJDZXJ0LiBJbml0aWFsaXplIHJlY2FwdGNoYS4gQXNzdW1pbmcgdGhhdCAnc2VjcmV0X2tleScgaW4gbm90IGVuY3J5cHRlZCIKCiAgICAgICAgICAgIAogICAgICAgICAgICBzZWxmLnJlY2FwdGN
 oYV9jcmVkcyA9IHsgJ3NpdGVfa2V5JyA6IHNpdGVfa2V5LCAic2VjcmV0X2tleSIgOiBzZWNyZXRfa2V5IH0KICAgICAgICAgICAgcHJpbnQgIkNlcnQuIEluaXRpYWxpemUgcmVjYXB0Y2hhLiBSZW
 NhcHRjaGEgaXMgY29uZmlndXJlZCBjb3JyZWN0bHkiCgogICAgICAgICAgICByZXR1cm4gVHJ1ZQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHByaW50ICJDZXJ0LiBJbml0aWFsaXplIHJlY2Fwd
 GNoYS4gUmVjYXB0Y2hhIGlzIGRpc2FibGVkIgoKICAgICAgICByZXR1cm4gRmFsc2UKCiAgICBkZWYgdmFsaWRhdGVSZWNhcHRjaGEoc2VsZiwgcmVjYXB0Y2hhX3Jlc3BvbnNlKToKICAgICAgICBw
 cmludCAiQ2VydC4gVmFsaWRhdGUgcmVjYXB0Y2hhIHJlc3BvbnNlIgoKICAgICAgICByZXF1ZXN0ID0gRmFjZXNDb250ZXh0LmdldEN1cnJlbnRJbnN0YW5jZSgpLmdldEV4dGVybmFsQ29udGV4dCg
 pLmdldFJlcXVlc3QoKQogICAgICAgIHJlbW90ZWlwID0gcmVxdWVzdC5nZXRIZWFkZXIoIlgtRk9SV0FSREVELUZPUiIpCiAgICAgICAgaWYgcmVtb3RlaXAgPT0gTm9uZToKICAgICAgICAgICAgcm
 Vtb3RlaXAgPSByZXF1ZXN0LmdldFJlbW90ZUFkZHIoKQogICAgICAgIHByaW50ICJDZXJ0LiBWYWxpZGF0ZSByZWNhcHRjaGEgcmVzcG9uc2UuIHJlbW90ZWlwOiAnJXMnIiAlIHJlbW90ZWlwCgogI
 CAgICAgIGh0dHBTZXJ2aWNlID0gSHR0cFNlcnZpY2UuaW5zdGFuY2UoKTsKCiAgICAgICAgaHR0cF9jbGllbnQgPSBodHRwU2VydmljZS5nZXRIdHRwc0NsaWVudCgpOwogICAgICAgIGh0dHBfY2xp
 ZW50X3BhcmFtcyA9IGh0dHBfY2xpZW50LmdldFBhcmFtcygpOwogICAgICAgIGh0dHBfY2xpZW50X3BhcmFtcy5zZXRJbnRQYXJhbWV0ZXIoQ29yZUNvbm5lY3Rpb25QTmFtZXMuQ09OTkVDVElPTl9
 USU1FT1VULCAxNSAqIDEwMDApOwogICAgICAgIAogICAgICAgIHJlY2FwdGNoYV92YWxpZGF0aW9uX3VybCA9ICJodHRwczovL3d3dy5nb29nbGUuY29tL3JlY2FwdGNoYS9hcGkvc2l0ZXZlcmlmeS
 IKICAgICAgICByZWNhcHRjaGFfdmFsaWRhdGlvbl9yZXF1ZXN0ID0gdXJsbGliLnVybGVuY29kZSh7ICJzZWNyZXQiIDogc2VsZi5yZWNhcHRjaGFfY3JlZHNbJ3NlY3JldF9rZXknXSwgInJlc3Bvb
 nNlIiA6IHJlY2FwdGNoYV9yZXNwb25zZSwgInJlbW90ZWlwIiA6IHJlbW90ZWlwIH0pCiAgICAgICAgcmVjYXB0Y2hhX3ZhbGlkYXRpb25faGVhZGVycyA9IHsgIkNvbnRlbnQtdHlwZSIgOiAiYXBw
 bGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkIiwgIkFjY2VwdCIgOiAiYXBwbGljYXRpb24vanNvbiIgfQoKICAgICAgICB0cnk6CiAgICAgICAgICAgIGh0dHBfc2VydmljZV9yZXNwb25zZSA
 9IGh0dHBTZXJ2aWNlLmV4ZWN1dGVQb3N0KGh0dHBfY2xpZW50LCByZWNhcHRjaGFfdmFsaWRhdGlvbl91cmwsIE5vbmUsIHJlY2FwdGNoYV92YWxpZGF0aW9uX2hlYWRlcnMsIHJlY2FwdGNoYV92YW
 xpZGF0aW9uX3JlcXVlc3QpCiAgICAgICAgICAgIGh0dHBfcmVzcG9uc2UgPSBodHRwX3NlcnZpY2VfcmVzcG9uc2UuZ2V0SHR0cFJlc3BvbnNlKCkKICAgICAgICBleGNlcHQ6CiAgICAgICAgICAgI
 HByaW50ICJDZXJ0LiBWYWxpZGF0ZSByZWNhcHRjaGEgcmVzcG9uc2UuIEV4Y2VwdGlvbjogIiwgc3lzLmV4Y19pbmZvKClbMV0KICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgICAgIHRyeToK
 ICAgICAgICAgICAgaWYgbm90IGh0dHBTZXJ2aWNlLmlzUmVzcG9uc2VTdGFzdHVzQ29kZU9rKGh0dHBfcmVzcG9uc2UpOgogICAgICAgICAgICAgICAgcHJpbnQgIkNlcnQuIFZhbGlkYXRlIHJlY2F
 wdGNoYSByZXNwb25zZS4gR2V0IGludmFsaWQgcmVzcG9uc2UgZnJvbSB2YWxpZGF0aW9uIHNlcnZlcjogIiwgc3RyKGh0dHBfcmVzcG9uc2UuZ2V0U3RhdHVzTGluZSgpLmdldFN0YXR1c0NvZGUoKS
 kKICAgICAgICAgICAgICAgIGh0dHBTZXJ2aWNlLmNvbnN1bWUoaHR0cF9yZXNwb25zZSkKICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQogICAgCiAgICAgICAgICAgIHJlc3BvbnNlX2J5dGVzI
 D0gaHR0cFNlcnZpY2UuZ2V0UmVzcG9uc2VDb250ZW50KGh0dHBfcmVzcG9uc2UpCiAgICAgICAgICAgIHJlc3BvbnNlX3N0cmluZyA9IGh0dHBTZXJ2aWNlLmNvbnZlcnRFbnRpdHlUb1N0cmluZyhy
 ZXNwb25zZV9ieXRlcykKICAgICAgICAgICAgaHR0cFNlcnZpY2UuY29uc3VtZShodHRwX3Jlc3BvbnNlKQogICAgICAgIGZpbmFsbHk6CiAgICAgICAgICAgIGh0dHBfc2VydmljZV9yZXNwb25zZS5
 jbG9zZUNvbm5lY3Rpb24oKQoKICAgICAgICBpZiByZXNwb25zZV9zdHJpbmcgPT0gTm9uZToKICAgICAgICAgICAgcHJpbnQgIkNlcnQuIFZhbGlkYXRlIHJlY2FwdGNoYSByZXNwb25zZS4gR2V0IG
 VtcHR5IHJlc3BvbnNlIGZyb20gdmFsaWRhdGlvbiBzZXJ2ZXIiCiAgICAgICAgICAgIHJldHVybiBGYWxzZQogICAgICAgIAogICAgICAgIHJlc3BvbnNlID0ganNvbi5sb2FkcyhyZXNwb25zZV9zd
 HJpbmcpCiAgICAgICAgCiAgICAgICAgcmV0dXJuIHJlc3BvbnNlWyJzdWNjZXNzIl0K
oxScriptType: person_authentication
programmingLanguage: python

dn: inum=%(inumOrg)s!2FDB.CF02,ou=scripts,o=%(inumOrg)s,o=gluu
objectClass: oxCustomScript
objectClass: top
description: Passport authentication module
displayName: passport
gluuStatus: false
inum: %(inumOrg)s!2FDB.CF02
oxConfigurationProperty: {"value1":"generic_remote_attributes_list","value2":"username, email, givenName, name, givenName","description":""}
oxConfigurationProperty: {"value1":"generic_local_attributes_list","value2":"uid, mail, givenName, sn, cn","description":""}
oxLevel: 60
oxModuleProperty: {"value1":"usage_type","value2":"interactive","description":""}
oxModuleProperty: {"value1":"location_type","value2":"ldap","description":""}
oxRevision: 1
oxScript:: ZnJvbSBvcmcuamJvc3Muc2VhbS5jb250ZXh0cyBpbXBvcnQgQ29udGV4dCwgQ29udGV4dHMNCmZyb20gamF2YXguZmFjZXMuY29udGV4dCBpbXBvcnQgRmFjZXNDb250ZXh0DQpmcm9tI
 G9yZy54ZGkudXRpbCBpbXBvcnQgU3RyaW5nSGVscGVyLCBBcnJheUhlbHBlcg0KZnJvbSBqYXZhLnV0aWwgaW1wb3J0IEFycmF5cywgQXJyYXlMaXN0LCBIYXNoTWFwLCBJZGVudGl0eUhhc2hNYXAN
 CmZyb20gb3JnLnhkaS5veGF1dGguY2xpZW50IGltcG9ydCBUb2tlbkNsaWVudCwgVG9rZW5SZXF1ZXN0LCBVc2VySW5mb0NsaWVudA0KZnJvbSBvcmcueGRpLm94YXV0aC5tb2RlbC5jb21tb24gaW1
 wb3J0IEdyYW50VHlwZSwgQXV0aGVudGljYXRpb25NZXRob2QNCmZyb20gb3JnLnhkaS5veGF1dGgubW9kZWwuand0IGltcG9ydCBKd3QsIEp3dENsYWltTmFtZQ0KZnJvbSBvcmcuamJvc3Muc2VhbS
 5zZWN1cml0eSBpbXBvcnQgSWRlbnRpdHkNCmZyb20gb3JnLnhkaS5tb2RlbC5jdXN0b20uc2NyaXB0LnR5cGUuYXV0aCBpbXBvcnQgUGVyc29uQXV0aGVudGljYXRpb25UeXBlDQpmcm9tIG9yZy54Z
 Gkub3hhdXRoLnNlcnZpY2UgaW1wb3J0IFVzZXJTZXJ2aWNlLCBDbGllbnRTZXJ2aWNlLCBBdXRoZW50aWNhdGlvblNlcnZpY2UNCmZyb20gb3JnLnhkaS5veGF1dGgubW9kZWwuY29tbW9uIGltcG9y
 dCBVc2VyDQpmcm9tIG9yZy54ZGkudXRpbCBpbXBvcnQgU3RyaW5nSGVscGVyDQpmcm9tIG9yZy54ZGkub3hhdXRoLnV0aWwgaW1wb3J0IFNlcnZlclV0aWwNCnRyeToNCiAgICBpbXBvcnQganNvbg0
 KZXhjZXB0IEltcG9ydEVycm9yOg0KICAgIGltcG9ydCBzaW1wbGVqc29uIGFzIGpzb24NCmltcG9ydCBqYXZhDQoNCmNsYXNzIFBlcnNvbkF1dGhlbnRpY2F0aW9uKFBlcnNvbkF1dGhlbnRpY2F0aW
 9uVHlwZSk6DQoNCiAgICBkZWYgX19pbml0X18oc2VsZiwgY3VycmVudFRpbWVNaWxsaXMpOg0KICAgICAgICBzZWxmLmN1cnJlbnRUaW1lTWlsbGlzID0gY3VycmVudFRpbWVNaWxsaXMNCg0KDQogI
 CAgZGVmIGluaXQoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOg0KICAgICAgICBwcmludCAiUGFzc3BvcnQuIEluaXRpYWxpemF0aW9uIGluaXQgbWV0aG9kIGNhbGwgXiYiDQogICAgICAg
 IHByaW50ICJQYXNzcG9ydC4gSW5pdGlhbGl6ZWQgc3VjY2Vzc2Z1bGx5Ig0KICAgICAgICBzZWxmLmV4dGVuc2lvbk1vZHVsZSA9IE5vbmUNCiAgICAgICAgc2VsZi5hdHRyaWJ1dGVzTWFwcGluZyA
 9IE5vbmUNCiAgICAgICAgaWYgKGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmNvbnRhaW5zS2V5KCJnZW5lcmljX3JlbW90ZV9hdHRyaWJ1dGVzX2xpc3QiKSBhbmQNCiAgICAgICAgICAgIGNvbmZpZ3
 VyYXRpb25BdHRyaWJ1dGVzLmNvbnRhaW5zS2V5KCJnZW5lcmljX2xvY2FsX2F0dHJpYnV0ZXNfbGlzdCIpKToNCg0KICAgICAgICAgICAgcmVtb3RlQXR0cmlidXRlc0xpc3QgPSBjb25maWd1cmF0a
 W9uQXR0cmlidXRlcy5nZXQoImdlbmVyaWNfcmVtb3RlX2F0dHJpYnV0ZXNfbGlzdCIpLmdldFZhbHVlMigpDQogICAgICAgICAgICBpZiAoU3RyaW5nSGVscGVyLmlzRW1wdHkocmVtb3RlQXR0cmli
 dXRlc0xpc3QpKToNCiAgICAgICAgICAgICAgICBwcmludCAiUGFzc3BvcnQuIEluaXRpYWxpemF0aW9uLiBUaGUgcHJvcGVydHkgZ2VuZXJpY19yZW1vdGVfYXR0cmlidXRlc19saXN0IGlzIGVtcHR
 5Ig0KICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQ0KDQogICAgICAgICAgICBsb2NhbEF0dHJpYnV0ZXNMaXN0ID0gY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuZ2V0KCJnZW5lcmljX2xvY2FsX2
 F0dHJpYnV0ZXNfbGlzdCIpLmdldFZhbHVlMigpDQogICAgICAgICAgICBpZiAoU3RyaW5nSGVscGVyLmlzRW1wdHkobG9jYWxBdHRyaWJ1dGVzTGlzdCkpOg0KICAgICAgICAgICAgICAgIHByaW50I
 CJQYXNzcG9ydC4gSW5pdGlhbGl6YXRpb24uIFRoZSBwcm9wZXJ0eSBnZW5lcmljX2xvY2FsX2F0dHJpYnV0ZXNfbGlzdCBpcyBlbXB0eSINCiAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UNCg0K
 ICAgICAgICAgICAgc2VsZi5hdHRyaWJ1dGVzTWFwcGluZyA9IHNlbGYucHJlcGFyZUF0dHJpYnV0ZXNNYXBwaW5nKHJlbW90ZUF0dHJpYnV0ZXNMaXN0LCBsb2NhbEF0dHJpYnV0ZXNMaXN0KQ0KICA
 gICAgICAgICAgaWYgKHNlbGYuYXR0cmlidXRlc01hcHBpbmcgPT0gTm9uZSk6DQogICAgICAgICAgICAgICAgcHJpbnQgIlBhc3Nwb3J0LiBJbml0aWFsaXphdGlvbi4gVGhlIGF0dHJpYnV0ZXMgbW
 FwcGluZyBpc24ndCB2YWxpZCINCiAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UNCiAgICAgICAgaWYgKGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmNvbnRhaW5zS2V5KCJleHRlbnNpb25fbW9kd
 WxlIikpOg0KICAgICAgICAgICAgZXh0ZW5zaW9uTW9kdWxlTmFtZSA9IGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmdldCgiZXh0ZW5zaW9uX21vZHVsZSIpLmdldFZhbHVlMigpDQogICAgICAgICAg
 ICB0cnk6DQogICAgICAgICAgICAgICAgc2VsZi5leHRlbnNpb25Nb2R1bGUgPSBfX2ltcG9ydF9fKGV4dGVuc2lvbk1vZHVsZU5hbWUpDQogICAgICAgICAgICAgICAgZXh0ZW5zaW9uTW9kdWxlSW5
 pdFJlc3VsdCA9IHNlbGYuZXh0ZW5zaW9uTW9kdWxlLmluaXQoY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpDQogICAgICAgICAgICAgICAgaWYgKG5vdCBleHRlbnNpb25Nb2R1bGVJbml0UmVzdWx0KT
 oNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlDQogICAgICAgICAgICBleGNlcHQgSW1wb3J0RXJyb3IsIGV4Og0KICAgICAgICAgICAgICAgIHByaW50ICJQYXNzcG9ydC4gSW5pdGlhb
 Gl6YXRpb24uIEZhaWxlZCB0byBsb2FkIGdlbmVyaWNfZXh0ZW5zaW9uX21vZHVsZToiLCBleHRlbnNpb25Nb2R1bGVOYW1lDQogICAgICAgICAgICAgICAgcHJpbnQgIlBhc3Nwb3J0LiBJbml0aWFs
 aXphdGlvbi4gVW5leHBlY3RlZCBlcnJvcjoiLCBleA0KICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQ0KICAgICAgICBlbHNlOg0KICAgICAgICAgICAgcHJpbnQoIlBhc3Nwb3J0LiBFeHRlbnN
 pb24gbW9kdWxlIGtleSBub3QgZm91bmQiKQ0KICAgICAgICByZXR1cm4gVHJ1ZQ0KDQogICAgZGVmIGRlc3Ryb3koc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOg0KICAgICAgICBwcmludC
 AiUGFzc3BvcnQuIERlc3Ryb3kgZGVzdHJveSBtZXRob2QgY2FsbCBeJiINCiAgICAgICAgcHJpbnQgIlBhc3Nwb3J0LiBEZXN0cm95ZWQgc3VjY2Vzc2Z1bGx5Ig0KICAgICAgICByZXR1cm4gVHJ1Z
 Q0KDQogICAgZGVmIGdldEFwaVZlcnNpb24oc2VsZik6DQogICAgICAgIHJldHVybiAxDQoNCiAgICBkZWYgaXNWYWxpZEF1dGhlbnRpY2F0aW9uTWV0aG9kKHNlbGYsIHVzYWdlVHlwZSwgY29uZmln
 dXJhdGlvbkF0dHJpYnV0ZXMpOg0KICAgICAgICByZXR1cm4gVHJ1ZQ0KDQogICAgZGVmIGdldEFsdGVybmF0aXZlQXV0aGVudGljYXRpb25NZXRob2Qoc2VsZiwgdXNhZ2VUeXBlLCBjb25maWd1cmF
 0aW9uQXR0cmlidXRlcyk6DQogICAgICAgIHJldHVybiBOb25lDQoNCiAgICBkZWYgZ2V0VXNlclZhbHVlRnJvbUF1dGgoc2VsZixyZW1vdGVfYXR0cixyZXF1ZXN0UGFyYW1ldGVycyk6DQogICAgIC
 AgIHRyeToNCiAgICAgICAgICAgIHZhbD1TZXJ2ZXJVdGlsLmdldEZpcnN0VmFsdWUocmVxdWVzdFBhcmFtZXRlcnMsICJsb2dpbkZvcm06IityZW1vdGVfYXR0cikNCiAgICAgICAgICAgIHJldHVyb
 iB2YWwuZGVjb2RlKCd1dGYtOCcpDQogICAgICAgIGV4Y2VwdCBFeGNlcHRpb24sZXJyOg0KICAgICAgICAgICAgcHJpbnQoIlBhc3Nwb3J0LiBFeGNlcHRpb24gaW5zaWRlIGdldFVzZXJWYWx1ZUZy
 b21BdXRoICIrc3RyKGVycikpDQoNCiAgICBkZWYgYXV0aGVudGljYXRlKHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCByZXF1ZXN0UGFyYW1ldGVycywgc3RlcCk6DQogICAgICAgIHRyeTo
 NCiAgICAgICAgICAgIFVzZXJFbWFpbD1zZWxmLmdldFVzZXJWYWx1ZUZyb21BdXRoKCJlbWFpbCIscmVxdWVzdFBhcmFtZXRlcnMpDQogICAgICAgIGV4Y2VwdCBFeGNlcHRpb24sZXJyOg0KICAgIC
 AgICAgICAgcHJpbnQoIlBhc3Nwb3J0LiBFcnJvcjogIitzdHIoZXJyKSkNCiAgICAgICAgdXNlQmFzaWNBdXRoID0gRmFsc2UNCiAgICAgICAgaWYgKFN0cmluZ0hlbHBlci5pc0VtcHR5U3RyaW5nK
 FVzZXJFbWFpbCkpOg0KICAgICAgICAgICAgdXNlQmFzaWNBdXRoID0gVHJ1ZQ0KDQogICAgICAgICMgVXNlIGJhc2ljIG1ldGhvZCB0byBsb2cgaW4NCiAgICAgICAgaWYgKHVzZUJhc2ljQXV0aCk6
 DQogICAgICAgICAgICBwcmludCAiUGFzc3BvcnQuIEJhc2ljIEF1dGhlbnRpY2F0aW9uIg0KICAgICAgICAgICAgY3JlZGVudGlhbHMgPSBJZGVudGl0eS5pbnN0YW5jZSgpLmdldENyZWRlbnRpYWx
 zKCkNCiAgICAgICAgICAgIHVzZXJfbmFtZSA9IGNyZWRlbnRpYWxzLmdldFVzZXJuYW1lKCkNCiAgICAgICAgICAgIHVzZXJfcGFzc3dvcmQgPSBjcmVkZW50aWFscy5nZXRQYXNzd29yZCgpDQogIC
 AgICAgICAgICBsb2dnZWRfaW4gPSBGYWxzZQ0KICAgICAgICAgICAgDQogICAgICAgICAgICBpZiAoU3RyaW5nSGVscGVyLmlzTm90RW1wdHlTdHJpbmcodXNlcl9uYW1lKSBhbmQgU3RyaW5nSGVsc
 GVyLmlzTm90RW1wdHlTdHJpbmcodXNlcl9wYXNzd29yZCkpOg0KICAgICAgICAgICAgICAgIHVzZXJTZXJ2aWNlID0gVXNlclNlcnZpY2UuaW5zdGFuY2UoKQ0KICAgICAgICAgICAgICAgIGxvZ2dl
 ZF9pbiA9IHVzZXJTZXJ2aWNlLmF1dGhlbnRpY2F0ZSh1c2VyX25hbWUsIHVzZXJfcGFzc3dvcmQpDQogICAgICAgICAgICANCiAgICAgICAgICAgIGlmIChub3QgbG9nZ2VkX2luKToNCiAgICAgICA
 gICAgICAgICByZXR1cm4gRmFsc2UNCiAgICAgICAgICAgIHJldHVybiBUcnVlDQoNCiAgICAgICAgZWxzZToNCiAgICAgICAgICAgIHRyeToNCiAgICAgICAgICAgICAgICB1c2VyU2VydmljZSA9IF
 VzZXJTZXJ2aWNlLmluc3RhbmNlKCkNCiAgICAgICAgICAgICAgICBhdXRoZW50aWNhdGlvblNlcnZpY2UgPSBBdXRoZW50aWNhdGlvblNlcnZpY2UuaW5zdGFuY2UoKQ0KICAgICAgICAgICAgICAgI
 GZvdW5kVXNlciA9IHVzZXJTZXJ2aWNlLmdldFVzZXJCeUF0dHJpYnV0ZSgib3hFeHRlcm5hbFVpZCIsc2VsZi5nZXRVc2VyVmFsdWVGcm9tQXV0aCgicHJvdmlkZXIiLHJlcXVlc3RQYXJhbWV0ZXJz
 KSsiOiIgKyBzZWxmLmdldFVzZXJWYWx1ZUZyb21BdXRoKHNlbGYuZ2V0VWlkUmVtb3RlQXR0cigpLHJlcXVlc3RQYXJhbWV0ZXJzKSkNCg0KICAgICAgICAgICAgICAgIGlmIChmb3VuZFVzZXIgPT0
 gTm9uZSk6DQogICAgICAgICAgICAgICAgICAgIG5ld1VzZXIgPSBVc2VyKCkNCiAgICAgICAgICAgICAgICAgICAgZm9yIGF0dHJpYnV0ZXNNYXBwaW5nRW50cnkgaW4gc2VsZi5hdHRyaWJ1dGVzTW
 FwcGluZy5lbnRyeVNldCgpOg0KICAgICAgICAgICAgICAgICAgICAgICAgcmVtb3RlQXR0cmlidXRlID0gYXR0cmlidXRlc01hcHBpbmdFbnRyeS5nZXRLZXkoKQ0KICAgICAgICAgICAgICAgICAgI
 CAgICAgbG9jYWxBdHRyaWJ1dGUgPSBhdHRyaWJ1dGVzTWFwcGluZ0VudHJ5LmdldFZhbHVlKCkNCiAgICAgICAgICAgICAgICAgICAgICAgIGxvY2FsQXR0cmlidXRlVmFsdWUgPSBzZWxmLmdldFVz
 ZXJWYWx1ZUZyb21BdXRoKHJlbW90ZUF0dHJpYnV0ZSxyZXF1ZXN0UGFyYW1ldGVycykNCiAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KCJQYXNzcG9ydC4gQXV0aGVudGljYXRpb24uIEtleTo
 gIisgbG9jYWxBdHRyaWJ1dGUrICIgIHx8fCAgIHZhbHVlOiAiKyBsb2NhbEF0dHJpYnV0ZVZhbHVlKQ0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKChsb2NhbEF0dHJpYnV0ZSAhPSBOb25lKS
 AmIChsb2NhbEF0dHJpYnV0ZVZhbHVlICE9ICJ1bmRlZmluZWQiKSk6DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3VXNlci5zZXRBdHRyaWJ1dGUobG9jYWxBdHRyaWJ1dGUsbG9jYWxBd
 HRyaWJ1dGVWYWx1ZSkNCiAgICAgICAgICAgICAgICAgICAgbmV3VXNlci5zZXRBdHRyaWJ1dGUoIm94RXh0ZXJuYWxVaWQiLCBzZWxmLmdldFVzZXJWYWx1ZUZyb21BdXRoKCJwcm92aWRlciIscmVx
 dWVzdFBhcmFtZXRlcnMpKyI6IiArc2VsZi5nZXRVc2VyVmFsdWVGcm9tQXV0aChzZWxmLmdldFVpZFJlbW90ZUF0dHIoKSxyZXF1ZXN0UGFyYW1ldGVycykpDQogICAgICAgICAgICAgICAgICAgIHB
 yaW50IChzZWxmLmdldFVzZXJWYWx1ZUZyb21BdXRoKCJwcm92aWRlciIscmVxdWVzdFBhcmFtZXRlcnMpKyJBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gQXR0ZW1wdGluZyB0byBhZGQgdXNlciAiKy
 BzZWxmLmdldFVzZXJWYWx1ZUZyb21BdXRoKHNlbGYuZ2V0VWlkUmVtb3RlQXR0cigpLHJlcXVlc3RQYXJhbWV0ZXJzKSkNCiAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgI
 HRyeToNCiAgICAgICAgICAgICAgICAgICAgICAgIGZvdW5kVXNlciA9IHVzZXJTZXJ2aWNlLmFkZFVzZXIobmV3VXNlciwgVHJ1ZSkNCiAgICAgICAgICAgICAgICAgICAgICAgIGZvdW5kVXNlck5h
 bWUgPSBmb3VuZFVzZXIuZ2V0VXNlcklkKCkNCiAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KCJQYXNzcG9ydC4gQXV0aGVudGljYXRpb24uIEZvdW5kIHVzZXIgbmFtZSAiK2ZvdW5kVXNlck5
 hbWUpDQogICAgICAgICAgICAgICAgICAgICAgICB1c2VyQXV0aGVudGljYXRlZCA9IGF1dGhlbnRpY2F0aW9uU2VydmljZS5hdXRoZW50aWNhdGUoZm91bmRVc2VyTmFtZSkNCiAgICAgICAgICAgIC
 AgICAgICAgZXhjZXB0IEV4Y2VwdGlvbixlcnI6DQogICAgICAgICAgICAgICAgICAgICAgICBwcmludCgiUGFzc3BvcnQuIEF1dGhlbnRpY2F0aW9uLiAic3RyKGVycikrIiBlcnJvciBhZGQgdXNlc
 iIpDQogICAgICAgICAgICAgICAgICAgIHJldHVybiBUcnVlDQoNCiAgICAgICAgICAgICAgICBlbHNlOg0KICAgICAgICAgICAgICAgICAgICBmb3VuZFVzZXJOYW1lID0gZm91bmRVc2VyLmdldFVz
 ZXJJZCgpDQogICAgICAgICAgICAgICAgICAgIHByaW50KCJQYXNzcG9ydC4gQXV0aGVudGljYXRpb24uIFVzZXIgRm91bmQgIitzdHIoZm91bmRVc2VyTmFtZSkpDQogICAgICAgICAgICAgICAgICA
 gIHVzZXJBdXRoZW50aWNhdGVkID0gYXV0aGVudGljYXRpb25TZXJ2aWNlLmF1dGhlbnRpY2F0ZShmb3VuZFVzZXJOYW1lKQ0KICAgICAgICAgICAgICAgICAgICBwcmludCh1c2VyQXV0aGVudGljYX
 RlZCkNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFRydWUNCg0KICAgICAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbixlcnI6DQogICAgICAgICAgICAgICAgcHJpbnQgKCJQYXNzcG9ydC4gQXV0a
 GVudGljYXRpb24uIEVycm9yIG9jY3VycmVkIGR1cmluZyByZXF1ZXN0IHBhcmFtZXRlciBmZXRjaGluZyAiK3N0cihlcnIpKQ0KICAgICAgICANCiAgICBkZWYgcHJlcGFyZUZvclN0ZXAoc2VsZiwg
 Y29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIHJlcXVlc3RQYXJhbWV0ZXJzLCBzdGVwKToNCiAgICAgICAgaWYgKHN0ZXAgPT0gMSk6DQogICAgICAgICAgICBwcmludCAiUGFzc3BvcnQuIFByZXBhcmU
 gZm9yIFN0ZXAgMSBtZXRob2QgY2FsbCBeJiINCiAgICAgICAgICAgIHJldHVybiBUcnVlDQogICAgICAgIGVsc2U6DQogICAgICAgICAgICByZXR1cm4gVHJ1ZQ0KDQogICAgZGVmIGdldEV4dHJhUG
 FyYW1ldGVyc0ZvclN0ZXAoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIHN0ZXApOg0KICAgICAgICByZXR1cm4gTm9uZQ0KDQogICAgZGVmIGdldENvdW50QXV0aGVudGljYXRpb25TdGVwc
 yhzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6DQogICAgICAgIHJldHVybiAxDQoNCiAgICBkZWYgZ2V0UGFnZUZvclN0ZXAoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIHN0ZXAp
 Og0KICAgICAgICBpZiAoc3RlcCA9PSAxKToNCiAgICAgICAgICAgIHJldHVybiAiL2F1dGgvZ2VuZXJpYy9nZW5lcmljbG9naW4ueGh0bWwiDQogICAgICAgIHJldHVybiAiL2F1dGgvZ2VuZXJpYy9
 nZW5lcmljcG9zdGxvZ2luLnhodG1sIg0KDQogICAgZGVmIGxvZ291dChzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcywgcmVxdWVzdFBhcmFtZXRlcnMpOg0KICAgICAgICByZXR1cm4gVHJ1ZQ
 0KDQogICAgZGVmIHByZXBhcmVBdHRyaWJ1dGVzTWFwcGluZyhzZWxmLCByZW1vdGVBdHRyaWJ1dGVzTGlzdCwgbG9jYWxBdHRyaWJ1dGVzTGlzdCk6DQogICAgICAgIHRyeToNCiAgICAgICAgICAgI
 HJlbW90ZUF0dHJpYnV0ZXNMaXN0QXJyYXkgPSBTdHJpbmdIZWxwZXIuc3BsaXQocmVtb3RlQXR0cmlidXRlc0xpc3QsICIsIikNCiAgICAgICAgICAgIGlmIChBcnJheUhlbHBlci5pc0VtcHR5KHJl
 bW90ZUF0dHJpYnV0ZXNMaXN0QXJyYXkpKToNCiAgICAgICAgICAgICAgICBwcmludCgiUGFzc3BvcnQuICBQcmVwYXJlQXR0cmlidXRlc01hcHBpbmcuIFRoZXJlIGlzIG5vIGF0dHJpYnV0ZXMgc3B
 lY2lmaWVkIGluIHJlbW90ZUF0dHJpYnV0ZXNMaXN0IHByb3BlcnR5IikNCiAgICAgICAgICAgICAgICByZXR1cm4gTm9uZQ0KDQogICAgICAgICAgICBsb2NhbEF0dHJpYnV0ZXNMaXN0QXJyYXkgPS
 BTdHJpbmdIZWxwZXIuc3BsaXQobG9jYWxBdHRyaWJ1dGVzTGlzdCwgIiwiKQ0KICAgICAgICAgICAgaWYgKEFycmF5SGVscGVyLmlzRW1wdHkobG9jYWxBdHRyaWJ1dGVzTGlzdEFycmF5KSk6DQogI
 CAgICAgICAgICAgICAgcHJpbnQoIlBhc3Nwb3J0LiBQcmVwYXJlQXR0cmlidXRlc01hcHBpbmcuIFRoZXJlIGlzIG5vIGF0dHJpYnV0ZXMgc3BlY2lmaWVkIGluIGxvY2FsQXR0cmlidXRlc0xpc3Qg
 cHJvcGVydHkiKQ0KICAgICAgICAgICAgICAgIHJldHVybiBOb25lDQoNCiAgICAgICAgICAgIGlmIChsZW4ocmVtb3RlQXR0cmlidXRlc0xpc3RBcnJheSkgIT0gbGVuKGxvY2FsQXR0cmlidXRlc0x
 pc3RBcnJheSkpOg0KICAgICAgICAgICAgICAgIHByaW50KCJQYXNzcG9ydC4gUHJlcGFyZUF0dHJpYnV0ZXNNYXBwaW5nLiBUaGUgbnVtYmVyIG9mIGF0dHJpYnV0ZXMgaW4gcmVtb3RlQXR0cmlidX
 Rlc0xpc3QgYW5kIGxvY2FsQXR0cmlidXRlc0xpc3QgaXNuJ3QgZXF1YWwiKQ0KICAgICAgICAgICAgICAgIHJldHVybiBOb25lDQoNCiAgICAgICAgICAgIGF0dHJpYnV0ZU1hcHBpbmcgPSBJZGVud
 Gl0eUhhc2hNYXAoKQ0KICAgICAgICAgICAgY29udGFpbnNVaWQgPSBGYWxzZQ0KICAgICAgICAgICAgaSA9IDANCiAgICAgICAgICAgIGNvdW50ID0gbGVuKHJlbW90ZUF0dHJpYnV0ZXNMaXN0QXJy
 YXkpDQogICAgICAgICAgICB3aGlsZSAoaSA8IGNvdW50KToNCiAgICAgICAgICAgICAgICByZW1vdGVBdHRyaWJ1dGUgPSBTdHJpbmdIZWxwZXIudG9Mb3dlckNhc2UocmVtb3RlQXR0cmlidXRlc0x
 pc3RBcnJheVtpXSkNCiAgICAgICAgICAgICAgICBsb2NhbEF0dHJpYnV0ZSA9IFN0cmluZ0hlbHBlci50b0xvd2VyQ2FzZShsb2NhbEF0dHJpYnV0ZXNMaXN0QXJyYXlbaV0pDQogICAgICAgICAgIC
 AgICAgYXR0cmlidXRlTWFwcGluZy5wdXQocmVtb3RlQXR0cmlidXRlLCBsb2NhbEF0dHJpYnV0ZSkNCiAgICAgICAgICAgICAgICBpZiAoU3RyaW5nSGVscGVyLmVxdWFsc0lnbm9yZUNhc2UobG9jY
 WxBdHRyaWJ1dGUsICJ1aWQiKSk6DQogICAgICAgICAgICAgICAgICAgIGNvbnRhaW5zVWlkID0gVHJ1ZQ0KDQogICAgICAgICAgICAgICAgaSA9IGkgKyAxDQoNCiAgICAgICAgICAgIGlmIChub3Qg
 Y29udGFpbnNVaWQpOg0KICAgICAgICAgICAgICAgIHByaW50ICJQYXNzcG9ydC4gUHJlcGFyZUF0dHJpYnV0ZXNNYXBwaW5nLiBUaGVyZSBpcyBubyBtYXBwaW5nIHRvIG1hbmRhdG9yeSAndWlkJyB
 hdHRyaWJ1dGUiDQogICAgICAgICAgICAgICAgcmV0dXJuIE5vbmUNCg0KICAgICAgICAgICAgcmV0dXJuIGF0dHJpYnV0ZU1hcHBpbmcNCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbixlcnI6DQogIC
 AgICAgICAgICBwcmludCgiUGFzc3BvcnQuIEV4Y2VwdGlvbiBpbnNpZGUgcHJlcGFyZUF0dHJpYnV0ZXNNYXBwaW5nICIrc3RyKGVycikpDQoNCiAgICBkZWYgZ2V0VWlkUmVtb3RlQXR0cihzZWxmK
 ToNCiAgICAgICAgdHJ5Og0KICAgICAgICAgICAgZm9yIGF0dHJpYnV0ZXNNYXBwaW5nRW50cnkgaW4gc2VsZi5hdHRyaWJ1dGVzTWFwcGluZy5lbnRyeVNldCgpOg0KICAgICAgICAgICAgICAgICAg
 ICAgICAgICAgIHJlbW90ZUF0dHJpYnV0ZSA9IGF0dHJpYnV0ZXNNYXBwaW5nRW50cnkuZ2V0S2V5KCkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb2NhbEF0dHJpYnV0ZSA9IGF0dHJpYnV
 0ZXNNYXBwaW5nRW50cnkuZ2V0VmFsdWUoKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIGxvY2FsQXR0cmlidXRlPT0idWlkIjoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC
 AgcmV0dXJuIHJlbW90ZUF0dHJpYnV0ZQ0KICAgICAgICAgICAgZWxzZToNCiAgICAgICAgICAgICAgICByZXR1cm4gIlBhc3Nwb3J0LiBOb3QgR2V0IFVJRCByZWxhdGVkIHJlbW90ZSBhdHRyaWJ1d
 GUiDQogICAgICAgIGV4Y2VwdCBFeGNlcHRpb24sZXJyOg0KICAgICAgICAgICAgcHJpbnQoIlBhc3Nwb3J0LiBFeGNlcHRpb24gaW5zaWRlIGdldFVpZFJlbW90ZUF0dHIgIitzdHIoZXJyKSkNCg==
oxScriptType: person_authentication
programmingLanguage: python

dn: inum=%(inumOrg)s!CB5B.3211,ou=scripts,o=%(inumOrg)s,o=gluu
objectClass: oxCustomScript
objectClass: top
description: Permission Dynamic Scope script
displayName: dynamic_permission
gluuStatus: false
inum: %(inumOrg)s!CB5B.3211
oxLevel: 100
oxModuleProperty: {"value1":"location_type","value2":"ldap","description":""}
oxRevision: 2
oxScript:: IyBveEF1dGggaXMgYXZhaWxhYmxlIHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoMjAwOCkuIFNlZSBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUIGZvciBmdWxsIHRleHQuD
 QojIENvcHlyaWdodCAoYykgMjAxNiwgR2x1dQ0KIw0KIyBBdXRob3I6IFl1cml5IE1vdmNoYW4NCiMNCg0KZnJvbSBvcmcueGRpLm1vZGVsLmN1c3RvbS5zY3JpcHQudHlwZS5zY29wZSBpbXBvcnQg
 RHluYW1pY1Njb3BlVHlwZQ0KZnJvbSBvcmcueGRpLm94YXV0aC5zZXJ2aWNlIGltcG9ydCBVc2VyU2VydmljZQ0KZnJvbSBvcmcueGRpLnV0aWwgaW1wb3J0IFN0cmluZ0hlbHBlciwgQXJyYXlIZWx
 wZXINCmZyb20gamF2YS51dGlsIGltcG9ydCBBcnJheXMsIEFycmF5TGlzdA0KDQppbXBvcnQgamF2YQ0KDQpjbGFzcyBEeW5hbWljU2NvcGUoRHluYW1pY1Njb3BlVHlwZSk6DQogICAgZGVmIF9faW
 5pdF9fKHNlbGYsIGN1cnJlbnRUaW1lTWlsbGlzKToNCiAgICAgICAgc2VsZi5jdXJyZW50VGltZU1pbGxpcyA9IGN1cnJlbnRUaW1lTWlsbGlzDQoNCiAgICBkZWYgaW5pdChzZWxmLCBjb25maWd1c
 mF0aW9uQXR0cmlidXRlcyk6DQogICAgICAgIHByaW50ICJQZXJtaXNzaW9uIGR5bmFtaWMgc2NvcGUuIEluaXRpYWxpemF0aW9uIg0KDQogICAgICAgIHByaW50ICJQZXJtaXNzaW9uIGR5bmFtaWMg
 c2NvcGUuIEluaXRpYWxpemVkIHN1Y2Nlc3NmdWxseSINCg0KICAgICAgICByZXR1cm4gVHJ1ZSAgIA0KDQogICAgZGVmIGRlc3Ryb3koc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOg0KICA
 gICAgICBwcmludCAiUGVybWlzc2lvbiBkeW5hbWljIHNjb3BlLiBEZXN0cm95Ig0KICAgICAgICBwcmludCAiUGVybWlzc2lvbiBkeW5hbWljIHNjb3BlLiBEZXN0cm95ZWQgc3VjY2Vzc2Z1bGx5Ig
 0KICAgICAgICByZXR1cm4gVHJ1ZSAgIA0KDQogICAgIyBVcGRhdGUgSnNvbiBXZWIgdG9rZW4gYmVmb3JlIHNpZ25pbmcvZW5jcnlwcmluZyBpdA0KICAgICMgICBkeW5hbWljU2NvcGVDb250ZXh0I
 GlzIG9yZy54ZGkub3hhdXRoLnNlcnZpY2UuZXh0ZXJuYWwuY29udGV4dC5EeW5hbWljU2NvcGVFeHRlcm5hbENvbnRleHQNCiAgICAjICAgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMgaXMgamF2YS51
 dGlsLk1hcDxTdHJpbmcsIFNpbXBsZUN1c3RvbVByb3BlcnR5Pg0KICAgIGRlZiB1cGRhdGUoc2VsZiwgZHluYW1pY1Njb3BlQ29udGV4dCwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOg0KICAgICA
 gICBwcmludCAiUGVybWlzc2lvbiBkeW5hbWljIHNjb3BlIHNjb3BlLiBVcGRhdGUgbWV0aG9kIg0KDQogICAgICAgIGR5bmFtaWNTY29wZXMgPSBkeW5hbWljU2NvcGVDb250ZXh0LmdldER5bmFtaW
 NTY29wZXMoKQ0KICAgICAgICBhdXRob3JpemF0aW9uR3JhbnQgPSBkeW5hbWljU2NvcGVDb250ZXh0LmdldEF1dGhvcml6YXRpb25HcmFudCgpDQogICAgICAgIHVzZXIgPSBkeW5hbWljU2NvcGVDb
 250ZXh0LmdldFVzZXIoKQ0KICAgICAgICBqc29uV2ViUmVzcG9uc2UgPSBkeW5hbWljU2NvcGVDb250ZXh0LmdldEpzb25XZWJSZXNwb25zZSgpDQogICAgICAgIGNsYWltcyA9IGpzb25XZWJSZXNw
 b25zZS5nZXRDbGFpbXMoKQ0KDQogICAgICAgICMgSXRlcmF0ZSB0aHJvdWdoIGxpc3Qgb2YgZHluYW1pYyBzY29wZXMgaW4gb3JkZXIgdG8gYWRkIGN1c3RvbSBzY29wZXMgaWYgbmVlZGVkDQogICA
 gICAgIHByaW50ICJQZXJtaXNzaW9uIGR5bmFtaWMgc2NvcGUuIER5bmFtaWMgc2NvcGVzOiIsIGR5bmFtaWNTY29wZXMNCiAgICAgICAgZm9yIGR5bmFtaWNTY29wZSBpbiBkeW5hbWljU2NvcGVzOg
 0KDQogICAgICAgICAgICAjIEFkZCByb2xlICBpZiB0aGVyZSBpcyBzY29wZSA9IHBlcm1pc3Npb24NCiAgICAgICAgICAgIGlmIChTdHJpbmdIZWxwZXIuZXF1YWxzSWdub3JlQ2FzZShkeW5hbWljU
 2NvcGUsICJwZXJtaXNzaW9uIikpOg0KICAgICAgICAgICAgICAgIHJvbGVzID0gdXNlclNlcnZpY2UuZ2V0Q3VzdG9tQXR0cmlidXRlKHVzZXIsICJyb2xlIik7DQogICAgICAgICAgICAgICAgaWYg
 cm9sZXMgIT0gTm9uZToNCiAgICAgICAgICAgICAgICAgICAgY2xhaW1zLnNldENsYWltKCJyb2xlIiwgcm9sZS5nZXRWYWx1ZXMoKSkNCiAgICAgICAgICAgICAgICBjb250aW51ZQ0KDQogICAgICA
 gIHJldHVybiBUcnVlDQoNCiAgICBkZWYgbG9nb3V0KHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCByZXF1ZXN0UGFyYW1ldGVycyk6DQogICAgICAgIHJldHVybiBUcnVlDQoNCiAgICBkZW
 YgZ2V0QXBpVmVyc2lvbihzZWxmKToNCiAgICAgICAgcmV0dXJuIDENCg==
oxScriptType: dynamic_scope
programmingLanguage: python

dn: inum=%(inumOrg)s!0011!031C.4A65,ou=scripts,o=%(inumOrg)s,o=gluu
objectClass: top
objectClass: oxCustomScript
description: Sample Id Generator script
displayName: id_generator
gluuStatus: false
inum: %(inumOrg)s!0011!031C.4A65
oxLevel: 100
oxModuleProperty: {"value1":"location_type","value2":"ldap","description":""}
oxRevision: 1
oxScript:: IyBveEF1dGggaXMgYXZhaWxhYmxlIHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoMjAwOCkuIFNlZSBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUIGZvciBmdWxsIHRleHQuC
 iMgQ29weXJpZ2h0IChjKSAyMDE2LCBHbHV1CiMKIyBBdXRob3I6IFl1cml5IE1vdmNoYW4KIwoKZnJvbSBvcmcueGRpLm1vZGVsLmN1c3RvbS5zY3JpcHQudHlwZS5pZCBpbXBvcnQgSWRHZW5lcmF0
 b3JUeXBlCmZyb20gb3JnLnhkaS51dGlsIGltcG9ydCBTdHJpbmdIZWxwZXIsIEFycmF5SGVscGVyCmZyb20gamF2YS51dGlsIGltcG9ydCBBcnJheXMsIEFycmF5TGlzdAoKaW1wb3J0IGphdmEKCmN
 sYXNzIElkR2VuZXJhdG9yKElkR2VuZXJhdG9yVHlwZSk6CiAgICBkZWYgX19pbml0X18oc2VsZiwgY3VycmVudFRpbWVNaWxsaXMpOgogICAgICAgIHNlbGYuY3VycmVudFRpbWVNaWxsaXMgPSBjdX
 JyZW50VGltZU1pbGxpcwoKICAgIGRlZiBpbml0KHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKToKICAgICAgICBwcmludCAiSWQgZ2VuZXJhdG9yLiBJbml0aWFsaXphdGlvbiIKICAgICAgI
 CBwcmludCAiSWQgZ2VuZXJhdG9yLiBJbml0aWFsaXplZCBzdWNjZXNzZnVsbHkiCgogICAgICAgIHJldHVybiBUcnVlICAgCgogICAgZGVmIGRlc3Ryb3koc2VsZiwgY29uZmlndXJhdGlvbkF0dHJp
 YnV0ZXMpOgogICAgICAgIHByaW50ICJJZCBnZW5lcmF0b3IuIERlc3Ryb3kiCiAgICAgICAgcHJpbnQgIklkIGdlbmVyYXRvci4gRGVzdHJveWVkIHN1Y2Nlc3NmdWxseSIKICAgICAgICByZXR1cm4
 gVHJ1ZSAgIAoKICAgIGRlZiBnZXRBcGlWZXJzaW9uKHNlbGYpOgogICAgICAgIHJldHVybiAxCgogICAgIyBJZCBnZW5lcmF0b3IgaW5pdCBtZXRob2QKICAgICMgICBhcHBJZCBpcyBhcHBsaWNhdG
 lvbiBJZAogICAgIyAgIGlkVHlwZSBpcyBJZCBUeXBlCiAgICAjICAgaWRQcmVmaXggaXMgSWQgUHJlZml4CiAgICAjICAgdXNlciBpcyBvcmcuZ2x1dS5veHRydXN0Lm1vZGVsLkdsdXVDdXN0b21QZ
 XJzb24KICAgICMgICBjb25maWd1cmF0aW9uQXR0cmlidXRlcyBpcyBqYXZhLnV0aWwuTWFwPFN0cmluZywgU2ltcGxlQ3VzdG9tUHJvcGVydHk+CiAgICBkZWYgZ2VuZXJhdGVJZChzZWxmLCBhcHBJ
 ZCwgaWRUeXBlLCBpZFByZWZpeCwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOgogICAgICAgIHByaW50ICJJZCBnZW5lcmF0b3IuIEdlbmVyYXRlIElkIgogICAgICAgIHByaW50ICJJZCBnZW5lcmF
 0b3IuIEdlbmVyYXRlIElkLiBBcHBJZDogJyIsIGFwcElkLCAiJywgSWRUeXBlOiAnIiwgaWRUeXBlLCAiJywgSWRQcmVmaXg6ICciLCBpZFByZWZpeCwgIiciCgogICAgICAgICMgUmV0dXJuIE5vbm
 Ugb3IgZW1wdHkgc3RyaW5nIHRvIHRyaWdnZXIgZGVmYXVsdCBJZCBnZW5lcmF0aW9uIG1ldGhvZAogICAgICAgIHJldHVybiBOb25lCg==
oxScriptType: id_generator
programmingLanguage: python

dn: inum=%(inumOrg)s!0011!031C.5621,ou=scripts,o=%(inumOrg)s,o=gluu
objectClass: top
objectClass: oxCustomScript
description: Sample Dynamic Scope script
displayName: dynamic_scope
gluuStatus: false
inum: %(inumOrg)s!0011!031C.5621
oxLevel: 100
oxModuleProperty: {"value1":"location_type","value2":"ldap","description":""}
oxRevision: 1
oxScript:: IyBveEF1dGggaXMgYXZhaWxhYmxlIHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoMjAwOCkuIFNlZSBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUIGZvciBmdWxsIHRleHQuD
 QojIENvcHlyaWdodCAoYykgMjAxNiwgR2x1dQ0KIw0KIyBBdXRob3I6IFl1cml5IE1vdmNoYW4NCiMNCg0KZnJvbSBvcmcueGRpLm1vZGVsLmN1c3RvbS5zY3JpcHQudHlwZS5zY29wZSBpbXBvcnQg
 RHluYW1pY1Njb3BlVHlwZQ0KZnJvbSBvcmcueGRpLnV0aWwgaW1wb3J0IFN0cmluZ0hlbHBlciwgQXJyYXlIZWxwZXINCmZyb20gamF2YS51dGlsIGltcG9ydCBBcnJheXMsIEFycmF5TGlzdA0KDQp
 pbXBvcnQgamF2YQ0KDQpjbGFzcyBEeW5hbWljU2NvcGUoRHluYW1pY1Njb3BlVHlwZSk6DQogICAgZGVmIF9faW5pdF9fKHNlbGYsIGN1cnJlbnRUaW1lTWlsbGlzKToNCiAgICAgICAgc2VsZi5jdX
 JyZW50VGltZU1pbGxpcyA9IGN1cnJlbnRUaW1lTWlsbGlzDQoNCiAgICBkZWYgaW5pdChzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6DQogICAgICAgIHByaW50ICJEeW5hbWljIHNjb3BlL
 iBJbml0aWFsaXphdGlvbiINCg0KICAgICAgICBwcmludCAiRHluYW1pYyBzY29wZS4gSW5pdGlhbGl6ZWQgc3VjY2Vzc2Z1bGx5Ig0KDQogICAgICAgIHJldHVybiBUcnVlICAgDQoNCiAgICBkZWYg
 ZGVzdHJveShzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6DQogICAgICAgIHByaW50ICJEeW5hbWljIHNjb3BlLiBEZXN0cm95Ig0KICAgICAgICBwcmludCAiRHluYW1pYyBzY29wZS4gRGV
 zdHJveWVkIHN1Y2Nlc3NmdWxseSINCiAgICAgICAgcmV0dXJuIFRydWUgICANCg0KICAgICMgVXBkYXRlIEpzb24gV2ViIHRva2VuIGJlZm9yZSBzaWduaW5nL2VuY3J5cHJpbmcgaXQNCiAgICAjIC
 AgZHluYW1pY1Njb3BlQ29udGV4dCBpcyBvcmcueGRpLm94YXV0aC5zZXJ2aWNlLmV4dGVybmFsLmNvbnRleHQuRHluYW1pY1Njb3BlRXh0ZXJuYWxDb250ZXh0DQogICAgIyAgIGNvbmZpZ3VyYXRpb
 25BdHRyaWJ1dGVzIGlzIGphdmEudXRpbC5NYXA8U3RyaW5nLCBTaW1wbGVDdXN0b21Qcm9wZXJ0eT4NCiAgICBkZWYgdXBkYXRlKHNlbGYsIGR5bmFtaWNTY29wZUNvbnRleHQsIGNvbmZpZ3VyYXRp
 b25BdHRyaWJ1dGVzKToNCiAgICAgICAgcHJpbnQgIkR5bmFtaWMgc2NvcGUuIFVwZGF0ZSBtZXRob2QiDQoNCiAgICAgICAgZHluYW1pY1Njb3BlcyA9IGR5bmFtaWNTY29wZUNvbnRleHQuZ2V0RHl
 uYW1pY1Njb3BlcygpDQogICAgICAgIGF1dGhvcml6YXRpb25HcmFudCA9IGR5bmFtaWNTY29wZUNvbnRleHQuZ2V0QXV0aG9yaXphdGlvbkdyYW50KCkNCiAgICAgICAgdXNlciA9IGR5bmFtaWNTY2
 9wZUNvbnRleHQuZ2V0VXNlcigpDQogICAgICAgIGpzb25XZWJSZXNwb25zZSA9IGR5bmFtaWNTY29wZUNvbnRleHQuZ2V0SnNvbldlYlJlc3BvbnNlKCkNCiAgICAgICAgY2xhaW1zID0ganNvbldlY
 lJlc3BvbnNlLmdldENsYWltcygpDQoNCiAgICAgICAgIyBJdGVyYXRlIHRocm91Z2ggbGlzdCBvZiBkeW5hbWljIHNjb3BlcyBpbiBvcmRlciB0byBhZGQgY3VzdG9tIHNjb3BlcyBpZiBuZWVkZWQN
 CiAgICAgICAgcHJpbnQgIkR5bmFtaWMgc2NvcGUuIER5bmFtaWMgc2NvcGVzOiIsIGR5bmFtaWNTY29wZXMNCiAgICAgICAgZm9yIGR5bmFtaWNTY29wZSBpbiBkeW5hbWljU2NvcGVzOg0KICAgICA
 gICAgICAgIyBBZGQgb3JnYW5pemF0aW9uIG5hbWUgaWYgdGhlcmUgaXMgc2NvcGUgPSBvcmdfbmFtZQ0KICAgICAgICAgICAgaWYgKFN0cmluZ0hlbHBlci5lcXVhbHNJZ25vcmVDYXNlKGR5bmFtaW
 NTY29wZSwgIm9yZ19uYW1lIikpOg0KICAgICAgICAgICAgICAgIGNsYWltcy5zZXRDbGFpbSgib3JnX25hbWUiLCAiR2x1dSwgSW5jLiIpDQogICAgICAgICAgICAgICAgY29udGludWUNCg0KICAgI
 CAgICAgICAgIyBBZGQgd29yayBwaG9uZSBpZiB0aGVyZSBpcyBzY29wZSA9IHdvcmtfcGhvbmUNCiAgICAgICAgICAgIGlmIChTdHJpbmdIZWxwZXIuZXF1YWxzSWdub3JlQ2FzZShkeW5hbWljU2Nv
 cGUsICJ3b3JrX3Bob25lIikpOg0KICAgICAgICAgICAgICAgIHdvcmtQaG9uZSA9IHVzZXIuZ2V0QXR0cmlidXRlKCJ0ZWxlcGhvbmVOdW1iZXIiKTsNCiAgICAgICAgICAgICAgICBpZiAoU3RyaW5
 nSGVscGVyLmlzTm90RW1wdHkod29ya1Bob25lKSk6DQogICAgICAgICAgICAgICAgICAgIGNsYWltcy5zZXRDbGFpbSgid29ya19waG9uZSIsIHdvcmtQaG9uZSkNCiAgICAgICAgICAgICAgICBjb2
 50aW51ZQ0KDQogICAgICAgIHJldHVybiBUcnVlDQoNCiAgICBkZWYgbG9nb3V0KHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCByZXF1ZXN0UGFyYW1ldGVycyk6DQogICAgICAgIHJldHVyb
 iBUcnVlDQoNCiAgICBkZWYgZ2V0QXBpVmVyc2lvbihzZWxmKToNCiAgICAgICAgcmV0dXJuIDENCg==
oxScriptType: dynamic_scope
programmingLanguage: python

dn: inum=%(inumOrg)s!0011!13D3.E7AD,ou=scripts,o=%(inumOrg)s,o=gluu
objectClass: top
objectClass: oxCustomScript
description: Sample Cache Refresh script
displayName: cache_refresh
gluuStatus: false
inum: %(inumOrg)s!0011!13D3.E7AD
oxLevel: 100
oxModuleProperty: {"value1":"location_type","value2":"ldap","description":""}
oxRevision: 1
oxScript:: IyBveEF1dGggaXMgYXZhaWxhYmxlIHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoMjAwOCkuIFNlZSBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUIGZvciBmdWxsIHRleHQuC
 iMgQ29weXJpZ2h0IChjKSAyMDE2LCBHbHV1CiMKIyBBdXRob3I6IFl1cml5IE1vdmNoYW4KIwoKZnJvbSBvcmcueGRpLm1vZGVsLmN1c3RvbS5zY3JpcHQudHlwZS51c2VyIGltcG9ydCBDYWNoZVJl
 ZnJlc2hUeXBlCmZyb20gb3JnLnhkaS51dGlsIGltcG9ydCBTdHJpbmdIZWxwZXIsIEFycmF5SGVscGVyCmZyb20gamF2YS51dGlsIGltcG9ydCBBcnJheXMsIEFycmF5TGlzdApmcm9tIG9yZy5nbHV
 1Lm94dHJ1c3QubW9kZWwgaW1wb3J0IEdsdXVDdXN0b21BdHRyaWJ1dGUKCmltcG9ydCBqYXZhCgpjbGFzcyBDYWNoZVJlZnJlc2goQ2FjaGVSZWZyZXNoVHlwZSk6CiAgICBkZWYgX19pbml0X18oc2
 VsZiwgY3VycmVudFRpbWVNaWxsaXMpOgogICAgICAgIHNlbGYuY3VycmVudFRpbWVNaWxsaXMgPSBjdXJyZW50VGltZU1pbGxpcwoKICAgIGRlZiBpbml0KHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRya
 WJ1dGVzKToKICAgICAgICBwcmludCAiQ2FjaGUgcmVmcmVzaC4gSW5pdGlhbGl6YXRpb24iCiAgICAgICAgcHJpbnQgIkNhY2hlIHJlZnJlc2guIEluaXRpYWxpemVkIHN1Y2Nlc3NmdWxseSIKCiAg
 ICAgICAgcmV0dXJuIFRydWUgICAKCiAgICBkZWYgZGVzdHJveShzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6CiAgICAgICAgcHJpbnQgIkNhY2hlIHJlZnJlc2guIERlc3Ryb3kiCiAgICA
 gICAgcHJpbnQgIkNhY2hlIHJlZnJlc2guIERlc3Ryb3llZCBzdWNjZXNzZnVsbHkiCiAgICAgICAgcmV0dXJuIFRydWUgICAKCiAgICAjIFVwZGF0ZSB1c2VyIGVudHJ5IGJlZm9yZSBwZXJzaXN0IG
 l0CiAgICAjICAgdXNlciBpcyBvcmcuZ2x1dS5veHRydXN0Lm1vZGVsLkdsdXVDdXN0b21QZXJzb24KICAgICMgICBjb25maWd1cmF0aW9uQXR0cmlidXRlcyBpcyBqYXZhLnV0aWwuTWFwPFN0cmluZ
 ywgU2ltcGxlQ3VzdG9tUHJvcGVydHk+CiAgICBkZWYgdXBkYXRlVXNlcihzZWxmLCB1c2VyLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6CiAgICAgICAgcHJpbnQgIkNhY2hlIHJlZnJlc2guIFVw
 ZGF0ZVVzZXIgbWV0aG9kIgoKICAgICAgICBhdHRyaWJ1dGVzID0gdXNlci5nZXRDdXN0b21BdHRyaWJ1dGVzKCkKCiAgICAgICAgIyBBZGQgbmV3IGF0dHJpYnV0ZSBwcmVmZXJyZWRMYW5ndWFnZQo
 gICAgICAgIGF0dHJQcmVmZmVyZWRMYW5ndWFnZSA9IEdsdXVDdXN0b21BdHRyaWJ1dGUoInByZWZlcnJlZExhbmd1YWdlIiwgImVuLXVzIikKICAgICAgICBhdHRyaWJ1dGVzLmFkZChhdHRyUHJlZm
 ZlcmVkTGFuZ3VhZ2UpCgogICAgICAgICMgQWRkIG5ldyBhdHRyaWJ1dGUgdXNlclBhc3N3b3JkCiAgICAgICAgYXR0clVzZXJQYXNzd29yZCA9IEdsdXVDdXN0b21BdHRyaWJ1dGUoInVzZXJQYXNzd
 29yZCIsICJ0ZXN0IikKICAgICAgICBhdHRyaWJ1dGVzLmFkZChhdHRyVXNlclBhc3N3b3JkKQoKICAgICAgICAjIFVwZGF0ZSBnaXZlbk5hbWUgYXR0cmlidXRlCiAgICAgICAgZm9yIGF0dHJpYnV0
 ZSBpbiBhdHRyaWJ1dGVzOgogICAgICAgICAgICBhdHRyTmFtZSA9IGF0dHJpYnV0ZS5nZXROYW1lKCkKICAgICAgICAgICAgaWYgKCgiZ2l2ZW5uYW1lIiA9PSBTdHJpbmdIZWxwZXIudG9Mb3dlckN
 hc2UoYXR0ck5hbWUpKSBhbmQgU3RyaW5nSGVscGVyLmlzTm90RW1wdHkoYXR0cmlidXRlLmdldFZhbHVlKCkpKToKICAgICAgICAgICAgICAgIGF0dHJpYnV0ZS5zZXRWYWx1ZShTdHJpbmdIZWxwZX
 IucmVtb3ZlTXVsdGlwbGVTcGFjZXMoYXR0cmlidXRlLmdldFZhbHVlKCkpICsgIiAodXBkYXRlZCkiKQoKICAgICAgICByZXR1cm4gVHJ1ZQoKICAgIGRlZiBnZXRBcGlWZXJzaW9uKHNlbGYpOgogI
 CAgICAgIHJldHVybiAxCg==
oxScriptType: cache_refresh
programmingLanguage: python

dn: inum=%(inumOrg)s!0011!14AF.A70C,ou=scripts,o=%(inumOrg)s,o=gluu
objectClass: top
objectClass: oxCustomScript
description: CAS authentication module
displayName: cas
gluuStatus: false
inum: %(inumOrg)s!0011!14AF.A70C
oxConfigurationProperty: {"value1":"cas_map_user","value2":"true","description":""}
oxConfigurationProperty: {"value1":"cas_renew_opt","value2":"false","description":""}
oxConfigurationProperty: {"value1":"cas_host","value2":"https://%(hostname)s/cas","description":""}
oxLevel: 30
oxModuleProperty: {"value1":"usage_type","value2":"interactive","description":""}
oxModuleProperty: {"value1":"location_type","value2":"ldap","description":""}
oxRevision: 1
oxScript:: IyBveEF1dGggaXMgYXZhaWxhYmxlIHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoMjAwOCkuIFNlZSBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUIGZvciBmdWxsIHRleHQuC
 iMgQ29weXJpZ2h0IChjKSAyMDE2LCBHbHV1CiMKIyBBdXRob3I6IFl1cml5IE1vdmNoYW4KIwoKaW1wb3J0IHN5cwoKZnJvbSBvcmcuamJvc3Muc2VhbS5jb250ZXh0cyBpbXBvcnQgQ29udGV4dHMK
 ZnJvbSBvcmcuamJvc3Muc2VhbS5zZWN1cml0eSBpbXBvcnQgSWRlbnRpdHkKZnJvbSBqYXZheC5mYWNlcy5jb250ZXh0IGltcG9ydCBGYWNlc0NvbnRleHQKZnJvbSBvcmcueGRpLm1vZGVsLmN1c3R
 vbS5zY3JpcHQudHlwZS5hdXRoIGltcG9ydCBQZXJzb25BdXRoZW50aWNhdGlvblR5cGUKZnJvbSBvcmcueGRpLm94YXV0aC5zZXJ2aWNlIGltcG9ydCBVc2VyU2VydmljZQpmcm9tIG9yZy54ZGkub3
 hhdXRoLnNlcnZpY2UgaW1wb3J0IEF1dGhlbnRpY2F0aW9uU2VydmljZQpmcm9tIG9yZy54ZGkub3hhdXRoLnNlcnZpY2UubmV0IGltcG9ydCBIdHRwU2VydmljZQpmcm9tIG9yZy54ZGkudXRpbCBpb
 XBvcnQgU3RyaW5nSGVscGVyCmZyb20gb3JnLnhkaS51dGlsIGltcG9ydCBBcnJheUhlbHBlcgpmcm9tIG9yZy5hcGFjaGUuaHR0cC5wYXJhbXMgaW1wb3J0IENvcmVDb25uZWN0aW9uUE5hbWVzCmZy
 b20gamF2YS51dGlsIGltcG9ydCBBcnJheXMKZnJvbSBqYXZhLnV0aWwgaW1wb3J0IEhhc2hNYXAKCgpjbGFzcyBQZXJzb25BdXRoZW50aWNhdGlvbihQZXJzb25BdXRoZW50aWNhdGlvblR5cGUpOgo
 gICAgZGVmIF9faW5pdF9fKHNlbGYsIGN1cnJlbnRUaW1lTWlsbGlzKToKICAgICAgICBzZWxmLmN1cnJlbnRUaW1lTWlsbGlzID0gY3VycmVudFRpbWVNaWxsaXMKCiAgICBkZWYgaW5pdChzZWxmLC
 Bjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6CiAgICAgICAgcHJpbnQgIkNBUzIuIEluaXRpYWxpemF0aW9uIgogICAgICAgIHByaW50ICJDQVMyLiBJbml0aWFsaXplZCBzdWNjZXNzZnVsbHkiCiAgI
 CAgICAgcmV0dXJuIFRydWUgICAKCiAgICBkZWYgZGVzdHJveShzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6CiAgICAgICAgcHJpbnQgIkNBUzIuIERlc3Ryb3kiCiAgICAgICAgcHJpbnQg
 IkNBUzIuIERlc3Ryb3llZCBzdWNjZXNzZnVsbHkiCiAgICAgICAgcmV0dXJuIFRydWUKCiAgICBkZWYgZ2V0QXBpVmVyc2lvbihzZWxmKToKICAgICAgICByZXR1cm4gMQoKICAgIGRlZiBpc1ZhbGl
 kQXV0aGVudGljYXRpb25NZXRob2Qoc2VsZiwgdXNhZ2VUeXBlLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6CiAgICAgICAgcHJpbnQgIkNBUzIuIFJlc3QgQVBJIGF1dGhlbnRpY2F0ZSBpc1ZhbG
 lkQXV0aGVudGljYXRpb25NZXRob2QiCgogICAgICAgIGlmIChub3QgKGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmNvbnRhaW5zS2V5KCJjYXNfdmFsaWRhdGlvbl91cmkiKSBhbmQKICAgICAgICAgI
 CAgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuY29udGFpbnNLZXkoImNhc192YWxpZGF0aW9uX3BhdHRlcm4iKSBhbmQKICAgICAgICAgICAgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuY29udGFpbnNL
 ZXkoImNhc192YWxpZGF0aW9uX3RpbWVvdXQiKSkpOgogICAgICAgICAgICByZXR1cm4gVHJ1ZQoKICAgICAgICBjYXNfdmFsaWRhdGlvbl91cmkgPSBjb25maWd1cmF0aW9uQXR0cmlidXRlcy5nZXQ
 oImNhc192YWxpZGF0aW9uX3VyaSIpLmdldFZhbHVlMigpCiAgICAgICAgY2FzX3ZhbGlkYXRpb25fcGF0dGVybiA9IGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmdldCgiY2FzX3ZhbGlkYXRpb25fcG
 F0dGVybiIpLmdldFZhbHVlMigpCiAgICAgICAgY2FzX3ZhbGlkYXRpb25fdGltZW91dCA9IGludChjb25maWd1cmF0aW9uQXR0cmlidXRlcy5nZXQoImNhc192YWxpZGF0aW9uX3RpbWVvdXQiKS5nZ
 XRWYWx1ZTIoKSkgKiAxMDAwCgogICAgICAgIGh0dHBTZXJ2aWNlID0gSHR0cFNlcnZpY2UuaW5zdGFuY2UoKTsKCiAgICAgICAgaHR0cF9jbGllbnQgPSBodHRwU2VydmljZS5nZXRIdHRwc0NsaWVu
 dCgpOwogICAgICAgIGh0dHBfY2xpZW50X3BhcmFtcyA9IGh0dHBfY2xpZW50LmdldFBhcmFtcygpOwogICAgICAgIGh0dHBfY2xpZW50X3BhcmFtcy5zZXRJbnRQYXJhbWV0ZXIoQ29yZUNvbm5lY3R
 pb25QTmFtZXMuQ09OTkVDVElPTl9USU1FT1VULCBjYXNfdmFsaWRhdGlvbl90aW1lb3V0KTsKCiAgICAgICAgdHJ5OgogICAgICAgICAgICBodHRwX3NlcnZpY2VfcmVzcG9uc2UgPSBodHRwU2Vydm
 ljZS5leGVjdXRlR2V0KGh0dHBfY2xpZW50LCBjYXNfdmFsaWRhdGlvbl91cmkpCiAgICAgICAgICAgIGh0dHBfcmVzcG9uc2UgPSBodHRwX3NlcnZpY2VfcmVzcG9uc2UuZ2V0SHR0cFJlc3BvbnNlK
 CkKICAgICAgICBleGNlcHQ6CiAgICAgICAgICAgIHByaW50ICJDQVMyLiBSZXN0IEFQSSBhdXRoZW50aWNhdGUgaXNWYWxpZEF1dGhlbnRpY2F0aW9uTWV0aG9kLiBFeGNlcHRpb246ICIsIHN5cy5l
 eGNfaW5mbygpWzFdCiAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICB0cnk6CiAgICAgICAgICAgIGlmIChodHRwX3Jlc3BvbnNlLmdldFN0YXR1c0xpbmUoKS5nZXRTdGF0dXNDb2RlKCk
 gIT0gMjAwKToKICAgICAgICAgICAgICAgIHByaW50ICJDQVMyLiBSZXN0IEFQSSBhdXRoZW50aWNhdGUgaXNWYWxpZEF1dGhlbnRpY2F0aW9uTWV0aG9kLiBHZXQgaW52YWxpZCByZXNwb25zZSBmcm
 9tIENBUzIgc2VydmVyOiAiLCBzdHIoaHR0cF9yZXNwb25zZS5nZXRTdGF0dXNMaW5lKCkuZ2V0U3RhdHVzQ29kZSgpKQogICAgICAgICAgICAgICAgaHR0cFNlcnZpY2UuY29uc3VtZShodHRwX3Jlc
 3BvbnNlKQogICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlCiAgICAKICAgICAgICAgICAgdmFsaWRhdGlvbl9yZXNwb25zZV9ieXRlcyA9IGh0dHBTZXJ2aWNlLmdldFJlc3BvbnNlQ29udGVudCho
 dHRwX3Jlc3BvbnNlKQogICAgICAgICAgICB2YWxpZGF0aW9uX3Jlc3BvbnNlX3N0cmluZyA9IGh0dHBTZXJ2aWNlLmNvbnZlcnRFbnRpdHlUb1N0cmluZyh2YWxpZGF0aW9uX3Jlc3BvbnNlX2J5dGV
 zKQogICAgICAgICAgICBodHRwU2VydmljZS5jb25zdW1lKGh0dHBfcmVzcG9uc2UpCiAgICAgICAgZmluYWxseToKICAgICAgICAgICAgaHR0cF9zZXJ2aWNlX3Jlc3BvbnNlLmNsb3NlQ29ubmVjdG
 lvbigpCgogICAgICAgIGlmICh2YWxpZGF0aW9uX3Jlc3BvbnNlX3N0cmluZyA9PSBOb25lIG9yIHZhbGlkYXRpb25fcmVzcG9uc2Vfc3RyaW5nLmZpbmQoY2FzX3ZhbGlkYXRpb25fcGF0dGVybikgP
 T0gLTEpOgogICAgICAgICAgICBwcmludCAiQ0FTMi4gUmVzdCBBUEkgYXV0aGVudGljYXRlIGlzVmFsaWRBdXRoZW50aWNhdGlvbk1ldGhvZC4gR2V0IGludmFsaWQgbG9naW4gcGFnZSBmcm9tIENB
 UzIgc2VydmVyOiIKICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgICAgIHJldHVybiBUcnVlCgogICAgZGVmIGdldEFsdGVybmF0aXZlQXV0aGVudGljYXRpb25NZXRob2Qoc2VsZiwgdXNhZ2V
 UeXBlLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6CiAgICAgICAgY2FzX2FsdF9hdXRoX21vZGUgPSBjb25maWd1cmF0aW9uQXR0cmlidXRlcy5nZXQoImNhc19hbHRfYXV0aF9tb2RlIikuZ2V0Vm
 FsdWUyKCkKICAgICAgICByZXR1cm4gY2FzX2FsdF9hdXRoX21vZGUKCiAgICBkZWYgYXV0aGVudGljYXRlKHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCByZXF1ZXN0UGFyYW1ldGVycywgc
 3RlcCk6CiAgICAgICAgY29udGV4dCA9IENvbnRleHRzLmdldEV2ZW50Q29udGV4dCgpCiAgICAgICAgYXV0aGVudGljYXRpb25TZXJ2aWNlID0gQXV0aGVudGljYXRpb25TZXJ2aWNlLmluc3RhbmNl
 KCkKICAgICAgICB1c2VyU2VydmljZSA9IFVzZXJTZXJ2aWNlLmluc3RhbmNlKCkKICAgICAgICBodHRwU2VydmljZSA9IEh0dHBTZXJ2aWNlLmluc3RhbmNlKCk7CgogICAgICAgIGNhc19ob3N0ID0
 gY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuZ2V0KCJjYXNfaG9zdCIpLmdldFZhbHVlMigpCiAgICAgICAgY2FzX21hcF91c2VyID0gU3RyaW5nSGVscGVyLnRvQm9vbGVhbihjb25maWd1cmF0aW9uQX
 R0cmlidXRlcy5nZXQoImNhc19tYXBfdXNlciIpLmdldFZhbHVlMigpLCBGYWxzZSkKICAgICAgICBjYXNfcmVuZXdfb3B0ID0gU3RyaW5nSGVscGVyLnRvQm9vbGVhbihjb25maWd1cmF0aW9uQXR0c
 mlidXRlcy5nZXQoImNhc19yZW5ld19vcHQiKS5nZXRWYWx1ZTIoKSwgRmFsc2UpCgogICAgICAgIGNhc19leHRyYV9vcHRzID0gTm9uZQogICAgICAgIGlmIChjb25maWd1cmF0aW9uQXR0cmlidXRl
 cy5jb250YWluc0tleSgiY2FzX2V4dHJhX29wdHMiKSk6CiAgICAgICAgICAgIGNhc19leHRyYV9vcHRzID0gY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuZ2V0KCJjYXNfZXh0cmFfb3B0cyIpLmdldFZ
 hbHVlMigpCgogICAgICAgIGlmIChzdGVwID09IDEpOgogICAgICAgICAgICBwcmludCAiQ0FTMi4gQXV0aGVudGljYXRlIGZvciBzdGVwIDEiCiAgICAgICAgICAgIHRpY2tldF9hcnJheSA9IHJlcX
 Vlc3RQYXJhbWV0ZXJzLmdldCgidGlja2V0IikKICAgICAgICAgICAgaWYgQXJyYXlIZWxwZXIuaXNFbXB0eSh0aWNrZXRfYXJyYXkpOgogICAgICAgICAgICAgICAgcHJpbnQgIkNBUzIuIEF1dGhlb
 nRpY2F0ZSBmb3Igc3RlcCAxLiB0aWNrZXQgaXMgZW1wdHkiCiAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgICAgIHRpY2tldCA9IHRpY2tldF9hcnJheVswXQogICAgICAgICAg
 ICBwcmludCAiQ0FTMi4gQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIHRpY2tldDogIiArIHRpY2tldAoKICAgICAgICAgICAgaWYgKFN0cmluZ0hlbHBlci5pc0VtcHR5U3RyaW5nKHRpY2tldCkpOgo
 gICAgICAgICAgICAgICAgcHJpbnQgIkNBUzIuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxLiB0aWNrZXQgaXMgaW52YWxpZCIKICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgIC
 AgIyBWYWxpZGF0ZSB0aWNrZXQKICAgICAgICAgICAgcmVxdWVzdCA9IEZhY2VzQ29udGV4dC5nZXRDdXJyZW50SW5zdGFuY2UoKS5nZXRFeHRlcm5hbENvbnRleHQoKS5nZXRSZXF1ZXN0KCkKCiAgI
 CAgICAgICAgIHBhcmFtZXRlcnNNYXAgPSBIYXNoTWFwKCkKICAgICAgICAgICAgcGFyYW1ldGVyc01hcC5wdXQoInNlcnZpY2UiLCBodHRwU2VydmljZS5jb25zdHJ1Y3RTZXJ2ZXJVcmwocmVxdWVz
 dCkgKyAiL3Bvc3Rsb2dpbiIpCiAgICAgICAgICAgIGlmIChjYXNfcmVuZXdfb3B0KToKICAgICAgICAgICAgICAgIHBhcmFtZXRlcnNNYXAucHV0KCJyZW5ldyIsICJ0cnVlIikKICAgICAgICAgICA
 gcGFyYW1ldGVyc01hcC5wdXQoInRpY2tldCIsIHRpY2tldCkKICAgICAgICAgICAgY2FzX3NlcnZpY2VfcmVxdWVzdF91cmkgPSBhdXRoZW50aWNhdGlvblNlcnZpY2UucGFyYW1ldGVyc0FzU3RyaW
 5nKHBhcmFtZXRlcnNNYXApCiAgICAgICAgICAgIGNhc19zZXJ2aWNlX3JlcXVlc3RfdXJpID0gY2FzX2hvc3QgKyAiL3NlcnZpY2VWYWxpZGF0ZT8iICsgY2FzX3NlcnZpY2VfcmVxdWVzdF91cmkKI
 CAgICAgICAgICAgaWYgKGNhc19leHRyYV9vcHRzICE9IE5vbmUpOgogICAgICAgICAgICAgICAgY2FzX3NlcnZpY2VfcmVxdWVzdF91cmkgPSBjYXNfc2VydmljZV9yZXF1ZXN0X3VyaSArICImIiAr
 IGNhc19leHRyYV9vcHRzCgogICAgICAgICAgICBwcmludCAiQ0FTMi4gQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIGNhc19zZXJ2aWNlX3JlcXVlc3RfdXJpOiAiICsgY2FzX3NlcnZpY2VfcmVxdWV
 zdF91cmkKCiAgICAgICAgICAgIGh0dHBfY2xpZW50ID0gaHR0cFNlcnZpY2UuZ2V0SHR0cHNDbGllbnQoKTsKICAgICAgICAgICAgaHR0cF9zZXJ2aWNlX3Jlc3BvbnNlID0gaHR0cFNlcnZpY2UuZX
 hlY3V0ZUdldChodHRwX2NsaWVudCwgY2FzX3NlcnZpY2VfcmVxdWVzdF91cmkpCiAgICAgICAgICAgIAogICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICB2YWxpZGF0aW9uX2NvbnRlbnQgP
 SBodHRwU2VydmljZS5jb252ZXJ0RW50aXR5VG9TdHJpbmcoaHR0cFNlcnZpY2UuZ2V0UmVzcG9uc2VDb250ZW50KGh0dHBfc2VydmljZV9yZXNwb25zZS5nZXRIdHRwUmVzcG9uc2UoKSkpCiAgICAg
 ICAgICAgIGZpbmFsbHk6CiAgICAgICAgICAgICAgICBodHRwX3NlcnZpY2VfcmVzcG9uc2UuY2xvc2VDb25uZWN0aW9uKCkKCiAgICAgICAgICAgIHByaW50ICJDQVMyLiBBdXRoZW50aWNhdGUgZm9
 yIHN0ZXAgMS4gdmFsaWRhdGlvbl9jb250ZW50OiAiICsgdmFsaWRhdGlvbl9jb250ZW50CiAgICAgICAgICAgIGlmIFN0cmluZ0hlbHBlci5pc0VtcHR5KHZhbGlkYXRpb25fY29udGVudCk6CiAgIC
 AgICAgICAgICAgICBwcmludCAiQ0FTMi4gQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIFRpY2tldCB2YWxpZGF0aW9uIHJlc3BvbnNlIGlzIGludmFsaWQiCiAgICAgICAgICAgICAgICByZXR1cm4gR
 mFsc2UKCiAgICAgICAgICAgIGNhczJfYXV0aF9mYWlsdXJlID0gc2VsZi5wYXJzZV90YWcodmFsaWRhdGlvbl9jb250ZW50LCAiY2FzOmF1dGhlbnRpY2F0aW9uRmFpbHVyZSIpCiAgICAgICAgICAg
 IHByaW50ICJDQVMyLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gY2FzMl9hdXRoX2ZhaWx1cmU6ICIsIGNhczJfYXV0aF9mYWlsdXJlCgogICAgICAgICAgICBjYXMyX3VzZXJfdWlkID0gc2VsZi5
 wYXJzZV90YWcodmFsaWRhdGlvbl9jb250ZW50LCAiY2FzOnVzZXIiKQogICAgICAgICAgICBwcmludCAiQ0FTMi4gQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIGNhczJfdXNlcl91aWQ6ICIsIGNhcz
 JfdXNlcl91aWQKICAgICAgICAgICAgCiAgICAgICAgICAgIGlmICgoY2FzMl9hdXRoX2ZhaWx1cmUgIT0gTm9uZSkgb3IgKGNhczJfdXNlcl91aWQgPT0gTm9uZSkpOgogICAgICAgICAgICAgICAgc
 HJpbnQgIkNBUzIuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxLiBUaWNrZXQgaXMgaW52YWxpZCIKICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgaWYgKGNhc19tYXBfdXNl
 cik6CiAgICAgICAgICAgICAgICBwcmludCAiQ0FTMi4gQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIEF0dGVtcHRpbmcgdG8gZmluZCB1c2VyIGJ5IG94RXh0ZXJuYWxVaWQ6IGNhczI6IiArIGNhczJ
 fdXNlcl91aWQKCiAgICAgICAgICAgICAgICAjIENoZWNrIGlmIHRoZSBpcyB1c2VyIHdpdGggc3BlY2lmaWVkIGNhczJfdXNlcl91aWQKICAgICAgICAgICAgICAgIGZpbmRfdXNlcl9ieV91aWQgPS
 B1c2VyU2VydmljZS5nZXRVc2VyQnlBdHRyaWJ1dGUoIm94RXh0ZXJuYWxVaWQiLCAiY2FzMjoiICsgY2FzMl91c2VyX3VpZCkKCiAgICAgICAgICAgICAgICBpZiAoZmluZF91c2VyX2J5X3VpZCA9P
 SBOb25lKToKICAgICAgICAgICAgICAgICAgICBwcmludCAiQ0FTMi4gQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIEZhaWxlZCB0byBmaW5kIHVzZXIiCiAgICAgICAgICAgICAgICAgICAgcHJpbnQg
 IkNBUzIuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxLiBTZXR0aW5nIGNvdW50IHN0ZXBzIHRvIDIiCiAgICAgICAgICAgICAgICAgICAgY29udGV4dC5zZXQoImNhczJfY291bnRfbG9naW5fc3RlcHM
 iLCAyKQogICAgICAgICAgICAgICAgICAgIGNvbnRleHQuc2V0KCJjYXMyX3VzZXJfdWlkIiwgY2FzMl91c2VyX3VpZCkKICAgICAgICAgICAgICAgICAgICByZXR1cm4gVHJ1ZQoKICAgICAgICAgIC
 AgICAgIGZvdW5kX3VzZXJfbmFtZSA9IGZpbmRfdXNlcl9ieV91aWQuZ2V0VXNlcklkKCkKICAgICAgICAgICAgICAgIHByaW50ICJDQVMyLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gZm91bmRfd
 XNlcl9uYW1lOiAiICsgZm91bmRfdXNlcl9uYW1lCgogICAgICAgICAgICAgICAgY3JlZGVudGlhbHMgPSBJZGVudGl0eS5pbnN0YW5jZSgpLmdldENyZWRlbnRpYWxzKCkKICAgICAgICAgICAgICAg
 IGNyZWRlbnRpYWxzLnNldFVzZXJuYW1lKGZvdW5kX3VzZXJfbmFtZSkKICAgICAgICAgICAgICAgIGNyZWRlbnRpYWxzLnNldFVzZXIoZmluZF91c2VyX2J5X3VpZCkKICAgICAgICAgICAgCiAgICA
 gICAgICAgICAgICBwcmludCAiQ0FTMi4gQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIFNldHRpbmcgY291bnQgc3RlcHMgdG8gMSIKICAgICAgICAgICAgICAgIGNvbnRleHQuc2V0KCJjYXMyX2NvdW
 50X2xvZ2luX3N0ZXBzIiwgMSkKCiAgICAgICAgICAgICAgICByZXR1cm4gVHJ1ZQogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgcHJpbnQgIkNBUzIuIEF1dGhlbnRpY2F0ZSBmb3Igc
 3RlcCAxLiBBdHRlbXB0aW5nIHRvIGZpbmQgdXNlciBieSB1aWQ6IiArIGNhczJfdXNlcl91aWQKCiAgICAgICAgICAgICAgICAjIENoZWNrIGlmIHRoZSBpcyB1c2VyIHdpdGggc3BlY2lmaWVkIGNh
 czJfdXNlcl91aWQKICAgICAgICAgICAgICAgIGZpbmRfdXNlcl9ieV91aWQgPSB1c2VyU2VydmljZS5nZXRVc2VyKGNhczJfdXNlcl91aWQpCiAgICAgICAgICAgICAgICBpZiAoZmluZF91c2VyX2J
 5X3VpZCA9PSBOb25lKToKICAgICAgICAgICAgICAgICAgICBwcmludCAiQ0FTMi4gQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIEZhaWxlZCB0byBmaW5kIHVzZXIiCiAgICAgICAgICAgICAgICAgIC
 AgcmV0dXJuIEZhbHNlCgogICAgICAgICAgICAgICAgZm91bmRfdXNlcl9uYW1lID0gZmluZF91c2VyX2J5X3VpZC5nZXRVc2VySWQoKQogICAgICAgICAgICAgICAgcHJpbnQgIkNBUzIuIEF1dGhlb
 nRpY2F0ZSBmb3Igc3RlcCAxLiBmb3VuZF91c2VyX25hbWU6ICIgKyBmb3VuZF91c2VyX25hbWUKCiAgICAgICAgICAgICAgICBjcmVkZW50aWFscyA9IElkZW50aXR5Lmluc3RhbmNlKCkuZ2V0Q3Jl
 ZGVudGlhbHMoKQogICAgICAgICAgICAgICAgY3JlZGVudGlhbHMuc2V0VXNlcm5hbWUoZm91bmRfdXNlcl9uYW1lKQogICAgICAgICAgICAgICAgY3JlZGVudGlhbHMuc2V0VXNlcihmaW5kX3VzZXJ
 fYnlfdWlkKQoKICAgICAgICAgICAgICAgIHByaW50ICJDQVMyLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gU2V0dGluZyBjb3VudCBzdGVwcyB0byAxIgogICAgICAgICAgICAgICAgY29udGV4dC
 5zZXQoImNhczJfY291bnRfbG9naW5fc3RlcHMiLCAxKQoKICAgICAgICAgICAgICAgIHJldHVybiBUcnVlCiAgICAgICAgZWxpZiAoc3RlcCA9PSAyKToKICAgICAgICAgICAgcHJpbnQgIkNBUzIuI
 EF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAyIgoKICAgICAgICAgICAgc2Vzc2lvbkF0dHJpYnV0ZXMgPSBjb250ZXh0LmdldCgic2Vzc2lvbkF0dHJpYnV0ZXMiKQogICAgICAgICAgICBpZiAoc2Vzc2lv
 bkF0dHJpYnV0ZXMgPT0gTm9uZSkgb3Igbm90IHNlc3Npb25BdHRyaWJ1dGVzLmNvbnRhaW5zS2V5KCJjYXMyX3VzZXJfdWlkIik6CiAgICAgICAgICAgICAgICBwcmludCAiQ0FTMi4gQXV0aGVudGl
 jYXRlIGZvciBzdGVwIDIuIGNhczJfdXNlcl91aWQgaXMgZW1wdHkiCiAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgICAgIGNhczJfdXNlcl91aWQgPSBzZXNzaW9uQXR0cmlidX
 Rlcy5nZXQoImNhczJfdXNlcl91aWQiKQogICAgICAgICAgICBwYXNzZWRfc3RlcDEgPSBTdHJpbmdIZWxwZXIuaXNOb3RFbXB0eVN0cmluZyhjYXMyX3VzZXJfdWlkKQogICAgICAgICAgICBpZiAob
 m90IHBhc3NlZF9zdGVwMSk6CiAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgICAgIGNyZWRlbnRpYWxzID0gSWRlbnRpdHkuaW5zdGFuY2UoKS5nZXRDcmVkZW50aWFscygpCiAg
 ICAgICAgICAgIHVzZXJfbmFtZSA9IGNyZWRlbnRpYWxzLmdldFVzZXJuYW1lKCkKICAgICAgICAgICAgdXNlcl9wYXNzd29yZCA9IGNyZWRlbnRpYWxzLmdldFBhc3N3b3JkKCkKCiAgICAgICAgICA
 gIGxvZ2dlZF9pbiA9IEZhbHNlCiAgICAgICAgICAgIGlmIChTdHJpbmdIZWxwZXIuaXNOb3RFbXB0eVN0cmluZyh1c2VyX25hbWUpIGFuZCBTdHJpbmdIZWxwZXIuaXNOb3RFbXB0eVN0cmluZyh1c2
 VyX3Bhc3N3b3JkKSk6CiAgICAgICAgICAgICAgICBsb2dnZWRfaW4gPSB1c2VyU2VydmljZS5hdXRoZW50aWNhdGUodXNlcl9uYW1lLCB1c2VyX3Bhc3N3b3JkKQoKICAgICAgICAgICAgaWYgKG5vd
 CBsb2dnZWRfaW4pOgogICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgICAgICAgICAjIENoZWNrIGlmIHRoZXJlIGlzIHVzZXIgd2hpY2ggaGFzIGNhczJfdXNlcl91aWQKICAgICAgICAg
 ICAgIyBBdm9pZCBtYXBwaW5nIENBUzIgYWNjb3VudCB0byBtb3JlIHRoYW4gb25lIElEUCBhY2NvdW50CiAgICAgICAgICAgIGZpbmRfdXNlcl9ieV91aWQgPSB1c2VyU2VydmljZS5nZXRVc2VyQnl
 BdHRyaWJ1dGUoIm94RXh0ZXJuYWxVaWQiLCAiY2FzMjoiICsgY2FzMl91c2VyX3VpZCkKCiAgICAgICAgICAgIGlmIChmaW5kX3VzZXJfYnlfdWlkID09IE5vbmUpOgogICAgICAgICAgICAgICAgIy
 BBZGQgY2FzMl91c2VyX3VpZCB0byB1c2VyIG9uZSBpZCBVSURzCiAgICAgICAgICAgICAgICBmaW5kX3VzZXJfYnlfdWlkID0gdXNlclNlcnZpY2UuYWRkVXNlckF0dHJpYnV0ZSh1c2VyX25hbWUsI
 CJveEV4dGVybmFsVWlkIiwgImNhczI6IiArIGNhczJfdXNlcl91aWQpCiAgICAgICAgICAgICAgICBpZiAoZmluZF91c2VyX2J5X3VpZCA9PSBOb25lKToKICAgICAgICAgICAgICAgICAgICBwcmlu
 dCAiQ0FTMi4gQXV0aGVudGljYXRlIGZvciBzdGVwIDIuIEZhaWxlZCB0byB1cGRhdGUgY3VycmVudCB1c2VyIgogICAgICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgICA
 gIHJldHVybiBUcnVlCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBmb3VuZF91c2VyX25hbWUgPSBmaW5kX3VzZXJfYnlfdWlkLmdldFVzZXJJZCgpCiAgICAgICAgICAgICAgICBwcm
 ludCAiQ0FTMi4gQXV0aGVudGljYXRlIGZvciBzdGVwIDIuIGZvdW5kX3VzZXJfbmFtZTogIiArIGZvdW5kX3VzZXJfbmFtZQogICAgCiAgICAgICAgICAgICAgICBpZiBTdHJpbmdIZWxwZXIuZXF1Y
 WxzKHVzZXJfbmFtZSwgZm91bmRfdXNlcl9uYW1lKToKICAgICAgICAgICAgICAgICAgICByZXR1cm4gVHJ1ZQogICAgICAgIAogICAgICAgICAgICByZXR1cm4gRmFsc2UKICAgICAgICBlbHNlOgog
 ICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICBkZWYgcHJlcGFyZUZvclN0ZXAoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIHJlcXVlc3RQYXJhbWV0ZXJzLCBzdGVwKToKICAgICAgICB
 jb250ZXh0ID0gQ29udGV4dHMuZ2V0RXZlbnRDb250ZXh0KCkKICAgICAgICBhdXRoZW50aWNhdGlvblNlcnZpY2UgPSBBdXRoZW50aWNhdGlvblNlcnZpY2UuaW5zdGFuY2UoKQogICAgICAgIGh0dH
 BTZXJ2aWNlID0gSHR0cFNlcnZpY2UuaW5zdGFuY2UoKTsKCiAgICAgICAgY2FzX2hvc3QgPSBjb25maWd1cmF0aW9uQXR0cmlidXRlcy5nZXQoImNhc19ob3N0IikuZ2V0VmFsdWUyKCkKICAgICAgI
 CBjYXNfcmVuZXdfb3B0ID0gU3RyaW5nSGVscGVyLnRvQm9vbGVhbihjb25maWd1cmF0aW9uQXR0cmlidXRlcy5nZXQoImNhc19yZW5ld19vcHQiKS5nZXRWYWx1ZTIoKSwgRmFsc2UpCgogICAgICAg
 IGNhc19leHRyYV9vcHRzID0gTm9uZQogICAgICAgIGlmIChjb25maWd1cmF0aW9uQXR0cmlidXRlcy5jb250YWluc0tleSgiY2FzX2V4dHJhX29wdHMiKSk6CiAgICAgICAgICAgIGNhc19leHRyYV9
 vcHRzID0gY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuZ2V0KCJjYXNfZXh0cmFfb3B0cyIpLmdldFZhbHVlMigpCgogICAgICAgIGlmIChzdGVwID09IDEpOgogICAgICAgICAgICBwcmludCAiQ0FTMi
 4gUHJlcGFyZSBmb3Igc3RlcCAxIgoKICAgICAgICAgICAgcmVxdWVzdCA9IEZhY2VzQ29udGV4dC5nZXRDdXJyZW50SW5zdGFuY2UoKS5nZXRFeHRlcm5hbENvbnRleHQoKS5nZXRSZXF1ZXN0KCkKI
 CAgICAgICAgICAgcGFyYW1ldGVyc01hcCA9IEhhc2hNYXAoKQogICAgICAgICAgICBwYXJhbWV0ZXJzTWFwLnB1dCgic2VydmljZSIsIGh0dHBTZXJ2aWNlLmNvbnN0cnVjdFNlcnZlclVybChyZXF1
 ZXN0KSArICIvcG9zdGxvZ2luIikKICAgICAgICAgICAgaWYgKGNhc19yZW5ld19vcHQpOgogICAgICAgICAgICAgICAgcGFyYW1ldGVyc01hcC5wdXQoInJlbmV3IiwgInRydWUiKQogICAgICAgICA
 gICBjYXNfc2VydmljZV9yZXF1ZXN0X3VyaSA9IGF1dGhlbnRpY2F0aW9uU2VydmljZS5wYXJhbWV0ZXJzQXNTdHJpbmcocGFyYW1ldGVyc01hcCkKICAgICAgICAgICAgY2FzX3NlcnZpY2VfcmVxdW
 VzdF91cmkgPSBjYXNfaG9zdCArICIvbG9naW4/IiArIGNhc19zZXJ2aWNlX3JlcXVlc3RfdXJpCiAgICAgICAgICAgIGlmIGNhc19leHRyYV9vcHRzICE9IE5vbmU6CiAgICAgICAgICAgICAgICBjY
 XNfc2VydmljZV9yZXF1ZXN0X3VyaSA9IGNhc19zZXJ2aWNlX3JlcXVlc3RfdXJpICsgIiYiICsgY2FzX2V4dHJhX29wdHMKCiAgICAgICAgICAgIHByaW50ICJDQVMyLiBQcmVwYXJlIGZvciBzdGVw
 IDEuIGNhc19zZXJ2aWNlX3JlcXVlc3RfdXJpOiAiICsgY2FzX3NlcnZpY2VfcmVxdWVzdF91cmkKCiAgICAgICAgICAgIGNvbnRleHQuc2V0KCJjYXNfc2VydmljZV9yZXF1ZXN0X3VyaSIsIGNhc19
 zZXJ2aWNlX3JlcXVlc3RfdXJpKQoKICAgICAgICAgICAgcmV0dXJuIFRydWUKICAgICAgICBlbGlmIChzdGVwID09IDIpOgogICAgICAgICAgICBwcmludCAiQ0FTMi4gUHJlcGFyZSBmb3Igc3RlcC
 AyIgoKICAgICAgICAgICAgcmV0dXJuIFRydWUKICAgICAgICBlbHNlOgogICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICBkZWYgZ2V0RXh0cmFQYXJhbWV0ZXJzRm9yU3RlcChzZWxmLCBjb25ma
 Wd1cmF0aW9uQXR0cmlidXRlcywgc3RlcCk6CiAgICAgICAgaWYgKHN0ZXAgPT0gMik6CiAgICAgICAgICAgIHJldHVybiBBcnJheXMuYXNMaXN0KCJjYXMyX3VzZXJfdWlkIikKICAgICAgICAKICAg
 ICAgICByZXR1cm4gTm9uZQoKICAgIGRlZiBnZXRDb3VudEF1dGhlbnRpY2F0aW9uU3RlcHMoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOgogICAgICAgIGNvbnRleHQgPSBDb250ZXh0cy5
 nZXRFdmVudENvbnRleHQoKQogICAgICAgIGlmIChjb250ZXh0LmlzU2V0KCJjYXMyX2NvdW50X2xvZ2luX3N0ZXBzIikpOgogICAgICAgICAgICByZXR1cm4gY29udGV4dC5nZXQoImNhczJfY291bn
 RfbG9naW5fc3RlcHMiKQogICAgICAgIAogICAgICAgIHJldHVybiAyCgogICAgZGVmIGdldFBhZ2VGb3JTdGVwKHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCBzdGVwKToKICAgICAgICBpZ
 iAoc3RlcCA9PSAxKToKICAgICAgICAgICAgcmV0dXJuICIvYXV0aC9jYXMyL2NhczJsb2dpbi54aHRtbCIKICAgICAgICByZXR1cm4gIi9hdXRoL2NhczIvY2FzMnBvc3Rsb2dpbi54aHRtbCIKCiAg
 ICBkZWYgcGFyc2VfdGFnKHNlbGYsIHN0ciwgdGFnKToKICAgICAgICB0YWcxX3BvczEgPSBzdHIuZmluZCgiPCIgKyB0YWcpCiAgICAgICAgIyAgTm8gdGFnIGZvdW5kLCByZXR1cm4gZW1wdHkgc3R
 yaW5nLgogICAgICAgIGlmIHRhZzFfcG9zMSA9PSAtMTogcmV0dXJuIE5vbmUKICAgICAgICB0YWcxX3BvczIgPSBzdHIuZmluZCgiPiIsIHRhZzFfcG9zMSkKICAgICAgICBpZiB0YWcxX3BvczIgPT
 0gLTE6IHJldHVybiBOb25lCiAgICAgICAgdGFnMl9wb3MxID0gc3RyLmZpbmQoIjwvIiArIHRhZywgdGFnMV9wb3MyKQogICAgICAgIGlmIHRhZzJfcG9zMSA9PSAtMTogcmV0dXJuIE5vbmUKCiAgI
 CAgICAgcmV0dXJuIHN0clt0YWcxX3BvczIrMTp0YWcyX3BvczFdLnN0cmlwKCkKCiAgICBkZWYgbG9nb3V0KHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCByZXF1ZXN0UGFyYW1ldGVycyk6
 CiAgICAgICAgcmV0dXJuIFRydWUK
oxScriptType: person_authentication
programmingLanguage: python

dn: inum=%(inumOrg)s!0011!24FD.B96E,ou=scripts,o=%(inumOrg)s,o=gluu
objectClass: oxCustomScript
objectClass: top
description: OTP Validation of passwords using Yubicloud authentication module
displayName: yubicloud
gluuStatus: false
inum: %(inumOrg)s!0011!24FD.B96E
oxConfigurationProperty: {"value1":"yubicloud_uri","value2":"api.yubico.com","description":""}
oxConfigurationProperty: {"value1":"yubicloud_api_key","value2":"","description":""}
oxConfigurationProperty: {"value1":"yubicloud_id","value2":"","description":""}
oxLevel: 90
oxModuleProperty: {"value1":"usage_type","value2":"interactive","description":""}
oxModuleProperty: {"value1":"location_type","value2":"ldap","description":""}
oxRevision: 1
oxScript:: IyBveEF1dGggaXMgYXZhaWxhYmxlIHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoMjAwOCkuIFNlZSBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUIGZvciBmdWxsIHRleHQuC
 iMgQ29weXJpZ2h0IChjKSAyMDE2LCBHbHV1CiMKIyBBdXRob3I6IFl1cml5IE1vdmNoYW4sIEFydW5tb3poaQojCgpmcm9tIG9yZy5qYm9zcy5zZWFtLnNlY3VyaXR5IGltcG9ydCBJZGVudGl0eQpm
 cm9tIG9yZy54ZGkubW9kZWwuY3VzdG9tLnNjcmlwdC50eXBlLmF1dGggaW1wb3J0IFBlcnNvbkF1dGhlbnRpY2F0aW9uVHlwZQpmcm9tIG9yZy54ZGkub3hhdXRoLnNlcnZpY2UgaW1wb3J0IFVzZXJ
 TZXJ2aWNlCmZyb20gb3JnLnhkaS51dGlsIGltcG9ydCBTdHJpbmdIZWxwZXIKCmltcG9ydCBqYXZhCgppbXBvcnQgdXJsbGliMgppbXBvcnQgdXJsbGliCmltcG9ydCB1dWlkCgoKY2xhc3MgUGVyc2
 9uQXV0aGVudGljYXRpb24oUGVyc29uQXV0aGVudGljYXRpb25UeXBlKToKICAgIGRlZiBfX2luaXRfXyhzZWxmLCBjdXJyZW50VGltZU1pbGxpcyk6CiAgICAgICAgc2VsZi5jdXJyZW50VGltZU1pb
 GxpcyA9IGN1cnJlbnRUaW1lTWlsbGlzCgogICAgZGVmIGluaXQoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOgogICAgICAgIHByaW50ICJZdWJpY2xvdWQuIEluaXRpYWxpemF0aW9uIgoK
 ICAgICAgICBzZWxmLmFwaV9zZXJ2ZXIgPSBjb25maWd1cmF0aW9uQXR0cmlidXRlcy5nZXQoInl1YmljbG91ZF91cmkiKS5nZXRWYWx1ZTIoKQogICAgICAgIHNlbGYuYXBpX2tleSA9IGNvbmZpZ3V
 yYXRpb25BdHRyaWJ1dGVzLmdldCgieXViaWNsb3VkX2FwaV9rZXkiKS5nZXRWYWx1ZTIoKQogICAgICAgIHNlbGYuY2xpZW50X2lkID0gY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuZ2V0KCJ5dWJpY2
 xvdWRfaWQiKS5nZXRWYWx1ZTIoKQoKICAgICAgICByZXR1cm4gVHJ1ZQoKICAgIGRlZiBkZXN0cm95KHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKToKICAgICAgICBwcmludCAiWXViaWNsb
 3VkLiBEZXN0cm95ZWQgc3VjY2Vzc2Z1bGx5IgogICAgICAgIHJldHVybiBUcnVlCgogICAgZGVmIGdldEFwaVZlcnNpb24oc2VsZik6CiAgICAgICAgcmV0dXJuIDEKCiAgICBkZWYgaXNWYWxpZEF1
 dGhlbnRpY2F0aW9uTWV0aG9kKHNlbGYsIHVzYWdlVHlwZSwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOgogICAgICAgIHJldHVybiBUcnVlCgogICAgZGVmIGdldEFsdGVybmF0aXZlQXV0aGVudGl
 jYXRpb25NZXRob2Qoc2VsZiwgdXNhZ2VUeXBlLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6CiAgICAgICAgcmV0dXJuIE5vbmUKCiAgICBkZWYgYXV0aGVudGljYXRlKHNlbGYsIGNvbmZpZ3VyYX
 Rpb25BdHRyaWJ1dGVzLCByZXF1ZXN0UGFyYW1ldGVycywgc3RlcCk6CiAgICAgICAgaWYgKHN0ZXAgPT0gMSk6CiAgICAgICAgICAgIHByaW50ICJZdWJpY2xvdWQuIEF1dGhlbnRpY2F0ZSBmb3Igc
 3RlcCAxIgoKICAgICAgICAgICAgY3JlZGVudGlhbHMgPSBJZGVudGl0eS5pbnN0YW5jZSgpLmdldENyZWRlbnRpYWxzKCkKICAgICAgICAgICAgdXNlcm5hbWUgPSBjcmVkZW50aWFscy5nZXRVc2Vy
 bmFtZSgpCiAgICAgICAgICAgIG90cCA9IGNyZWRlbnRpYWxzLmdldFBhc3N3b3JkKCkKCiAgICAgICAgICAgICMgVmFsaWRhdGUgb3RwIGxlbmd0aAogICAgICAgICAgICBpZiBsZW4ob3RwKSA8IDM
 yIG9yIGxlbihvdHApID4gNDg6CiAgICAgICAgICAgICAgICBwcmludCAiWXViaWNsb3VkLiBJbnZhbGlkIE9UUCBsZW5ndGgiCiAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgIC
 AgIHVzZXJfc2VydmljZSA9IFVzZXJTZXJ2aWNlLmluc3RhbmNlKCkKICAgICAgICAgICAgdXNlciA9IHVzZXJfc2VydmljZS5nZXRVc2VyKHVzZXJuYW1lKQoKICAgICAgICAgICAgcHVibGljX2tle
 SA9IHVzZXIuZ2V0QXR0cmlidXRlKCd5dWJpa2V5SWQnKQoKICAgICAgICAgICAgIyBNYXRjaCB0aGUgdXNlciB3aXRoIHRoZSB5dWJpa2V5CiAgICAgICAgICAgIGlmIHB1YmxpY19rZXkgbm90IGlu
 IG90cDoKICAgICAgICAgICAgICAgIHByaW50ICJZdWJpY2xvdWQuIFB1YmxpYyBLZXkgbm90IG1hdGNoaW5nIE9UUCIKICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgZGF
 0YSA9ICIiCiAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgIG5vbmNlID0gc3RyKHV1aWQudXVpZDQoKSkucmVwbGFjZSgiLSIsICIiKQogICAgICAgICAgICAgICAgcGFyYW1zID0gdXJsbG
 liLnVybGVuY29kZSh7ImlkIjogc2VsZi5jbGllbnRfaWQsICJvdHAiOiBvdHAsICJub25jZSI6IG5vbmNlfSkKICAgICAgICAgICAgICAgIHVybCA9ICJodHRwczovLyIgKyBzZWxmLmFwaV9zZXJ2Z
 XIgKyAiL3dzYXBpLzIuMC92ZXJpZnkvPyIgKyBwYXJhbXMKICAgICAgICAgICAgICAgIGYgPSB1cmxsaWIyLnVybG9wZW4odXJsKQogICAgICAgICAgICAgICAgZGF0YSA9IGYucmVhZCgpCiAgICAg
 ICAgICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICAgICAgICAgIHByaW50ICJZdWJpY2xvdWQuIEV4Y2VwdGlvbiAiLCBlCgogICAgICAgICAgICBpZiAnc3RhdHVzPU9LJyBpbiBkYXR
 hOgogICAgICAgICAgICAgICAgdXNlcl9zZXJ2aWNlLmF1dGhlbnRpY2F0ZSh1c2VybmFtZSkKICAgICAgICAgICAgICAgIHByaW50ICJZdWJpY2xvdWQuIEF1dGhlbnRpY2F0aW9uIFN1Y2Nlc3NmdW
 wiCiAgICAgICAgICAgICAgICByZXR1cm4gVHJ1ZQoKICAgICAgICAgICAgcHJpbnQgIll1YmljbG91ZC4gRW5kIG9mIFN0ZXAgMS4gUmV0dXJuaW5nIEZhbHNlLiIKICAgICAgICAgICAgcmV0dXJuI
 EZhbHNlCiAgICAgICAgZWxzZToKICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgZGVmIHByZXBhcmVGb3JTdGVwKHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCByZXF1ZXN0UGFyYW1l
 dGVycywgc3RlcCk6CiAgICAgICAgaWYgKHN0ZXAgPT0gMSk6CiAgICAgICAgICAgIHByaW50ICJZdWJpY2xvdWQuIFByZXBhcmUgZm9yIFN0ZXAgMSIKICAgICAgICAgICAgcmV0dXJuIFRydWUKICA
 gICAgICBlbHNlOgogICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICBkZWYgZ2V0RXh0cmFQYXJhbWV0ZXJzRm9yU3RlcChzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcywgc3RlcCk6CiAgIC
 AgICAgcmV0dXJuIE5vbmUKCiAgICBkZWYgZ2V0Q291bnRBdXRoZW50aWNhdGlvblN0ZXBzKHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKToKICAgICAgICByZXR1cm4gMQoKICAgIGRlZiBnZ
 XRQYWdlRm9yU3RlcChzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcywgc3RlcCk6CiAgICAgICAgcmV0dXJuICIiCgogICAgZGVmIGxvZ291dChzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRl
 cywgcmVxdWVzdFBhcmFtZXRlcnMpOgogICAgICAgIHJldHVybiBUcnVlCg==
oxScriptType: person_authentication
programmingLanguage: python

dn: inum=%(inumOrg)s!0011!2DAF.F995,ou=scripts,o=%(inumOrg)s,o=gluu
objectClass: top
objectClass: oxCustomScript
description: Sample UMA Authorization policy
displayName: uma_authorization_policy
gluuStatus: false
inum: %(inumOrg)s!0011!2DAF.F995
oxConfigurationProperty: {"value1":"allowed_clients","value2":"%(inumOrg)s!0008!5DA4.8ADF","description":""}
oxLevel: 100
oxModuleProperty: {"value1":"location_type","value2":"ldap","description":""}
oxRevision: 1
oxScript:: IyBveEF1dGggaXMgYXZhaWxhYmxlIHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoMjAwOCkuIFNlZSBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUIGZvciBmdWxsIHRleHQuC
 iMgQ29weXJpZ2h0IChjKSAyMDE2LCBHbHV1CiMKIyBBdXRob3I6IFl1cml5IE1vdmNoYW4KIwoKZnJvbSBvcmcueGRpLm1vZGVsLmN1c3RvbS5zY3JpcHQudHlwZS51bWEgaW1wb3J0IEF1dGhvcml6
 YXRpb25Qb2xpY3lUeXBlCmZyb20gb3JnLnhkaS51dGlsIGltcG9ydCBTdHJpbmdIZWxwZXIsIEFycmF5SGVscGVyCmZyb20gamF2YS51dGlsIGltcG9ydCBBcnJheXMsIEFycmF5TGlzdApmcm9tIG9
 yZy54ZGkub3hhdXRoLnNlcnZpY2UudW1hLmF1dGhvcml6YXRpb24gaW1wb3J0IEF1dGhvcml6YXRpb25Db250ZXh0CgppbXBvcnQgamF2YQoKY2xhc3MgQXV0aG9yaXphdGlvblBvbGljeShBdXRob3
 JpemF0aW9uUG9saWN5VHlwZSk6CiAgICBkZWYgX19pbml0X18oc2VsZiwgY3VycmVudFRpbWVNaWxsaXMpOgogICAgICAgIHNlbGYuY3VycmVudFRpbWVNaWxsaXMgPSBjdXJyZW50VGltZU1pbGxpc
 woKICAgIGRlZiBpbml0KHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKToKICAgICAgICBwcmludCAiVU1BIGF1dGhvcml6YXRpb24gcG9saWN5LiBJbml0aWFsaXphdGlvbiIKICAgICAgICBw
 cmludCAiVU1BIGF1dGhvcml6YXRpb24gcG9saWN5LiBJbml0aWFsaXplZCBzdWNjZXNzZnVsbHkiCgogICAgICAgIHJldHVybiBUcnVlICAgCgogICAgZGVmIGRlc3Ryb3koc2VsZiwgY29uZmlndXJ
 hdGlvbkF0dHJpYnV0ZXMpOgogICAgICAgIHByaW50ICJVTUEgYXV0aG9yaXphdGlvbiBwb2xpY3kuIERlc3Ryb3kiCiAgICAgICAgcHJpbnQgIlVNQSBhdXRob3JpemF0aW9uIHBvbGljeS4gRGVzdH
 JveWVkIHN1Y2Nlc3NmdWxseSIKICAgICAgICByZXR1cm4gVHJ1ZSAgIAoKICAgIGRlZiBnZXRBcGlWZXJzaW9uKHNlbGYpOgogICAgICAgIHJldHVybiAxCgogICAgIyBQcm9jZXNzIHBvbGljeSByd
 WxlCiAgICAjICAgYXV0aG9yaXphdGlvbkNvbnRleHQgaXMgb3JnLnhkaS5veGF1dGguc2VydmljZS51bWEuYXV0aG9yaXphdGlvbi5BdXRob3JpemF0aW9uQ29udGV4dAogICAgIyAgIGNvbmZpZ3Vy
 YXRpb25BdHRyaWJ1dGVzIGlzIGphdmEudXRpbC5NYXA8U3RyaW5nLCBTaW1wbGVDdXN0b21Qcm9wZXJ0eT4KICAgIGRlZiBhdXRob3JpemUoc2VsZiwgYXV0aG9yaXphdGlvbkNvbnRleHQsIGNvbmZ
 pZ3VyYXRpb25BdHRyaWJ1dGVzKToKICAgICAgICBwcmludCAiVU1BIEF1dGhvcml6YXRpb24gcG9saWN5LiBBdHRlbXB0aW5nIHRvIGF1dGhvcml6ZSBjbGllbnQiCiAgICAgICAgY2xpZW50X2lkID
 0gYXV0aG9yaXphdGlvbkNvbnRleHQuZ2V0R3JhbnQoKS5nZXRDbGllbnRJZCgpCgogICAgICAgIHByaW50ICJVTUEgQXV0aG9yaXphdGlvbiBwb2xpY3kuIENsaWVudDogIiwgY2xpZW50X2lkCiAgI
 CAgICAgaWYgKFN0cmluZ0hlbHBlci5lcXVhbHNJZ25vcmVDYXNlKCJAITExMTEhMDAwOCFGREMwLjBGRjUiLCBjbGllbnRfaWQpKToKICAgICAgICAgICAgcHJpbnQgIlVNQSBBdXRob3JpemF0aW9u
 IHBvbGljeS4gQXV0aG9yaXppbmcgY2xpZW50IgogICAgICAgICAgICByZXR1cm4gVHJ1ZQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHByaW50ICJVTUEgQXV0aG9yaXphdGlvbiBwb2xpY3kuIEN
 saWVudCBpc24ndCBhdXRob3JpemVkIgogICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgcHJpbnQgIlVNQSBBdXRob3JpemF0aW9uIHBvbGljeS4gQXV0aG9yaXppbmcgY2xpZW50IgogIC
 AgICAgIHJldHVybiBUcnVlCg==
oxScriptType: uma_authorization_policy
programmingLanguage: python

dn: inum=%(inumOrg)s!0011!4BBE.C6A8,ou=scripts,o=%(inumOrg)s,o=gluu
objectClass: top
objectClass: oxCustomScript
description: Basic (with user locking) authentication module
displayName: basic_lock
gluuStatus: false
inum: %(inumOrg)s!0011!4BBE.C6A8
oxConfigurationProperty: {"value1":"invalid_login_count_attribute","value2":"oxCountInvalidLogin","description":""}
oxConfigurationProperty: {"value1":"maximum_invalid_login_attemps","value2":"3","description":""}
oxLevel: 100
oxModuleProperty: {"value1":"location_type","value2":"ldap","description":""}
oxModuleProperty: {"value1":"usage_type","value2":"interactive","description":""}
oxRevision: 1
oxScript:: IyBveEF1dGggaXMgYXZhaWxhYmxlIHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoMjAwOCkuIFNlZSBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUIGZvciBmdWxsIHRleHQuC
 iMgQ29weXJpZ2h0IChjKSAyMDE2LCBHbHV1CiMKIyBBdXRob3I6IFl1cml5IE1vdmNoYW4KIwoKZnJvbSBvcmcuamJvc3Muc2VhbS5zZWN1cml0eSBpbXBvcnQgSWRlbnRpdHkKZnJvbSBvcmcueGRp
 Lm1vZGVsLmN1c3RvbS5zY3JpcHQudHlwZS5hdXRoIGltcG9ydCBQZXJzb25BdXRoZW50aWNhdGlvblR5cGUKZnJvbSBvcmcueGRpLm94YXV0aC5zZXJ2aWNlIGltcG9ydCBVc2VyU2VydmljZQpmcm9
 tIG9yZy54ZGkudXRpbCBpbXBvcnQgU3RyaW5nSGVscGVyCmZyb20gb3JnLmdsdXUuc2l0ZS5sZGFwLnBlcnNpc3RlbmNlLmV4Y2VwdGlvbiBpbXBvcnQgQXV0aGVudGljYXRpb25FeGNlcHRpb24KCm
 ltcG9ydCBqYXZhCgpjbGFzcyBQZXJzb25BdXRoZW50aWNhdGlvbihQZXJzb25BdXRoZW50aWNhdGlvblR5cGUpOgogICAgZGVmIF9faW5pdF9fKHNlbGYsIGN1cnJlbnRUaW1lTWlsbGlzKToKICAgI
 CAgICBzZWxmLmN1cnJlbnRUaW1lTWlsbGlzID0gY3VycmVudFRpbWVNaWxsaXMKCiAgICBkZWYgaW5pdChzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6CiAgICAgICAgcHJpbnQgIkJhc2lj
 IChsb2NrIGFjY291bnQpLiBJbml0aWFsaXphdGlvbiIKCiAgICAgICAgc2VsZi5pbnZhbGlkTG9naW5Db3VudEF0dHJpYnV0ZSA9ICJveENvdW50SW52YWxpZExvZ2luIgogICAgICAgIGlmIGNvbmZ
 pZ3VyYXRpb25BdHRyaWJ1dGVzLmNvbnRhaW5zS2V5KCJpbnZhbGlkX2xvZ2luX2NvdW50X2F0dHJpYnV0ZSIpOgogICAgICAgICAgICBzZWxmLmludmFsaWRMb2dpbkNvdW50QXR0cmlidXRlID0gY2
 9uZmlndXJhdGlvbkF0dHJpYnV0ZXMuZ2V0KCJpbnZhbGlkX2xvZ2luX2NvdW50X2F0dHJpYnV0ZSIpLmdldFZhbHVlMigpCiAgICAgICAgZWxzZToKICAgICAgICAgICAgcHJpbnQgIkJhc2ljIChsb
 2NrIGFjY291bnQpLiBJbml0aWFsaXphdGlvbi4gVXNpbmcgZGVmYXVsdCBhdHRyaWJ1dGUiCgogICAgICAgIHNlbGYubWF4aW11bUludmFsaWRMb2dpbkF0dGVtcHMgPSAzCiAgICAgICAgaWYgY29u
 ZmlndXJhdGlvbkF0dHJpYnV0ZXMuY29udGFpbnNLZXkoIm1heGltdW1faW52YWxpZF9sb2dpbl9hdHRlbXBzIik6CiAgICAgICAgICAgIHNlbGYubWF4aW11bUludmFsaWRMb2dpbkF0dGVtcHMgPSB
 TdHJpbmdIZWxwZXIudG9JbnRlZ2VyKGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmdldCgibWF4aW11bV9pbnZhbGlkX2xvZ2luX2F0dGVtcHMiKS5nZXRWYWx1ZTIoKSkKICAgICAgICBlbHNlOgogIC
 AgICAgICAgICBwcmludCAiQmFzaWMgKGxvY2sgYWNjb3VudCkuIEluaXRpYWxpemF0aW9uLiBVc2luZyBkZWZhdWx0IG51bWJlciBhdHRlbXB0cyIKCiAgICAgICAgcHJpbnQgIkJhc2ljIChsb2NrI
 GFjY291bnQpLiBJbml0aWFsaXplZCBzdWNjZXNzZnVsbHkuIGludmFsaWRfbG9naW5fY291bnRfYXR0cmlidXRlOiAnJXMnLCBtYXhpbXVtX2ludmFsaWRfbG9naW5fYXR0ZW1wczogJyVzJyIgJSAo
 c2VsZi5pbnZhbGlkTG9naW5Db3VudEF0dHJpYnV0ZSwgc2VsZi5tYXhpbXVtSW52YWxpZExvZ2luQXR0ZW1wcykKCiAgICAgICAgcmV0dXJuIFRydWUgICAKCiAgICBkZWYgZGVzdHJveShzZWxmLCB
 jb25maWd1cmF0aW9uQXR0cmlidXRlcyk6CiAgICAgICAgcHJpbnQgIkJhc2ljIChsb2NrIGFjY291bnQpLiBEZXN0cm95IgogICAgICAgIHByaW50ICJCYXNpYyAobG9jayBhY2NvdW50KS4gRGVzdH
 JveWVkIHN1Y2Nlc3NmdWxseSIKICAgICAgICByZXR1cm4gVHJ1ZQoKICAgIGRlZiBnZXRBcGlWZXJzaW9uKHNlbGYpOgogICAgICAgIHJldHVybiAxCgogICAgZGVmIGlzVmFsaWRBdXRoZW50aWNhd
 Glvbk1ldGhvZChzZWxmLCB1c2FnZVR5cGUsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKToKICAgICAgICByZXR1cm4gVHJ1ZQoKICAgIGRlZiBnZXRBbHRlcm5hdGl2ZUF1dGhlbnRpY2F0aW9uTWV0
 aG9kKHNlbGYsIHVzYWdlVHlwZSwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOgogICAgICAgIHJldHVybiBOb25lCgogICAgZGVmIGF1dGhlbnRpY2F0ZShzZWxmLCBjb25maWd1cmF0aW9uQXR0cml
 idXRlcywgcmVxdWVzdFBhcmFtZXRlcnMsIHN0ZXApOgogICAgICAgIGlmIHN0ZXAgPT0gMToKICAgICAgICAgICAgcHJpbnQgIkJhc2ljIChsb2NrIGFjY291bnQpLiBBdXRoZW50aWNhdGUgZm9yIH
 N0ZXAgMSIKCiAgICAgICAgICAgIGNyZWRlbnRpYWxzID0gSWRlbnRpdHkuaW5zdGFuY2UoKS5nZXRDcmVkZW50aWFscygpCiAgICAgICAgICAgIHVzZXJfbmFtZSA9IGNyZWRlbnRpYWxzLmdldFVzZ
 XJuYW1lKCkKICAgICAgICAgICAgdXNlcl9wYXNzd29yZCA9IGNyZWRlbnRpYWxzLmdldFBhc3N3b3JkKCkKCiAgICAgICAgICAgIGxvZ2dlZF9pbiA9IEZhbHNlCiAgICAgICAgICAgIGlmIChTdHJp
 bmdIZWxwZXIuaXNOb3RFbXB0eVN0cmluZyh1c2VyX25hbWUpIGFuZCBTdHJpbmdIZWxwZXIuaXNOb3RFbXB0eVN0cmluZyh1c2VyX3Bhc3N3b3JkKSk6CiAgICAgICAgICAgICAgICB1c2VyU2Vydml
 jZSA9IFVzZXJTZXJ2aWNlLmluc3RhbmNlKCkKICAgICAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgICAgICBsb2dnZWRfaW4gPSB1c2VyU2VydmljZS5hdXRoZW50aWNhdGUodXNlcl9uYW
 1lLCB1c2VyX3Bhc3N3b3JkKQogICAgICAgICAgICAgICAgZXhjZXB0IEF1dGhlbnRpY2F0aW9uRXhjZXB0aW9uOgogICAgICAgICAgICAgICAgICAgIHByaW50ICJCYXNpYyAobG9jayBhY2NvdW50K
 S4gQXV0aGVudGljYXRlLiBGYWlsZWQgdG8gYXV0aGVudGljYXRlIHVzZXIgJyVzJyIgJSB1c2VyX25hbWUKCiAgICAgICAgICAgIGlmIChub3QgbG9nZ2VkX2luKToKICAgICAgICAgICAgICAgIGNv
 dW50SW52YWxpZExvZ2luQXJyaWJ1dGVWYWx1ZSA9IHNlbGYuZ2V0VXNlckF0dHJpYnV0ZVZhbHVlKHVzZXJfbmFtZSwgc2VsZi5pbnZhbGlkTG9naW5Db3VudEF0dHJpYnV0ZSkKICAgICAgICAgICA
 gICAgIGNvdW50SW52YWxpZExvZ2luID0gU3RyaW5nSGVscGVyLnRvSW50ZWdlcihjb3VudEludmFsaWRMb2dpbkFycmlidXRlVmFsdWUsIDApCgogICAgICAgICAgICAgICAgaWYgY291bnRJbnZhbG
 lkTG9naW4gPCBzZWxmLm1heGltdW1JbnZhbGlkTG9naW5BdHRlbXBzOgogICAgICAgICAgICAgICAgICAgIGNvdW50SW52YWxpZExvZ2luID0gY291bnRJbnZhbGlkTG9naW4gKyAxCiAgICAgICAgI
 CAgICAgICAgICAgc2VsZi5zZXRVc2VyQXR0cmlidXRlVmFsdWUodXNlcl9uYW1lLCBzZWxmLmludmFsaWRMb2dpbkNvdW50QXR0cmlidXRlLCBTdHJpbmdIZWxwZXIudG9TdHJpbmcoY291bnRJbnZh
 bGlkTG9naW4pKQoKICAgICAgICAgICAgICAgIGlmIGNvdW50SW52YWxpZExvZ2luID49IHNlbGYubWF4aW11bUludmFsaWRMb2dpbkF0dGVtcHM6CiAgICAgICAgICAgICAgICAgICAgc2VsZi5sb2N
 rVXNlcih1c2VyX25hbWUpCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgICAgIHNlbGYuc2V0VXNlckF0dHJpYnV0ZVZhbHVlKHVzZXJfbm
 FtZSwgc2VsZi5pbnZhbGlkTG9naW5Db3VudEF0dHJpYnV0ZSwgU3RyaW5nSGVscGVyLnRvU3RyaW5nKDApKQoKICAgICAgICAgICAgcmV0dXJuIFRydWUKICAgICAgICBlbHNlOgogICAgICAgICAgI
 CByZXR1cm4gRmFsc2UKCiAgICBkZWYgcHJlcGFyZUZvclN0ZXAoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIHJlcXVlc3RQYXJhbWV0ZXJzLCBzdGVwKToKICAgICAgICBpZiBzdGVwID09
 IDE6CiAgICAgICAgICAgIHByaW50ICJCYXNpYyAobG9jayBhY2NvdW50KS4gUHJlcGFyZSBmb3IgU3RlcCAxIgogICAgICAgICAgICByZXR1cm4gVHJ1ZQogICAgICAgIGVsc2U6CiAgICAgICAgICA
 gIHJldHVybiBGYWxzZQoKICAgIGRlZiBnZXRFeHRyYVBhcmFtZXRlcnNGb3JTdGVwKHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCBzdGVwKToKICAgICAgICByZXR1cm4gTm9uZQoKICAgIG
 RlZiBnZXRDb3VudEF1dGhlbnRpY2F0aW9uU3RlcHMoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOgogICAgICAgIHJldHVybiAxCgogICAgZGVmIGdldFBhZ2VGb3JTdGVwKHNlbGYsIGNvb
 mZpZ3VyYXRpb25BdHRyaWJ1dGVzLCBzdGVwKToKICAgICAgICByZXR1cm4gIiIKCiAgICBkZWYgbG9nb3V0KHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCByZXF1ZXN0UGFyYW1ldGVycyk6
 CiAgICAgICAgcmV0dXJuIFRydWUKCiAgICBkZWYgZ2V0VXNlckF0dHJpYnV0ZVZhbHVlKHNlbGYsIHVzZXJfbmFtZSwgYXR0cmlidXRlX25hbWUpOgogICAgICAgIGlmIFN0cmluZ0hlbHBlci5pc0V
 tcHR5KHVzZXJfbmFtZSk6CiAgICAgICAgICAgIHJldHVybiBOb25lCgogICAgICAgIHVzZXJTZXJ2aWNlID0gVXNlclNlcnZpY2UuaW5zdGFuY2UoKQoKICAgICAgICBmaW5kX3VzZXJfYnlfdWlkID
 0gdXNlclNlcnZpY2UuZ2V0VXNlcih1c2VyX25hbWUsIGF0dHJpYnV0ZV9uYW1lKQogICAgICAgIGlmIGZpbmRfdXNlcl9ieV91aWQgPT0gTm9uZToKICAgICAgICAgICAgcmV0dXJuIE5vbmUKCiAgI
 CAgICAgY3VzdG9tX2F0dHJpYnV0ZV92YWx1ZSA9IHVzZXJTZXJ2aWNlLmdldEN1c3RvbUF0dHJpYnV0ZShmaW5kX3VzZXJfYnlfdWlkLCBhdHRyaWJ1dGVfbmFtZSkKICAgICAgICBpZiBjdXN0b21f
 YXR0cmlidXRlX3ZhbHVlID09IE5vbmU6CiAgICAgICAgICAgIHJldHVybiBOb25lCiAgICAgICAgCiAgICAgICAgYXR0cmlidXRlX3ZhbHVlID0gY3VzdG9tX2F0dHJpYnV0ZV92YWx1ZS5nZXRWYWx
 1ZSgpCgogICAgICAgIHByaW50ICJCYXNpYyAobG9jayBhY2NvdW50KS4gR2V0IHVzZXIgYXR0cmlidXRlLiBVc2VyJ3MgJyVzJyBhdHRyaWJ1dGUgJyVzJyB2YWx1ZSBpcyAnJXMnIiAlICh1c2VyX2
 5hbWUsIGF0dHJpYnV0ZV9uYW1lLCBhdHRyaWJ1dGVfdmFsdWUpCgogICAgICAgIHJldHVybiBhdHRyaWJ1dGVfdmFsdWUKCiAgICBkZWYgc2V0VXNlckF0dHJpYnV0ZVZhbHVlKHNlbGYsIHVzZXJfb
 mFtZSwgYXR0cmlidXRlX25hbWUsIGF0dHJpYnV0ZV92YWx1ZSk6CiAgICAgICAgaWYgU3RyaW5nSGVscGVyLmlzRW1wdHkodXNlcl9uYW1lKToKICAgICAgICAgICAgcmV0dXJuIE5vbmUKCiAgICAg
 ICAgdXNlclNlcnZpY2UgPSBVc2VyU2VydmljZS5pbnN0YW5jZSgpCgogICAgICAgIGZpbmRfdXNlcl9ieV91aWQgPSB1c2VyU2VydmljZS5nZXRVc2VyKHVzZXJfbmFtZSkKICAgICAgICBpZiBmaW5
 kX3VzZXJfYnlfdWlkID09IE5vbmU6CiAgICAgICAgICAgIHJldHVybiBOb25lCiAgICAgICAgCiAgICAgICAgdXNlclNlcnZpY2Uuc2V0Q3VzdG9tQXR0cmlidXRlKGZpbmRfdXNlcl9ieV91aWQsIG
 F0dHJpYnV0ZV9uYW1lLCBhdHRyaWJ1dGVfdmFsdWUpCiAgICAgICAgdXBkYXRlZF91c2VyID0gdXNlclNlcnZpY2UudXBkYXRlVXNlcihmaW5kX3VzZXJfYnlfdWlkKQoKICAgICAgICBwcmludCAiQ
 mFzaWMgKGxvY2sgYWNjb3VudCkuIFNldCB1c2VyIGF0dHJpYnV0ZS4gVXNlcidzICclcycgYXR0cmlidXRlICclcycgdmFsdWUgaXMgJyVzJyIgJSAodXNlcl9uYW1lLCBhdHRyaWJ1dGVfbmFtZSwg
 YXR0cmlidXRlX3ZhbHVlKQoKICAgICAgICByZXR1cm4gdXBkYXRlZF91c2VyCgogICAgZGVmIGxvY2tVc2VyKHNlbGYsIHVzZXJfbmFtZSk6CiAgICAgICAgaWYgU3RyaW5nSGVscGVyLmlzRW1wdHk
 odXNlcl9uYW1lKToKICAgICAgICAgICAgcmV0dXJuIE5vbmUKCiAgICAgICAgdXNlclNlcnZpY2UgPSBVc2VyU2VydmljZS5pbnN0YW5jZSgpCgogICAgICAgIGZpbmRfdXNlcl9ieV91aWQgPSB1c2
 VyU2VydmljZS5nZXRVc2VyKHVzZXJfbmFtZSkKICAgICAgICBpZiAoZmluZF91c2VyX2J5X3VpZCA9PSBOb25lKToKICAgICAgICAgICAgcmV0dXJuIE5vbmUKCiAgICAgICAgc3RhdHVzX2F0dHJpY
 nV0ZV92YWx1ZSA9IHVzZXJTZXJ2aWNlLmdldEN1c3RvbUF0dHJpYnV0ZShmaW5kX3VzZXJfYnlfdWlkLCAiZ2x1dVN0YXR1cyIpCiAgICAgICAgaWYgc3RhdHVzX2F0dHJpYnV0ZV92YWx1ZSAhPSBO
 b25lOgogICAgICAgICAgICB1c2VyX3N0YXR1cyA9IHN0YXR1c19hdHRyaWJ1dGVfdmFsdWUuZ2V0VmFsdWUoKQogICAgICAgICAgICBpZiBTdHJpbmdIZWxwZXIuZXF1YWxzKHVzZXJfc3RhdHVzLCA
 iaW5hY3RpdmUiKToKICAgICAgICAgICAgICAgIHByaW50ICJCYXNpYyAobG9jayBhY2NvdW50KS4gTG9jayB1c2VyLiBVc2VyICclcycgbG9ja2VkIGFscmVhZHkiICUgdXNlcl9uYW1lCiAgICAgIC
 AgICAgICAgICByZXR1cm4KICAgICAgICAKICAgICAgICB1c2VyU2VydmljZS5zZXRDdXN0b21BdHRyaWJ1dGUoZmluZF91c2VyX2J5X3VpZCwgImdsdXVTdGF0dXMiLCAiaW5hY3RpdmUiKQogICAgI
 CAgIHVwZGF0ZWRfdXNlciA9IHVzZXJTZXJ2aWNlLnVwZGF0ZVVzZXIoZmluZF91c2VyX2J5X3VpZCkKCiAgICAgICAgcHJpbnQgIkJhc2ljIChsb2NrIGFjY291bnQpLiBMb2NrIHVzZXIuIFVzZXIg
 JyVzJyBsb2NrZWQiICUgdXNlcl9uYW1lCg==
oxScriptType: person_authentication
programmingLanguage: python

dn: inum=%(inumOrg)s!0011!5018.AF9C,ou=scripts,o=%(inumOrg)s,o=gluu
objectClass: top
objectClass: oxCustomScript
description: UAF authentication module
displayName: uaf
gluuStatus: false
inum: %(inumOrg)s!0011!5018.AF9C
oxConfigurationProperty: {"value1":"uaf_server_uri","value2":"https://%(hostname)s","description":""}
oxConfigurationProperty: {"value1":"uaf_policy_name","value2":"default","description":""}
oxConfigurationProperty: {"value1":"qr_options","value2":"{ width: 400, height: 400 }","description":""}
oxConfigurationProperty: {"value1":"registration_uri","value2":"https://%(hostname)s/identity/register","description":""}
oxConfigurationProperty: {"value1":"send_push_notifaction","value2":"false","description":""}
oxLevel: 90
oxModuleProperty: {"value1":"location_type","value2":"ldap","description":""}
oxModuleProperty: {"value1":"usage_type","value2":"interactive","description":""}
oxRevision: 1
oxScript:: IyBveEF1dGggaXMgYXZhaWxhYmxlIHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoMjAwOCkuIFNlZSBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUIGZvciBmdWxsIHRleHQuC
 iMgQ29weXJpZ2h0IChjKSAyMDE2LCBHbHV1CiMKIyBBdXRob3I6IFl1cml5IE1vdmNoYW4KIwoKIyBSZXF1aXJlcyB0aGUgZm9sbG93aW5nIGN1c3RvbSBwcm9wZXJ0aWVzIGFuZCB2YWx1ZXM6CiMg
 ICB1YWZfc2VydmVyX3VyaTogaHR0cHM6Ly9jZS1kZXYuZ2x1dS5vcmcKIwojIFRoZXNlIGFyZSBub24gbWFuZGF0b3J5IGN1c3RvbSBwcm9wZXJ0aWVzIGFuZCB2YWx1ZXM6CiMgICB1YWZfcG9saWN
 5X25hbWU6IGRlZmF1bHQKIyAgIHNlbmRfcHVzaF9ub3RpZmFjdGlvbjogZmFsc2UKIyAgIHJlZ2lzdHJhdGlvbl91cmk6IGh0dHBzOi8vY2UtZGV2LmdsdXUub3JnL2lkZW50aXR5L3JlZ2lzdGVyCi
 MgICBxcl9vcHRpb25zOiB7IHdpZHRoOiA0MDAsIGhlaWdodDogNDAwIH0KCmZyb20gb3JnLnhkaS5tb2RlbC5jdXN0b20uc2NyaXB0LnR5cGUuYXV0aCBpbXBvcnQgUGVyc29uQXV0aGVudGljYXRpb
 25UeXBlCmZyb20gb3JnLmpib3NzLnNlYW0uY29udGV4dHMgaW1wb3J0IENvbnRleHQsIENvbnRleHRzCmZyb20gb3JnLmpib3NzLnNlYW0uc2VjdXJpdHkgaW1wb3J0IElkZW50aXR5CmZyb20gb3Jn
 LnhkaS5veGF1dGguc2VydmljZSBpbXBvcnQgVXNlclNlcnZpY2UsIEF1dGhlbnRpY2F0aW9uU2VydmljZSwgU2Vzc2lvblN0YXRlU2VydmljZQpmcm9tIG9yZy54ZGkudXRpbCBpbXBvcnQgU3RyaW5
 nSGVscGVyCmZyb20gb3JnLnhkaS51dGlsIGltcG9ydCBBcnJheUhlbHBlcgpmcm9tIG9yZy54ZGkub3hhdXRoLnV0aWwgaW1wb3J0IFNlcnZlclV0aWwKZnJvbSBvcmcueGRpLm94YXV0aC5tb2RlbC
 5jb25maWcgaW1wb3J0IENvbnN0YW50cwpmcm9tIG9yZy5qYm9zcy5yZXN0ZWFzeS5jbGllbnQgaW1wb3J0IENsaWVudFJlc3BvbnNlRmFpbHVyZQpmcm9tIGphdmF4LndzLnJzLmNvcmUgaW1wb3J0I
 FJlc3BvbnNlCmZyb20gamF2YS51dGlsIGltcG9ydCBBcnJheXMKZnJvbSBvcmcueGRpLm94YXV0aC5zZXJ2aWNlLm5ldCBpbXBvcnQgSHR0cFNlcnZpY2UKZnJvbSBvcmcuYXBhY2hlLmh0dHAucGFy
 YW1zIGltcG9ydCBDb3JlQ29ubmVjdGlvblBOYW1lcwoKaW1wb3J0IHN5cwppbXBvcnQgamF2YQoKdHJ5OgogICAgaW1wb3J0IGpzb24KZXhjZXB0IEltcG9ydEVycm9yOgogICAgaW1wb3J0IHNpbXB
 sZWpzb24gYXMganNvbgoKY2xhc3MgUGVyc29uQXV0aGVudGljYXRpb24oUGVyc29uQXV0aGVudGljYXRpb25UeXBlKToKICAgIGRlZiBfX2luaXRfXyhzZWxmLCBjdXJyZW50VGltZU1pbGxpcyk6Ci
 AgICAgICAgc2VsZi5jdXJyZW50VGltZU1pbGxpcyA9IGN1cnJlbnRUaW1lTWlsbGlzCgogICAgZGVmIGluaXQoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOgogICAgICAgIHByaW50ICJVQ
 UYuIEluaXRpYWxpemF0aW9uIgoKICAgICAgICBpZiBub3QgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuY29udGFpbnNLZXkoInVhZl9zZXJ2ZXJfdXJpIik6CiAgICAgICAgICAgIHByaW50ICJVQUYu
 IEluaXRpYWxpemF0aW9uLiBQcm9wZXJ0eSB1YWZfc2VydmVyX3VyaSBpcyBtYW5kYXRvcnkiCiAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICBzZWxmLnVhZl9zZXJ2ZXJfdXJpID0gY29
 uZmlndXJhdGlvbkF0dHJpYnV0ZXMuZ2V0KCJ1YWZfc2VydmVyX3VyaSIpLmdldFZhbHVlMigpCgogICAgICAgIHNlbGYudWFmX3BvbGljeV9uYW1lID0gImRlZmF1bHQiCiAgICAgICAgaWYgY29uZm
 lndXJhdGlvbkF0dHJpYnV0ZXMuY29udGFpbnNLZXkoInVhZl9wb2xpY3lfbmFtZSIpOgogICAgICAgICAgICBzZWxmLnVhZl9wb2xpY3lfbmFtZSA9IGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmdld
 CgidWFmX3BvbGljeV9uYW1lIikuZ2V0VmFsdWUyKCkKCiAgICAgICAgc2VsZi5zZW5kX3B1c2hfbm90aWZhY3Rpb24gPSBGYWxzZQogICAgICAgIGlmIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmNv
 bnRhaW5zS2V5KCJzZW5kX3B1c2hfbm90aWZhY3Rpb24iKToKICAgICAgICAgICAgc2VsZi5zZW5kX3B1c2hfbm90aWZhY3Rpb24gPSBTdHJpbmdIZWxwZXIudG9Cb29sZWFuKGNvbmZpZ3VyYXRpb25
 BdHRyaWJ1dGVzLmdldCgic2VuZF9wdXNoX25vdGlmYWN0aW9uIikuZ2V0VmFsdWUyKCksIEZhbHNlKQoKICAgICAgICBzZWxmLnJlZ2lzdHJhdGlvbl91cmkgPSBOb25lCiAgICAgICAgaWYgY29uZm
 lndXJhdGlvbkF0dHJpYnV0ZXMuY29udGFpbnNLZXkoInJlZ2lzdHJhdGlvbl91cmkiKToKICAgICAgICAgICAgc2VsZi5yZWdpc3RyYXRpb25fdXJpID0gY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuZ
 2V0KCJyZWdpc3RyYXRpb25fdXJpIikuZ2V0VmFsdWUyKCkKCiAgICAgICAgc2VsZi5jdXN0b21Rck9wdGlvbnMgPSB7fQogICAgICAgIGlmIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmNvbnRhaW5z
 S2V5KCJxcl9vcHRpb25zIik6CiAgICAgICAgICAgIHNlbGYuY3VzdG9tUXJPcHRpb25zID0gY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuZ2V0KCJxcl9vcHRpb25zIikuZ2V0VmFsdWUyKCkKCiAgICA
 gICAgcHJpbnQgIlVBRi4gSW5pdGlhbGl6aW5nIEhUVFAgY2xpZW50IgogICAgICAgIGh0dHBTZXJ2aWNlID0gSHR0cFNlcnZpY2UuaW5zdGFuY2UoKQogICAgICAgIHNlbGYuaHR0cF9jbGllbnQgPS
 BodHRwU2VydmljZS5nZXRIdHRwc0NsaWVudCgpCiAgICAgICAgaHR0cF9jbGllbnRfcGFyYW1zID0gc2VsZi5odHRwX2NsaWVudC5nZXRQYXJhbXMoKQogICAgICAgIGh0dHBfY2xpZW50X3BhcmFtc
 y5zZXRJbnRQYXJhbWV0ZXIoQ29yZUNvbm5lY3Rpb25QTmFtZXMuQ09OTkVDVElPTl9USU1FT1VULCAxNSAqIDEwMDApCgogICAgICAgIHByaW50ICJVQUYuIEluaXRpYWxpemVkIHN1Y2Nlc3NmdWxs
 eS4gdWFmX3NlcnZlcl91cmk6ICclcycsIHVhZl9wb2xpY3lfbmFtZTogJyVzJywgc2VuZF9wdXNoX25vdGlmYWN0aW9uOiAnJXMnLCByZWdpc3RyYXRpb25fdXJpOiAnJXMnLCBxcl9vcHRpb25zOiA
 nJXMnIiAlIChzZWxmLnVhZl9zZXJ2ZXJfdXJpLCBzZWxmLnVhZl9wb2xpY3lfbmFtZSwgc2VsZi5zZW5kX3B1c2hfbm90aWZhY3Rpb24sIHNlbGYucmVnaXN0cmF0aW9uX3VyaSwgc2VsZi5jdXN0b2
 1Rck9wdGlvbnMpCiAgICAgICAgCiAgICAgICAgcHJpbnQgIlVBRi4gSW5pdGlhbGl6ZWQgc3VjY2Vzc2Z1bGx5IgogICAgICAgIHJldHVybiBUcnVlCgogICAgZGVmIGRlc3Ryb3koc2VsZiwgY29uZ
 mlndXJhdGlvbkF0dHJpYnV0ZXMpOgogICAgICAgIHByaW50ICJVQUYuIERlc3Ryb3kiCiAgICAgICAgcHJpbnQgIlVBRi4gRGVzdHJveWVkIHN1Y2Nlc3NmdWxseSIKICAgICAgICByZXR1cm4gVHJ1
 ZQoKICAgIGRlZiBnZXRBcGlWZXJzaW9uKHNlbGYpOgogICAgICAgIHJldHVybiAxCgogICAgZGVmIGlzVmFsaWRBdXRoZW50aWNhdGlvbk1ldGhvZChzZWxmLCB1c2FnZVR5cGUsIGNvbmZpZ3VyYXR
 pb25BdHRyaWJ1dGVzKToKICAgICAgICByZXR1cm4gVHJ1ZQoKICAgIGRlZiBnZXRBbHRlcm5hdGl2ZUF1dGhlbnRpY2F0aW9uTWV0aG9kKHNlbGYsIHVzYWdlVHlwZSwgY29uZmlndXJhdGlvbkF0dH
 JpYnV0ZXMpOgogICAgICAgIHJldHVybiBOb25lCgogICAgZGVmIGF1dGhlbnRpY2F0ZShzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcywgcmVxdWVzdFBhcmFtZXRlcnMsIHN0ZXApOgogICAgI
 CAgIGNyZWRlbnRpYWxzID0gSWRlbnRpdHkuaW5zdGFuY2UoKS5nZXRDcmVkZW50aWFscygpCiAgICAgICAgdXNlcl9uYW1lID0gY3JlZGVudGlhbHMuZ2V0VXNlcm5hbWUoKQoKICAgICAgICBjb250
 ZXh0ID0gQ29udGV4dHMuZ2V0RXZlbnRDb250ZXh0KCkKICAgICAgICBzZXNzaW9uX2F0dHJpYnV0ZXMgPSBjb250ZXh0LmdldCgic2Vzc2lvbkF0dHJpYnV0ZXMiKQoKICAgICAgICBzZWxmLnNldEV
 2ZW50Q29udGV4dFBhcmFtZXRlcnMoY29udGV4dCkKCiAgICAgICAgaWYgKHN0ZXAgPT0gMSk6CiAgICAgICAgICAgIHByaW50ICJVQUYuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxIgogICAgICAgIC
 AgICAKICAgICAgICAgICAgYXV0aGVudGljYXRlZF91c2VyID0gc2VsZi5wcm9jZXNzQmFzaWNBdXRoZW50aWNhdGlvbihjcmVkZW50aWFscykKICAgICAgICAgICAgaWYgYXV0aGVudGljYXRlZF91c
 2VyID09IE5vbmU6CiAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgICAgIHVhZl9hdXRoX21ldGhvZCA9ICJhdXRoZW50aWNhdGUiCiAgICAgICAgICAgICMgVW5jb21tZW50IHRo
 aXMgYmxvY2sgaWYgeW91IG5lZWQgdG8gYWxsb3cgdXNlciBzZWNvbmQgZGV2aWNlIHJlZ2lzdHJhdGlvbgogICAgICAgICAgICAjZW5yb2xsbWVudF9tb2RlID0gU2VydmVyVXRpbC5nZXRGaXJzdFZ
 hbHVlKHJlcXVlc3RQYXJhbWV0ZXJzLCAibG9naW5Gb3JtOnJlZ2lzdGVyQnV0dG9uIikKICAgICAgICAgICAgI2lmIFN0cmluZ0hlbHBlci5pc05vdEVtcHR5KGVucm9sbG1lbnRfbW9kZSk6CiAgIC
 AgICAgICAgICMgICAgdWFmX2F1dGhfbWV0aG9kID0gImVucm9sbCIKICAgICAgICAgICAgCiAgICAgICAgICAgIGlmIHVhZl9hdXRoX21ldGhvZCA9PSAiYXV0aGVudGljYXRlIjoKICAgICAgICAgI
 CAgICAgIHVzZXJfZW5yb2xsbWVudHMgPSBzZWxmLmZpbmRFbnJvbGxtZW50cyhjcmVkZW50aWFscykKICAgICAgICAgICAgICAgIGlmIGxlbih1c2VyX2Vucm9sbG1lbnRzKSA9PSAwOgogICAgICAg
 ICAgICAgICAgICAgIHVhZl9hdXRoX21ldGhvZCA9ICJlbnJvbGwiCiAgICAgICAgICAgICAgICAgICAgcHJpbnQgIlVBRi4gQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIFRoZXJlIGlzIG5vIFVBRiB
 lbnJvbGxtZW50IGZvciB1c2VyICclcycuIENoYW5naW5nIHVhZl9hdXRoX21ldGhvZCB0byAnJXMnIiAlICh1c2VyX25hbWUsIHVhZl9hdXRoX21ldGhvZCkKCiAgICAgICAgICAgIHByaW50ICJVQU
 YuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxLiB1YWZfYXV0aF9tZXRob2Q6ICclcyciICUgdWFmX2F1dGhfbWV0aG9kCiAgICAgICAgICAgIAogICAgICAgICAgICBjb250ZXh0LnNldCgidWFmX2F1d
 GhfbWV0aG9kIiwgdWFmX2F1dGhfbWV0aG9kKQoKICAgICAgICAgICAgcmV0dXJuIFRydWUKICAgICAgICBlbGlmIChzdGVwID09IDIpOgogICAgICAgICAgICBwcmludCAiVUFGLiBBdXRoZW50aWNh
 dGUgZm9yIHN0ZXAgMiIKCiAgICAgICAgICAgIHNlc3Npb25fc3RhdGUgPSBTZXNzaW9uU3RhdGVTZXJ2aWNlLmluc3RhbmNlKCkuZ2V0U2Vzc2lvblN0YXRlRnJvbUNvb2tpZSgpCiAgICAgICAgICA
 gIGlmIFN0cmluZ0hlbHBlci5pc0VtcHR5KHNlc3Npb25fc3RhdGUpOgogICAgICAgICAgICAgICAgcHJpbnQgIlVBRi4gUHJlcGFyZSBmb3Igc3RlcCAyLiBGYWlsZWQgdG8gZGV0ZXJtaW5lIHNlc3
 Npb25fc3RhdGUiCiAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgICAgIGlmIHVzZXJfbmFtZSA9PSBOb25lOgogICAgICAgICAgICAgICAgcHJpbnQgIlVBRi4gQXV0aGVudGljY
 XRlIGZvciBzdGVwIDIuIEZhaWxlZCB0byBkZXRlcm1pbmUgdXNlciBuYW1lIgogICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgICAgICAgICB1YWZfYXV0aF9yZXN1bHQgPSBTZXJ2ZXJV
 dGlsLmdldEZpcnN0VmFsdWUocmVxdWVzdFBhcmFtZXRlcnMsICJhdXRoX3Jlc3VsdCIpCiAgICAgICAgICAgIGlmIHVhZl9hdXRoX3Jlc3VsdCAhPSAic3VjY2VzcyI6CiAgICAgICAgICAgICAgICB
 wcmludCAiVUFGLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMi4gYXV0aF9yZXN1bHQgaXMgJyVzJyIgJSB1YWZfYXV0aF9yZXN1bHQKICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgIC
 AgICAgIyBSZXN0b3JlIHN0YXRlIGZyb20gc2Vzc2lvbgogICAgICAgICAgICB1YWZfYXV0aF9tZXRob2QgPSBzZXNzaW9uX2F0dHJpYnV0ZXMuZ2V0KCJ1YWZfYXV0aF9tZXRob2QiKQoKICAgICAgI
 CAgICAgaWYgbm90IHVhZl9hdXRoX21ldGhvZCBpbiBbJ2Vucm9sbCcsICdhdXRoZW50aWNhdGUnXToKICAgICAgICAgICAgICAgIHByaW50ICJVQUYuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAyLiBG
 YWlsZWQgdG8gYXV0aGVudGljYXRlIHVzZXIuIHVhZl9hdXRoX21ldGhvZDogJyVzJyIgJSB1YWZfYXV0aF9tZXRob2QKICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgIyB
 SZXF1ZXN0IFNUQVRVU19PQkIKICAgICAgICAgICAgaWYgVHJ1ZToKICAgICAgICAgICAgICAgICNUT0RPOiBSZW1vdmUgdGhpcyBjb25kaXRpb24KICAgICAgICAgICAgICAgICMgSXQncyB3b3JrYX
 JvdW5kIGJlY3Vhc2UgaXQncyBub3QgcG9zc2libGUgdG8gY2FsbCBTVEFUVVNfT0JCIDIgdGltZXMuIEZpcnN0IHRpbWUgb24gYnJvd3NlciBhbmQgc2Vjb25kIGltZSBvbiBzZXJ2ZXIKICAgICAgI
 CAgICAgICAgIHVhZl91c2VyX2RldmljZV9oYW5kbGUgPSBTZXJ2ZXJVdGlsLmdldEZpcnN0VmFsdWUocmVxdWVzdFBhcmFtZXRlcnMsICJhdXRoX2hhbmRsZSIpCiAgICAgICAgICAgIGVsc2U6CiAg
 ICAgICAgICAgICAgICB1YWZfb2JiX2F1dGhfbWV0aG9kID0gc2Vzc2lvbl9hdHRyaWJ1dGVzLmdldCgidWFmX29iYl9hdXRoX21ldGhvZCIpCiAgICAgICAgICAgICAgICB1YWZfb2JiX3NlcnZlcl9
 1cmkgPSBzZXNzaW9uX2F0dHJpYnV0ZXMuZ2V0KCJ1YWZfb2JiX3NlcnZlcl91cmkiKQogICAgICAgICAgICAgICAgdWFmX29iYl9zdGFydF9yZXNwb25zZSA9IHNlc3Npb25fYXR0cmlidXRlcy5nZX
 QoInVhZl9vYmJfc3RhcnRfcmVzcG9uc2UiKQoKICAgICAgICAgICAgICAgICMgUHJlcGFyZSBTVEFUVVNfT0JCCiAgICAgICAgICAgICAgICB1YWZfb2JiX3N0YXJ0X3Jlc3BvbnNlX2pzb24gPSBqc
 29uLmxvYWRzKHVhZl9vYmJfc3RhcnRfcmVzcG9uc2UpCiAgICAgICAgICAgICAgICB1YWZfb2JiX3N0YXR1c19yZXF1ZXN0X2RpY3Rpb25hcnkgPSB7ICJvcGVyYXRpb24iOiAiU1RBVFVTXyVzIiAl
 IHVhZl9vYmJfYXV0aF9tZXRob2QsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ1c2VyTmFtZSI6IHVzZXJfbmFtZSwKICAgICAgICAgICAgICA
 gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5lZWREZXRhaWxzIjogMSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm
 9vYlN0YXR1c0hhbmRsZSI6IHVhZl9vYmJfc3RhcnRfcmVzcG9uc2VfanNvblsib29iU3RhdHVzSGFuZGxlIl0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI
 CAgICB9CiAgICAKICAgICAgICAgICAgICAgIHVhZl9vYmJfc3RhdHVzX3JlcXVlc3QgPSBqc29uLmR1bXBzKHVhZl9vYmJfc3RhdHVzX3JlcXVlc3RfZGljdGlvbmFyeSwgc2VwYXJhdG9ycz0oJywn
 LCc6JykpCiAgICAgICAgICAgICAgICBwcmludCAiVUFGLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMi4gUHJlcGFyZWQgU1RBVFVTIHJlcXVlc3Q6ICclcycgdG8gc2VuZCB0byAnJXMnIiAlICh1YWZ
 fb2JiX3N0YXR1c19yZXF1ZXN0LCB1YWZfb2JiX3NlcnZlcl91cmkpCgogICAgICAgICAgICAgICAgdWFmX3N0YXR1c19vYmJfcmVzcG9uc2UgPSBzZWxmLmV4ZWN1dGVQb3N0KHVhZl9vYmJfc2Vydm
 VyX3VyaSwgdWFmX29iYl9zdGF0dXNfcmVxdWVzdCkKICAgICAgICAgICAgICAgIGlmIHVhZl9zdGF0dXNfb2JiX3Jlc3BvbnNlID09IE5vbmU6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEZhb
 HNlCgogICAgICAgICAgICAgICAgcHJpbnQgIlVBRi4gQXV0aGVudGljYXRlIGZvciBzdGVwIDIuIEdldCBTVEFUVVMgcmVzcG9uc2U6ICclcyciICUgdWFmX3N0YXR1c19vYmJfcmVzcG9uc2UKICAg
 ICAgICAgICAgICAgIHVhZl9zdGF0dXNfb2JiX3Jlc3BvbnNlX2pzb24gPSBqc29uLmxvYWRzKHVhZl9zdGF0dXNfb2JiX3Jlc3BvbnNlKQogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB
 pZiB1YWZfc3RhdHVzX29iYl9yZXNwb25zZV9qc29uWyJzdGF0dXNDb2RlIl0gIT0gNDAwMDoKICAgICAgICAgICAgICAgICAgICBwcmludCAiVUFGLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMi4gVU
 FGIG9wZXJhdGlvbiBzdGF0dXMgaXMgaW52YWxpZC4gc3RhdHVzQ29kZTogJyVzJyIgJSB1YWZfc3RhdHVzX29iYl9yZXNwb25zZV9qc29uWyJzdGF0dXNDb2RlIl0KICAgICAgICAgICAgICAgICAgI
 CByZXR1cm4gRmFsc2UKCiAgICAgICAgICAgICAgICB1YWZfdXNlcl9kZXZpY2VfaGFuZGxlID0gdWFmX3N0YXR1c19vYmJfcmVzcG9uc2VfanNvblsiYWRkaXRpb25hbEluZm8iXVsiYXV0aGVudGlj
 YXRvcnNSZXN1bHQiXVsiaGFuZGxlIl0KCiAgICAgICAgICAgIGlmIFN0cmluZ0hlbHBlci5pc0VtcHR5KHVhZl91c2VyX2RldmljZV9oYW5kbGUpOgogICAgICAgICAgICAgICAgcHJpbnQgIlVBRi4
 gUHJlcGFyZSBmb3Igc3RlcCAyLiBGYWlsZWQgdG8gZ2V0IFVBRiBoYW5kbGUiCiAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgICAgIHVhZl91c2VyX2V4dGVybmFsX3VpZCA9IC
 J1YWY6JXMiICUgdWFmX3VzZXJfZGV2aWNlX2hhbmRsZQogICAgICAgICAgICBwcmludCAiVUFGLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMi4gVUFGIGhhbmRsZTogJyVzJyIgJSB1YWZfdXNlcl9le
 HRlcm5hbF91aWQKCiAgICAgICAgICAgIGlmIHVhZl9hdXRoX21ldGhvZCA9PSAiYXV0aGVudGljYXRlIjoKICAgICAgICAgICAgICAgICMgVmFsaWRhdGUgaWYgdXNlciB1c2VkIGRldmljZSB3aXRo
 IHNhbWUga2VZSGFuZGxlCiAgICAgICAgICAgICAgICB1c2VyX2Vucm9sbG1lbnRzID0gc2VsZi5maW5kRW5yb2xsbWVudHMoY3JlZGVudGlhbHMpCiAgICAgICAgICAgICAgICBpZiBsZW4odXNlcl9
 lbnJvbGxtZW50cykgPT0gMDoKICAgICAgICAgICAgICAgICAgICB1YWZfYXV0aF9tZXRob2QgPSAiZW5yb2xsIgogICAgICAgICAgICAgICAgICAgIHByaW50ICJVQUYuIEF1dGhlbnRpY2F0ZSBmb3
 Igc3RlcCAyLiBUaGVyZSBpcyBubyBVQUYgZW5yb2xsbWVudCBmb3IgdXNlciAnJXMnLiIgJSB1c2VyX25hbWUKICAgICAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKICAgICAgICAgICAgICAgI
 AogICAgICAgICAgICAgICAgZm9yIHVzZXJfZW5yb2xsbWVudCBpbiB1c2VyX2Vucm9sbG1lbnRzOgogICAgICAgICAgICAgICAgICAgIGlmIFN0cmluZ0hlbHBlci5lcXVhbHNJZ25vcmVDYXNlKHVz
 ZXJfZW5yb2xsbWVudCwgdWFmX3VzZXJfZGV2aWNlX2hhbmRsZSk6CiAgICAgICAgICAgICAgICAgICAgICAgIHByaW50ICJVQUYuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAyLiBUaGVyZSBpcyBVQUY
 gZW5yb2xsbWVudCBmb3IgdXNlciAnJXMnLiBVc2VyIGF1dGhlbnRpY2F0ZWQgc3VjY2Vzc2Z1bGx5IiAlIHVzZXJfbmFtZQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gVHJ1ZQogICAgIC
 AgICAgICBlbHNlOgogICAgICAgICAgICAgICAgdXNlclNlcnZpY2UgPSBVc2VyU2VydmljZS5pbnN0YW5jZSgpCgogICAgICAgICAgICAgICAgIyBEb3VibGUgY2hlY2sganVzdCB0byBtYWtlIHN1c
 mUuIFdlIGRpZCBjaGVja2luZyBpbiBwcmV2aW91cyBzdGVwCiAgICAgICAgICAgICAgICAjIENoZWNrIGlmIHRoZXJlIGlzIHVzZXIgd2hpY2ggaGFzIHVhZl91c2VyX2V4dGVybmFsX3VpZAogICAg
 ICAgICAgICAgICAgIyBBdm9pZCBtYXBwaW5nIHVzZXIgY2VydCB0byBtb3JlIHRoYW4gb25lIElEUCBhY2NvdW50CiAgICAgICAgICAgICAgICBmaW5kX3VzZXJfYnlfZXh0ZXJuYWxfdWlkID0gdXN
 lclNlcnZpY2UuZ2V0VXNlckJ5QXR0cmlidXRlKCJveEV4dGVybmFsVWlkIiwgdWFmX3VzZXJfZXh0ZXJuYWxfdWlkKQogICAgICAgICAgICAgICAgaWYgZmluZF91c2VyX2J5X2V4dGVybmFsX3VpZC
 A9PSBOb25lOgogICAgICAgICAgICAgICAgICAgICMgQWRkIHVhZl91c2VyX2V4dGVybmFsX3VpZCB0byB1c2VyJ3MgZXh0ZXJuYWwgR1VJRCBsaXN0CiAgICAgICAgICAgICAgICAgICAgZmluZF91c
 2VyX2J5X2V4dGVybmFsX3VpZCA9IHVzZXJTZXJ2aWNlLmFkZFVzZXJBdHRyaWJ1dGUodXNlcl9uYW1lLCAib3hFeHRlcm5hbFVpZCIsIHVhZl91c2VyX2V4dGVybmFsX3VpZCkKICAgICAgICAgICAg
 ICAgICAgICBpZiBmaW5kX3VzZXJfYnlfZXh0ZXJuYWxfdWlkID09IE5vbmU6CiAgICAgICAgICAgICAgICAgICAgICAgIHByaW50ICJVQUYuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAyLiBGYWlsZWQ
 gdG8gdXBkYXRlIGN1cnJlbnQgdXNlciIKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlCiAgICAKICAgICAgICAgICAgICAgICAgICByZXR1cm4gVHJ1ZQoKICAgICAgICAgICAgcm
 V0dXJuIEZhbHNlCiAgICAgICAgZWxzZToKICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgZGVmIHByZXBhcmVGb3JTdGVwKHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCByZXF1ZXN0U
 GFyYW1ldGVycywgc3RlcCk6CiAgICAgICAgY3JlZGVudGlhbHMgPSBJZGVudGl0eS5pbnN0YW5jZSgpLmdldENyZWRlbnRpYWxzKCkKICAgICAgICBjb250ZXh0ID0gQ29udGV4dHMuZ2V0RXZlbnRD
 b250ZXh0KCkKICAgICAgICBzZXNzaW9uX2F0dHJpYnV0ZXMgPSBjb250ZXh0LmdldCgic2Vzc2lvbkF0dHJpYnV0ZXMiKQoKICAgICAgICBzZWxmLnNldEV2ZW50Q29udGV4dFBhcmFtZXRlcnMoY29
 udGV4dCkKCiAgICAgICAgaWYgKHN0ZXAgPT0gMSk6CiAgICAgICAgICAgIHJldHVybiBUcnVlCiAgICAgICAgZWxpZiAoc3RlcCA9PSAyKToKICAgICAgICAgICAgcHJpbnQgIlVBRi4gUHJlcGFyZS
 Bmb3Igc3RlcCAyIgoKICAgICAgICAgICAgc2Vzc2lvbl9zdGF0ZSA9IFNlc3Npb25TdGF0ZVNlcnZpY2UuaW5zdGFuY2UoKS5nZXRTZXNzaW9uU3RhdGVGcm9tQ29va2llKCkKICAgICAgICAgICAga
 WYgU3RyaW5nSGVscGVyLmlzRW1wdHkoc2Vzc2lvbl9zdGF0ZSk6CiAgICAgICAgICAgICAgICBwcmludCAiVUFGLiBQcmVwYXJlIGZvciBzdGVwIDIuIEZhaWxlZCB0byBkZXRlcm1pbmUgc2Vzc2lv
 bl9zdGF0ZSIKICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgYXV0aGVudGljYXRpb25TZXJ2aWNlID0gQXV0aGVudGljYXRpb25TZXJ2aWNlLmluc3RhbmNlKCkKICAgICA
 gICAgICAgdXNlciA9IGF1dGhlbnRpY2F0aW9uU2VydmljZS5nZXRBdXRoZW50aWNhdGVkVXNlcigpCiAgICAgICAgICAgIGlmICh1c2VyID09IE5vbmUpOgogICAgICAgICAgICAgICAgcHJpbnQgIl
 VBRi4gUHJlcGFyZSBmb3Igc3RlcCAyLiBGYWlsZWQgdG8gZGV0ZXJtaW5lIHVzZXIgbmFtZSIKICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgdWFmX2F1dGhfbWV0aG9kI
 D0gc2Vzc2lvbl9hdHRyaWJ1dGVzLmdldCgidWFmX2F1dGhfbWV0aG9kIikKICAgICAgICAgICAgaWYgU3RyaW5nSGVscGVyLmlzRW1wdHkodWFmX2F1dGhfbWV0aG9kKToKICAgICAgICAgICAgICAg
 IHByaW50ICJVQUYuIFByZXBhcmUgZm9yIHN0ZXAgMi4gRmFpbGVkIHRvIGRldGVybWluZSBhdXRoX21ldGhvZCIKICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgcHJpbnQ
 gIlVBRi4gUHJlcGFyZSBmb3Igc3RlcCAyLiB1YWZfYXV0aF9tZXRob2Q6ICclcyciICUgdWFmX2F1dGhfbWV0aG9kCgogICAgICAgICAgICB1YWZfb2JiX2F1dGhfbWV0aG9kID0gIk9PQl9SRUciCi
 AgICAgICAgICAgIHVhZl9vYmJfc2VydmVyX3VyaSA9IHNlbGYudWFmX3NlcnZlcl91cmkgKyAiL25ubC92Mi9yZWciIAogICAgICAgICAgICBpZiBTdHJpbmdIZWxwZXIuZXF1YWxzSWdub3JlQ2FzZ
 Sh1YWZfYXV0aF9tZXRob2QsICJhdXRoZW50aWNhdGUiKToKICAgICAgICAgICAgICAgIHVhZl9vYmJfYXV0aF9tZXRob2QgPSAiT09CX0FVVEgiCiAgICAgICAgICAgICAgICB1YWZfb2JiX3NlcnZl
 cl91cmkgPSBzZWxmLnVhZl9zZXJ2ZXJfdXJpICsgIi9ubmwvdjIvYXV0aCIgCgogICAgICAgICAgICAjIFByZXBhcmUgU1RBUlRfT0JCCiAgICAgICAgICAgIHVhZl9vYmJfc3RhcnRfcmVxdWVzdF9
 kaWN0aW9uYXJ5ID0geyAib3BlcmF0aW9uIjogIlNUQVJUXyVzIiAlIHVhZl9vYmJfYXV0aF9tZXRob2QsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidX
 Nlck5hbWUiOiB1c2VyLmdldFVzZXJJZCgpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInBvbGljeU5hbWUiOiAiZGVmYXVsdCIsCiAgICAgICAgICAgI
 CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAib29iTW9kZSI6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7ICJxciI6ICJ0cnVl
 IiwgInJhd0RhdGEiOiAiZmFsc2UiLCAicHVzaCI6ICJmYWxzZSIgfSAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICB1YWZfb2JiX3N
 0YXJ0X3JlcXVlc3QgPSBqc29uLmR1bXBzKHVhZl9vYmJfc3RhcnRfcmVxdWVzdF9kaWN0aW9uYXJ5LCBzZXBhcmF0b3JzPSgnLCcsJzonKSkKICAgICAgICAgICAgcHJpbnQgIlVBRi4gUHJlcGFyZS
 Bmb3Igc3RlcCAyLiBQcmVwYXJlZCBTVEFSVCByZXF1ZXN0OiAnJXMnIHRvIHNlbmQgdG8gJyVzJyIgJSAodWFmX29iYl9zdGFydF9yZXF1ZXN0LCB1YWZfb2JiX3NlcnZlcl91cmkpCgogICAgICAgI
 CAgICAjIFJlcXVlc3QgU1RBUlRfT0JCCiAgICAgICAgICAgIHVhZl9vYmJfc3RhcnRfcmVzcG9uc2UgPSBzZWxmLmV4ZWN1dGVQb3N0KHVhZl9vYmJfc2VydmVyX3VyaSwgdWFmX29iYl9zdGFydF9y
 ZXF1ZXN0KQogICAgICAgICAgICBpZiB1YWZfb2JiX3N0YXJ0X3Jlc3BvbnNlID09IE5vbmU6CiAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgICAgIHByaW50ICJVQUYuIFByZXB
 hcmUgZm9yIHN0ZXAgMi4gR2V0IFNUQVJUIHJlc3BvbnNlOiAnJXMnIiAlIHVhZl9vYmJfc3RhcnRfcmVzcG9uc2UKICAgICAgICAgICAgdWFmX29iYl9zdGFydF9yZXNwb25zZV9qc29uID0ganNvbi
 5sb2Fkcyh1YWZfb2JiX3N0YXJ0X3Jlc3BvbnNlKQoKICAgICAgICAgICAgIyBQcmVwYXJlIFNUQVRVU19PQkIKICAgICAgICAgICAgI1RPRE86IFJlbW92ZSBuZWVkRGV0YWlscyBwYXJhbWV0ZXIKI
 CAgICAgICAgICAgdWFmX29iYl9zdGF0dXNfcmVxdWVzdF9kaWN0aW9uYXJ5ID0geyAib3BlcmF0aW9uIjogIlNUQVRVU18lcyIgJSB1YWZfb2JiX2F1dGhfbWV0aG9kLAogICAgICAgICAgICAgICAg
 ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ1c2VyTmFtZSI6IHVzZXIuZ2V0VXNlcklkKCksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA
 gIm5lZWREZXRhaWxzIjogMSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAib29iU3RhdHVzSGFuZGxlIjogdWFmX29iYl9zdGFydF9yZXNwb25zZV9qc2
 9uWyJvb2JTdGF0dXNIYW5kbGUiXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgdWFmX29iYl9zdGF0dXNfcmVxdWVzdCA9IGpzb
 24uZHVtcHModWFmX29iYl9zdGF0dXNfcmVxdWVzdF9kaWN0aW9uYXJ5LCBzZXBhcmF0b3JzPSgnLCcsJzonKSkKICAgICAgICAgICAgcHJpbnQgIlVBRi4gUHJlcGFyZSBmb3Igc3RlcCAyLiBQcmVw
 YXJlZCBTVEFUVVMgcmVxdWVzdDogJyVzJyB0byBzZW5kIHRvICclcyciICUgKHVhZl9vYmJfc3RhdHVzX3JlcXVlc3QsIHVhZl9vYmJfc2VydmVyX3VyaSkKCiAgICAgICAgICAgIGNvbnRleHQuc2V
 0KCJ1YWZfb2JiX2F1dGhfbWV0aG9kIiwgdWFmX29iYl9hdXRoX21ldGhvZCkKICAgICAgICAgICAgY29udGV4dC5zZXQoInVhZl9vYmJfc2VydmVyX3VyaSIsIHVhZl9vYmJfc2VydmVyX3VyaSkKIC
 AgICAgICAgICAgY29udGV4dC5zZXQoInVhZl9vYmJfc3RhcnRfcmVzcG9uc2UiLCB1YWZfb2JiX3N0YXJ0X3Jlc3BvbnNlKQogICAgICAgICAgICBjb250ZXh0LnNldCgicXJfaW1hZ2UiLCB1YWZfb
 2JiX3N0YXJ0X3Jlc3BvbnNlX2pzb25bIm1vZGVSZXN1bHQiXVsicXJDb2RlIl1bInFySW1hZ2UiXSkKICAgICAgICAgICAgY29udGV4dC5zZXQoInVhZl9vYmJfc3RhdHVzX3JlcXVlc3QiLCB1YWZf
 b2JiX3N0YXR1c19yZXF1ZXN0KQoKICAgICAgICAgICAgcmV0dXJuIFRydWUKICAgICAgICBlbHNlOgogICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICBkZWYgZ2V0RXh0cmFQYXJhbWV0ZXJzRm9
 yU3RlcChzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcywgc3RlcCk6CiAgICAgICAgcmV0dXJuIEFycmF5cy5hc0xpc3QoInVhZl9hdXRoX21ldGhvZCIsICJ1YWZfb2JiX2F1dGhfbWV0aG9kIi
 wgInVhZl9vYmJfc2VydmVyX3VyaSIsICJ1YWZfb2JiX3N0YXJ0X3Jlc3BvbnNlIikKCiAgICBkZWYgZ2V0Q291bnRBdXRoZW50aWNhdGlvblN0ZXBzKHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1d
 GVzKToKICAgICAgICByZXR1cm4gMgoKICAgIGRlZiBnZXRQYWdlRm9yU3RlcChzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcywgc3RlcCk6CiAgICAgICAgaWYgKHN0ZXAgPT0gMik6CiAgICAg
 ICAgICAgIHJldHVybiAiL2F1dGgvdWFmL2xvZ2luLnhodG1sIgoKICAgICAgICByZXR1cm4gIiIKCiAgICBkZWYgbG9nb3V0KHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCByZXF1ZXN0UGF
 yYW1ldGVycyk6CiAgICAgICAgcmV0dXJuIFRydWUKCiAgICBkZWYgc2V0RXZlbnRDb250ZXh0UGFyYW1ldGVycyhzZWxmLCBjb250ZXh0KToKICAgICAgICBpZiBzZWxmLnJlZ2lzdHJhdGlvbl91cm
 kgIT0gTm9uZToKICAgICAgICAgICAgY29udGV4dC5zZXQoImV4dGVybmFsX3JlZ2lzdHJhdGlvbl91cmkiLCBzZWxmLnJlZ2lzdHJhdGlvbl91cmkpCiAgICAgICAgY29udGV4dC5zZXQoInFyX29wd
 GlvbnMiLCBzZWxmLmN1c3RvbVFyT3B0aW9ucykKCiAgICBkZWYgcHJvY2Vzc0Jhc2ljQXV0aGVudGljYXRpb24oc2VsZiwgY3JlZGVudGlhbHMpOgogICAgICAgIHVzZXJTZXJ2aWNlID0gVXNlclNl
 cnZpY2UuaW5zdGFuY2UoKQoKICAgICAgICB1c2VyX25hbWUgPSBjcmVkZW50aWFscy5nZXRVc2VybmFtZSgpCiAgICAgICAgdXNlcl9wYXNzd29yZCA9IGNyZWRlbnRpYWxzLmdldFBhc3N3b3JkKCk
 KCiAgICAgICAgbG9nZ2VkX2luID0gRmFsc2UKICAgICAgICBpZiBTdHJpbmdIZWxwZXIuaXNOb3RFbXB0eVN0cmluZyh1c2VyX25hbWUpIGFuZCBTdHJpbmdIZWxwZXIuaXNOb3RFbXB0eVN0cmluZy
 h1c2VyX3Bhc3N3b3JkKToKICAgICAgICAgICAgbG9nZ2VkX2luID0gdXNlclNlcnZpY2UuYXV0aGVudGljYXRlKHVzZXJfbmFtZSwgdXNlcl9wYXNzd29yZCkKCiAgICAgICAgaWYgbm90IGxvZ2dlZ
 F9pbjoKICAgICAgICAgICAgcmV0dXJuIE5vbmUKCiAgICAgICAgZmluZF91c2VyX2J5X3VpZCA9IHVzZXJTZXJ2aWNlLmdldFVzZXIodXNlcl9uYW1lKQogICAgICAgIGlmIGZpbmRfdXNlcl9ieV91
 aWQgPT0gTm9uZToKICAgICAgICAgICAgcHJpbnQgIlVBRi4gUHJvY2VzcyBiYXNpYyBhdXRoZW50aWNhdGlvbi4gRmFpbGVkIHRvIGZpbmQgdXNlciAnJXMnIiAlIHVzZXJfbmFtZQogICAgICAgICA
 gICByZXR1cm4gTm9uZQogICAgICAgIAogICAgICAgIHJldHVybiBmaW5kX3VzZXJfYnlfdWlkCgogICAgZGVmIGZpbmRFbnJvbGxtZW50cyhzZWxmLCBjcmVkZW50aWFscyk6CiAgICAgICAgcmVzdW
 x0ID0gW10KCiAgICAgICAgdXNlclNlcnZpY2UgPSBVc2VyU2VydmljZS5pbnN0YW5jZSgpCiAgICAgICAgdXNlcl9uYW1lID0gY3JlZGVudGlhbHMuZ2V0VXNlcm5hbWUoKQogICAgICAgIHVzZXIgP
 SB1c2VyU2VydmljZS5nZXRVc2VyKHVzZXJfbmFtZSwgIm94RXh0ZXJuYWxVaWQiKQogICAgICAgIGlmIHVzZXIgPT0gTm9uZToKICAgICAgICAgICAgcHJpbnQgIlVBRi4gRmluZCBlbnJvbGxtZW50
 cy4gRmFpbGVkIHRvIGZpbmQgdXNlciIKICAgICAgICAgICAgcmV0dXJuIHJlc3VsdAogICAgICAgIAogICAgICAgIHVzZXJfY3VzdG9tX2V4dF9hdHRyaWJ1dGUgPSB1c2VyU2VydmljZS5nZXRDdXN
 0b21BdHRyaWJ1dGUodXNlciwgIm94RXh0ZXJuYWxVaWQiKQogICAgICAgIGlmIHVzZXJfY3VzdG9tX2V4dF9hdHRyaWJ1dGUgPT0gTm9uZToKICAgICAgICAgICAgcmV0dXJuIHJlc3VsdAogICAgIC
 AgIAogICAgICAgIHVhZl9wcmVmaXggPSAidWFmOiIKICAgICAgICB1YWZfcHJlZml4X2xlbmd0aCA9IGxlbih1YWZfcHJlZml4KSAKICAgICAgICBmb3IgdXNlcl9leHRlcm5hbF91aWQgaW4gdXNlc
 l9jdXN0b21fZXh0X2F0dHJpYnV0ZS5nZXRWYWx1ZXMoKToKICAgICAgICAgICAgaW5kZXggPSB1c2VyX2V4dGVybmFsX3VpZC5maW5kKHVhZl9wcmVmaXgpCiAgICAgICAgICAgIGlmIGluZGV4ICE9
 IC0xOgogICAgICAgICAgICAgICAgZW5yb2xsbWVudF91aWQgPSB1c2VyX2V4dGVybmFsX3VpZFt1YWZfcHJlZml4X2xlbmd0aDpdCiAgICAgICAgICAgICAgICByZXN1bHQuYXBwZW5kKGVucm9sbG1
 lbnRfdWlkKQogICAgICAgIAogICAgICAgIHJldHVybiByZXN1bHQKCiAgICBkZWYgZXhlY3V0ZVBvc3Qoc2VsZiwgcmVxdWVzdF91cmksIHJlcXVlc3RfZGF0YSk6CiAgICAgICAgaHR0cFNlcnZpY2
 UgPSBIdHRwU2VydmljZS5pbnN0YW5jZSgpCgogICAgICAgIHJlcXVlc3RfaGVhZGVycyA9IHsgIkNvbnRlbnQtdHlwZSIgOiAiYXBwbGljYXRpb24vanNvbjsgY2hhcnNldD1VVEYtOCIsICJBY2Nlc
 HQiIDogImFwcGxpY2F0aW9uL2pzb24iIH0KCiAgICAgICAgdHJ5OgogICAgICAgICAgICBodHRwX3NlcnZpY2VfcmVzcG9uc2UgPSBodHRwU2VydmljZS5leGVjdXRlUG9zdChzZWxmLmh0dHBfY2xp
 ZW50LCByZXF1ZXN0X3VyaSwgTm9uZSwgcmVxdWVzdF9oZWFkZXJzLCByZXF1ZXN0X2RhdGEpCiAgICAgICAgICAgIGh0dHBfcmVzcG9uc2UgPSBodHRwX3NlcnZpY2VfcmVzcG9uc2UuZ2V0SHR0cFJ
 lc3BvbnNlKCkKICAgICAgICBleGNlcHQ6CiAgICAgICAgICAgIHByaW50ICJVQUYuIFZhbGlkYXRlIFBPU1QgcmVzcG9uc2UuIEV4Y2VwdGlvbjogIiwgc3lzLmV4Y19pbmZvKClbMV0KICAgICAgIC
 AgICAgcmV0dXJuIE5vbmUKCiAgICAgICAgdHJ5OgogICAgICAgICAgICBpZiBub3QgaHR0cFNlcnZpY2UuaXNSZXNwb25zZVN0YXN0dXNDb2RlT2soaHR0cF9yZXNwb25zZSk6CiAgICAgICAgICAgI
 CAgICBwcmludCAiVUFGLiBWYWxpZGF0ZSBQT1NUIHJlc3BvbnNlLiBHZXQgaW52YWxpZCByZXNwb25zZSBmcm9tICBzZXJ2ZXI6ICVzIiAlIHN0cihodHRwX3Jlc3BvbnNlLmdldFN0YXR1c0xpbmUo
 KS5nZXRTdGF0dXNDb2RlKCkpCiAgICAgICAgICAgICAgICBodHRwU2VydmljZS5jb25zdW1lKGh0dHBfcmVzcG9uc2UpCiAgICAgICAgICAgICAgICByZXR1cm4gTm9uZQogICAgCiAgICAgICAgICA
 gIHJlc3BvbnNlX2J5dGVzID0gaHR0cFNlcnZpY2UuZ2V0UmVzcG9uc2VDb250ZW50KGh0dHBfcmVzcG9uc2UpCiAgICAgICAgICAgIHJlc3BvbnNlX3N0cmluZyA9IGh0dHBTZXJ2aWNlLmNvbnZlcn
 RFbnRpdHlUb1N0cmluZyhyZXNwb25zZV9ieXRlcykKICAgICAgICAgICAgaHR0cFNlcnZpY2UuY29uc3VtZShodHRwX3Jlc3BvbnNlKQogICAgICAgICAgICAKICAgICAgICAgICAgcmV0dXJuIHJlc
 3BvbnNlX3N0cmluZwogICAgICAgIGZpbmFsbHk6CiAgICAgICAgICAgIGh0dHBfc2VydmljZV9yZXNwb25zZS5jbG9zZUNvbm5lY3Rpb24oKQogICAgICAgIHJldHVybiBOb25lCg==
oxScriptType: person_authentication
programmingLanguage: python

dn: inum=%(inumOrg)s!0011!5018.D4BF,ou=scripts,o=%(inumOrg)s,o=gluu
objectClass: top
objectClass: oxCustomScript
description: HOTP/TOPT authentication module
displayName: otp
gluuStatus: false
inum: %(inumOrg)s!0011!5018.D4BF
oxConfigurationProperty: {"value1":"otp_type","value2":"totp","description":""}
oxConfigurationProperty: {"value1":"otp_conf_file","value2":"/etc/certs/otp_configuration.json","description":""}
oxConfigurationProperty: {"value1":"issuer","value2":"Gluu Inc","description":""}
oxConfigurationProperty: {"value1":"label","value2":"Gluu OTP","description":""}
oxConfigurationProperty: {"value1":"qr_options","value2":"{ size: 400, mSize: 0.05 }","description":""}
oxConfigurationProperty: {"value1":"registration_uri","value2":"https://%(hostname)s/identity/register","description":""}
oxLevel: 50
oxModuleProperty: {"value1":"location_type","value2":"ldap","description":""}
oxModuleProperty: {"value1":"usage_type","value2":"interactive","description":""}
oxRevision: 1
oxScript:: IyBveEF1dGggaXMgYXZhaWxhYmxlIHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoMjAwOCkuIFNlZSBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUIGZvciBmdWxsIHRleHQuC
 iMgQ29weXJpZ2h0IChjKSAyMDE2LCBHbHV1CiMKIyBBdXRob3I6IFl1cml5IE1vdmNoYW4KIwoKIyBSZXF1aXJlcyB0aGUgZm9sbG93aW5nIGN1c3RvbSBwcm9wZXJ0aWVzIGFuZCB2YWx1ZXM6CiMg
 ICBvdHBfdHlwZTogdG90cC9odG9wCiMgICBpc3N1ZXI6IEdsdXUgSW5jCiMgICBvdHBfY29uZl9maWxlOiAvZXRjL2NlcnRzL290cF9jb25maWd1cmF0aW9uLmpzb24KIwojIFRoZXNlIGFyZSBub24
 gbWFuZGF0b3J5IGN1c3RvbSBwcm9wZXJ0aWVzIGFuZCB2YWx1ZXM6CiMgICBsYWJlbDogR2x1dSBPVFAKIyAgIHFyX29wdGlvbnM6IHsgd2lkdGg6IDQwMCwgaGVpZ2h0OiA0MDAgfQojICAgcmVnaX
 N0cmF0aW9uX3VyaTogaHR0cHM6Ly9jZS1kZXYuZ2x1dS5vcmcvaWRlbnRpdHkvcmVnaXN0ZXIKCmZyb20gb3JnLnhkaS5tb2RlbC5jdXN0b20uc2NyaXB0LnR5cGUuYXV0aCBpbXBvcnQgUGVyc29uQ
 XV0aGVudGljYXRpb25UeXBlCmZyb20gb3JnLmpib3NzLnNlYW0uZmFjZXMgaW1wb3J0IEZhY2VzTWVzc2FnZXMKZnJvbSBqYXZheC5mYWNlcy5jb250ZXh0IGltcG9ydCBGYWNlc0NvbnRleHQKZnJv
 bSBvcmcuamJvc3Muc2VhbS5pbnRlcm5hdGlvbmFsIGltcG9ydCBTdGF0dXNNZXNzYWdlCmZyb20gb3JnLmpib3NzLnNlYW0uY29udGV4dHMgaW1wb3J0IENvbnRleHQsIENvbnRleHRzCmZyb20gb3J
 nLmpib3NzLnNlYW0uc2VjdXJpdHkgaW1wb3J0IElkZW50aXR5CmZyb20gb3JnLnhkaS5veGF1dGguc2VydmljZSBpbXBvcnQgVXNlclNlcnZpY2UsIEF1dGhlbnRpY2F0aW9uU2VydmljZSwgU2Vzc2
 lvblN0YXRlU2VydmljZQpmcm9tIG9yZy54ZGkudXRpbCBpbXBvcnQgU3RyaW5nSGVscGVyCmZyb20gb3JnLnhkaS51dGlsIGltcG9ydCBBcnJheUhlbHBlcgpmcm9tIG9yZy54ZGkub3hhdXRoLnV0a
 WwgaW1wb3J0IFNlcnZlclV0aWwKZnJvbSBqYXZhLnV0aWwgaW1wb3J0IEFycmF5cwoKZnJvbSBqYXZhLnNlY3VyaXR5IGltcG9ydCBTZWN1cmVSYW5kb20KZnJvbSBqYXZhLnV0aWwuY29uY3VycmVu
 dCBpbXBvcnQgVGltZVVuaXQKCmZyb20gY29tLmdvb2dsZS5jb21tb24uaW8gaW1wb3J0IEJhc2VFbmNvZGluZwoKZnJvbSBjb20ubG9jaGJyaWRnZS5vYXRoLm90cCBpbXBvcnQgVE9UUApmcm9tIGN
 vbS5sb2NoYnJpZGdlLm9hdGgub3RwIGltcG9ydCBIT1RQCmZyb20gY29tLmxvY2hicmlkZ2Uub2F0aC5vdHAgaW1wb3J0IEhPVFBWYWxpZGF0aW9uUmVzdWx0CmZyb20gY29tLmxvY2hicmlkZ2Uub2
 F0aC5vdHAgaW1wb3J0IEhPVFBWYWxpZGF0b3IKZnJvbSBjb20ubG9jaGJyaWRnZS5vYXRoLm90cCBpbXBvcnQgSG1hY1NoYUFsZ29yaXRobQoKZnJvbSBjb20ubG9jaGJyaWRnZS5vYXRoLm90cC5rZ
 Xlwcm92aXNpb25pbmcgaW1wb3J0IE9UUEF1dGhVUklCdWlsZGVyOwpmcm9tIGNvbS5sb2NoYnJpZGdlLm9hdGgub3RwLmtleXByb3Zpc2lvbmluZyBpbXBvcnQgT1RQS2V5Owpmcm9tIGNvbS5sb2No
 YnJpZGdlLm9hdGgub3RwLmtleXByb3Zpc2lvbmluZy5PVFBLZXkgaW1wb3J0IE9UUFR5cGU7CgppbXBvcnQgc3lzCmltcG9ydCBqYXZhCmltcG9ydCBqYXJyYXkKCnRyeToKICAgIGltcG9ydCBqc29
 uCmV4Y2VwdCBJbXBvcnRFcnJvcjoKICAgIGltcG9ydCBzaW1wbGVqc29uIGFzIGpzb24KCmNsYXNzIFBlcnNvbkF1dGhlbnRpY2F0aW9uKFBlcnNvbkF1dGhlbnRpY2F0aW9uVHlwZSk6CiAgICBkZW
 YgX19pbml0X18oc2VsZiwgY3VycmVudFRpbWVNaWxsaXMpOgogICAgICAgIHNlbGYuY3VycmVudFRpbWVNaWxsaXMgPSBjdXJyZW50VGltZU1pbGxpcwoKICAgIGRlZiBpbml0KHNlbGYsIGNvbmZpZ
 3VyYXRpb25BdHRyaWJ1dGVzKToKICAgICAgICBwcmludCAiT1RQLiBJbml0aWFsaXphdGlvbiIKCiAgICAgICAgaWYgbm90IGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmNvbnRhaW5zS2V5KCJvdHBf
 dHlwZSIpOgogICAgICAgICAgICBwcmludCAiT1RQLiBJbml0aWFsaXphdGlvbi4gUHJvcGVydHkgb3RwX3R5cGUgaXMgbWFuZGF0b3J5IgogICAgICAgICAgICByZXR1cm4gRmFsc2UKICAgICAgICB
 zZWxmLm90cFR5cGUgPSBjb25maWd1cmF0aW9uQXR0cmlidXRlcy5nZXQoIm90cF90eXBlIikuZ2V0VmFsdWUyKCkKCiAgICAgICAgaWYgbm90IHNlbGYub3RwVHlwZSBpbiBbImhvdHAiLCAidG90cC
 JdOgogICAgICAgICAgICBwcmludCAiT1RQLiBJbml0aWFsaXphdGlvbi4gUHJvcGVydHkgdmFsdWUgb3RwX3R5cGUgaXMgaW52YWxpZCIKICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgICAgI
 GlmIG5vdCBjb25maWd1cmF0aW9uQXR0cmlidXRlcy5jb250YWluc0tleSgiaXNzdWVyIik6CiAgICAgICAgICAgIHByaW50ICJPVFAuIEluaXRpYWxpemF0aW9uLiBQcm9wZXJ0eSBpc3N1ZXIgaXMg
 bWFuZGF0b3J5IgogICAgICAgICAgICByZXR1cm4gRmFsc2UKICAgICAgICBzZWxmLm90cElzc3VlciA9IGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmdldCgiaXNzdWVyIikuZ2V0VmFsdWUyKCkKCiA
 gICAgICAgc2VsZi5jdXN0b21MYWJlbCA9IE5vbmUKICAgICAgICBpZiBjb25maWd1cmF0aW9uQXR0cmlidXRlcy5jb250YWluc0tleSgibGFiZWwiKToKICAgICAgICAgICAgc2VsZi5jdXN0b21MYW
 JlbCA9IGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmdldCgibGFiZWwiKS5nZXRWYWx1ZTIoKQoKICAgICAgICBzZWxmLmN1c3RvbVFyT3B0aW9ucyA9IHt9CiAgICAgICAgaWYgY29uZmlndXJhdGlvb
 kF0dHJpYnV0ZXMuY29udGFpbnNLZXkoInFyX29wdGlvbnMiKToKICAgICAgICAgICAgc2VsZi5jdXN0b21Rck9wdGlvbnMgPSBjb25maWd1cmF0aW9uQXR0cmlidXRlcy5nZXQoInFyX29wdGlvbnMi
 KS5nZXRWYWx1ZTIoKQoKICAgICAgICBzZWxmLnJlZ2lzdHJhdGlvblVyaSA9IE5vbmUKICAgICAgICBpZiBjb25maWd1cmF0aW9uQXR0cmlidXRlcy5jb250YWluc0tleSgicmVnaXN0cmF0aW9uX3V
 yaSIpOgogICAgICAgICAgICBzZWxmLnJlZ2lzdHJhdGlvblVyaSA9IGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmdldCgicmVnaXN0cmF0aW9uX3VyaSIpLmdldFZhbHVlMigpCgogICAgICAgIHZhbG
 lkT3RwQ29uZmlndXJhdGlvbiA9IHNlbGYubG9hZE90cENvbmZpZ3VyYXRpb24oY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpCiAgICAgICAgaWYgbm90IHZhbGlkT3RwQ29uZmlndXJhdGlvbjoKICAgI
 CAgICAgICAgcmV0dXJuIEZhbHNlCiAgICAgICAgCiAgICAgICAgcHJpbnQgIk9UUC4gSW5pdGlhbGl6ZWQgc3VjY2Vzc2Z1bGx5IgogICAgICAgIHJldHVybiBUcnVlCgogICAgZGVmIGRlc3Ryb3ko
 c2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOgogICAgICAgIHByaW50ICJPVFAuIERlc3Ryb3kiCiAgICAgICAgcHJpbnQgIk9UUC4gRGVzdHJveWVkIHN1Y2Nlc3NmdWxseSIKICAgICAgICB
 yZXR1cm4gVHJ1ZQoKICAgIGRlZiBnZXRBcGlWZXJzaW9uKHNlbGYpOgogICAgICAgIHJldHVybiAxCgogICAgZGVmIGlzVmFsaWRBdXRoZW50aWNhdGlvbk1ldGhvZChzZWxmLCB1c2FnZVR5cGUsIG
 NvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKToKICAgICAgICByZXR1cm4gVHJ1ZQoKICAgIGRlZiBnZXRBbHRlcm5hdGl2ZUF1dGhlbnRpY2F0aW9uTWV0aG9kKHNlbGYsIHVzYWdlVHlwZSwgY29uZmlnd
 XJhdGlvbkF0dHJpYnV0ZXMpOgogICAgICAgIHJldHVybiBOb25lCgogICAgZGVmIGF1dGhlbnRpY2F0ZShzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcywgcmVxdWVzdFBhcmFtZXRlcnMsIHN0
 ZXApOgogICAgICAgIGNyZWRlbnRpYWxzID0gSWRlbnRpdHkuaW5zdGFuY2UoKS5nZXRDcmVkZW50aWFscygpCiAgICAgICAgdXNlcl9uYW1lID0gY3JlZGVudGlhbHMuZ2V0VXNlcm5hbWUoKQoKICA
 gICAgICBjb250ZXh0ID0gQ29udGV4dHMuZ2V0RXZlbnRDb250ZXh0KCkKICAgICAgICBzZXNzaW9uX2F0dHJpYnV0ZXMgPSBjb250ZXh0LmdldCgic2Vzc2lvbkF0dHJpYnV0ZXMiKQoKICAgICAgIC
 BzZWxmLnNldEV2ZW50Q29udGV4dFBhcmFtZXRlcnMoY29udGV4dCkKCiAgICAgICAgaWYgc3RlcCA9PSAxOgogICAgICAgICAgICBwcmludCAiT1RQLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMSIKI
 CAgICAgICAgICAgCiAgICAgICAgICAgIGF1dGhlbnRpY2F0ZWRfdXNlciA9IHNlbGYucHJvY2Vzc0Jhc2ljQXV0aGVudGljYXRpb24oY3JlZGVudGlhbHMpCiAgICAgICAgICAgIGlmIGF1dGhlbnRp
 Y2F0ZWRfdXNlciA9PSBOb25lOgogICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgICAgICAgICBvdHBfYXV0aF9tZXRob2QgPSAiYXV0aGVudGljYXRlIgogICAgICAgICAgICAjIFVuY29
 tbWVudCB0aGlzIGJsb2NrIGlmIHlvdSBuZWVkIHRvIGFsbG93IHVzZXIgc2Vjb25kIE9UUCByZWdpc3RyYXRpb24KICAgICAgICAgICAgI2Vucm9sbG1lbnRfbW9kZSA9IFNlcnZlclV0aWwuZ2V0Rm
 lyc3RWYWx1ZShyZXF1ZXN0UGFyYW1ldGVycywgImxvZ2luRm9ybTpyZWdpc3RlckJ1dHRvbiIpCiAgICAgICAgICAgICNpZiBTdHJpbmdIZWxwZXIuaXNOb3RFbXB0eShlbnJvbGxtZW50X21vZGUpO
 gogICAgICAgICAgICAjICAgIG90cF9hdXRoX21ldGhvZCA9ICJlbnJvbGwiCiAgICAgICAgICAgIAogICAgICAgICAgICBpZiBvdHBfYXV0aF9tZXRob2QgPT0gImF1dGhlbnRpY2F0ZSI6CiAgICAg
 ICAgICAgICAgICB1c2VyX2Vucm9sbG1lbnRzID0gc2VsZi5maW5kRW5yb2xsbWVudHModXNlcl9uYW1lKQogICAgICAgICAgICAgICAgaWYgbGVuKHVzZXJfZW5yb2xsbWVudHMpID09IDA6CiAgICA
 gICAgICAgICAgICAgICAgb3RwX2F1dGhfbWV0aG9kID0gImVucm9sbCIKICAgICAgICAgICAgICAgICAgICBwcmludCAiT1RQLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gVGhlcmUgaXMgbm8gT1
 RQIGVucm9sbG1lbnQgZm9yIHVzZXIgJyVzJy4gQ2hhbmdpbmcgb3RwX2F1dGhfbWV0aG9kIHRvICclcyciICUgKHVzZXJfbmFtZSwgb3RwX2F1dGhfbWV0aG9kKQogICAgICAgICAgICAgICAgICAgI
 AogICAgICAgICAgICBpZiBvdHBfYXV0aF9tZXRob2QgPT0gImVucm9sbCI6CiAgICAgICAgICAgICAgICBwcmludCAiT1RQLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gU2V0dGluZyBjb3VudCBz
 dGVwczogJyVzJyIgJSAzCiAgICAgICAgICAgICAgICBjb250ZXh0LnNldCgib3RwX2NvdW50X2xvZ2luX3N0ZXBzIiwgMykKCiAgICAgICAgICAgIHByaW50ICJPVFAuIEF1dGhlbnRpY2F0ZSBmb3I
 gc3RlcCAxLiBvdHBfYXV0aF9tZXRob2Q6ICclcyciICUgb3RwX2F1dGhfbWV0aG9kCiAgICAgICAgICAgIGNvbnRleHQuc2V0KCJvdHBfYXV0aF9tZXRob2QiLCBvdHBfYXV0aF9tZXRob2QpCgogIC
 AgICAgICAgICByZXR1cm4gVHJ1ZQogICAgICAgIGVsaWYgc3RlcCA9PSAyOgogICAgICAgICAgICBwcmludCAiT1RQLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMiIKCiAgICAgICAgICAgIHNlc3Npb
 25fc3RhdGVfdmFsaWRhdGlvbiA9IHNlbGYudmFsaWRhdGVTZXNzaW9uU3RhdGUoc2Vzc2lvbl9hdHRyaWJ1dGVzKQogICAgICAgICAgICBpZiBub3Qgc2Vzc2lvbl9zdGF0ZV92YWxpZGF0aW9uOgog
 ICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgICAgICAgICAjIFJlc3RvcmUgc3RhdGUgZnJvbSBzZXNzaW9uCiAgICAgICAgICAgIG90cF9hdXRoX21ldGhvZCA9IHNlc3Npb25fYXR0cml
 idXRlcy5nZXQoIm90cF9hdXRoX21ldGhvZCIpCiAgICAgICAgICAgIGlmIG90cF9hdXRoX21ldGhvZCA9PSAnZW5yb2xsJzoKICAgICAgICAgICAgICAgIGF1dGhfcmVzdWx0ID0gU2VydmVyVXRpbC
 5nZXRGaXJzdFZhbHVlKHJlcXVlc3RQYXJhbWV0ZXJzLCAiYXV0aF9yZXN1bHQiKQogICAgICAgICAgICAgICAgaWYgbm90IFN0cmluZ0hlbHBlci5pc0VtcHR5KGF1dGhfcmVzdWx0KToKICAgICAgI
 CAgICAgICAgICAgICBwcmludCAiT1RQLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMi4gVXNlciBub3QgZW5yb2xsZWQgT1RQIgogICAgICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAg
 ICAgICAgICAgIHByaW50ICJPVFAuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAyLiBTa2lwcGluZyB0aGlzIHN0ZXAgZHVyaW5nIGVucm9sbG1lbnQiCiAgICAgICAgICAgICAgICByZXR1cm4gVHJ1ZQo
 KICAgICAgICAgICAgb3RwX2F1dGhfcmVzdWx0ID0gc2VsZi5wcm9jZXNzT3RwQXV0aGVudGljYXRpb24ocmVxdWVzdFBhcmFtZXRlcnMsIHVzZXJfbmFtZSwgc2Vzc2lvbl9hdHRyaWJ1dGVzLCBvdH
 BfYXV0aF9tZXRob2QpCiAgICAgICAgICAgIHByaW50ICJPVFAuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAyLiBPVFAgYXV0aGVudGljYXRpb24gcmVzdWx0OiAnJXMnIiAlIG90cF9hdXRoX3Jlc3Vsd
 AoKICAgICAgICAgICAgcmV0dXJuIG90cF9hdXRoX3Jlc3VsdAogICAgICAgIGVsaWYgc3RlcCA9PSAzOgogICAgICAgICAgICBwcmludCAiT1RQLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMyIKCiAg
 ICAgICAgICAgIHNlc3Npb25fc3RhdGVfdmFsaWRhdGlvbiA9IHNlbGYudmFsaWRhdGVTZXNzaW9uU3RhdGUoc2Vzc2lvbl9hdHRyaWJ1dGVzKQogICAgICAgICAgICBpZiBub3Qgc2Vzc2lvbl9zdGF
 0ZV92YWxpZGF0aW9uOgogICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgICAgICAgICAjIFJlc3RvcmUgc3RhdGUgZnJvbSBzZXNzaW9uCiAgICAgICAgICAgIG90cF9hdXRoX21ldGhvZC
 A9IHNlc3Npb25fYXR0cmlidXRlcy5nZXQoIm90cF9hdXRoX21ldGhvZCIpCiAgICAgICAgICAgIGlmIG90cF9hdXRoX21ldGhvZCAhPSAnZW5yb2xsJzoKICAgICAgICAgICAgICAgIHJldHVybiBGY
 WxzZQoKICAgICAgICAgICAgb3RwX2F1dGhfcmVzdWx0ID0gc2VsZi5wcm9jZXNzT3RwQXV0aGVudGljYXRpb24ocmVxdWVzdFBhcmFtZXRlcnMsIHVzZXJfbmFtZSwgc2Vzc2lvbl9hdHRyaWJ1dGVz
 LCBvdHBfYXV0aF9tZXRob2QpCiAgICAgICAgICAgIHByaW50ICJPVFAuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAzLiBPVFAgYXV0aGVudGljYXRpb24gcmVzdWx0OiAnJXMnIiAlIG90cF9hdXRoX3J
 lc3VsdAoKICAgICAgICAgICAgcmV0dXJuIG90cF9hdXRoX3Jlc3VsdAogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgIGRlZiBwcmVwYXJlRm9yU3RlcChzZWxmLCBjb2
 5maWd1cmF0aW9uQXR0cmlidXRlcywgcmVxdWVzdFBhcmFtZXRlcnMsIHN0ZXApOgogICAgICAgIGNyZWRlbnRpYWxzID0gSWRlbnRpdHkuaW5zdGFuY2UoKS5nZXRDcmVkZW50aWFscygpCiAgICAgI
 CAgY29udGV4dCA9IENvbnRleHRzLmdldEV2ZW50Q29udGV4dCgpCiAgICAgICAgc2Vzc2lvbl9hdHRyaWJ1dGVzID0gY29udGV4dC5nZXQoInNlc3Npb25BdHRyaWJ1dGVzIikKCiAgICAgICAgc2Vs
 Zi5zZXRFdmVudENvbnRleHRQYXJhbWV0ZXJzKGNvbnRleHQpCgogICAgICAgIGlmIHN0ZXAgPT0gMToKICAgICAgICAgICAgcHJpbnQgIk9UUC4gUHJlcGFyZSBmb3Igc3RlcCAxIgoKICAgICAgICA
 gICAgcmV0dXJuIFRydWUKICAgICAgICBlbGlmIHN0ZXAgPT0gMjoKICAgICAgICAgICAgcHJpbnQgIk9UUC4gUHJlcGFyZSBmb3Igc3RlcCAyIgoKICAgICAgICAgICAgc2Vzc2lvbl9zdGF0ZV92YW
 xpZGF0aW9uID0gc2VsZi52YWxpZGF0ZVNlc3Npb25TdGF0ZShzZXNzaW9uX2F0dHJpYnV0ZXMpCiAgICAgICAgICAgIGlmIG5vdCBzZXNzaW9uX3N0YXRlX3ZhbGlkYXRpb246CiAgICAgICAgICAgI
 CAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgICAgIG90cF9hdXRoX21ldGhvZCA9IHNlc3Npb25fYXR0cmlidXRlcy5nZXQoIm90cF9hdXRoX21ldGhvZCIpCiAgICAgICAgICAgIHByaW50ICJPVFAu
 IFByZXBhcmUgZm9yIHN0ZXAgMi4gb3RwX2F1dGhfbWV0aG9kOiAnJXMnIiAlIG90cF9hdXRoX21ldGhvZAoKICAgICAgICAgICAgaWYgb3RwX2F1dGhfbWV0aG9kID09ICdlbnJvbGwnOgogICAgICA
 gICAgICAgICAgYXV0aGVudGljYXRpb25TZXJ2aWNlID0gQXV0aGVudGljYXRpb25TZXJ2aWNlLmluc3RhbmNlKCkKICAgICAgICAgICAgICAgIHVzZXIgPSBhdXRoZW50aWNhdGlvblNlcnZpY2UuZ2
 V0QXV0aGVudGljYXRlZFVzZXIoKQogICAgICAgICAgICAgICAgaWYgdXNlciA9PSBOb25lOgogICAgICAgICAgICAgICAgICAgIHByaW50ICJPVFAuIFByZXBhcmUgZm9yIHN0ZXAgMi4gRmFpbGVkI
 HRvIGxvYWQgdXNlciBlbnR5IgogICAgICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgICAgIGlmIHNlbGYub3RwVHlwZSA9PSAiaG90cCI6CiAgICAgICAgICAgICAgICAg
 ICAgb3RwX3NlY3JldF9rZXkgPSBzZWxmLmdlbmVyYXRlU2VjcmV0SG90cEtleSgpCiAgICAgICAgICAgICAgICAgICAgb3RwX2Vucm9sbG1lbnRfcmVxdWVzdCA9IHNlbGYuZ2VuZXJhdGVIb3RwU2V
 jcmV0S2V5VXJpKG90cF9zZWNyZXRfa2V5LCBzZWxmLm90cElzc3VlciwgdXNlci5nZXRBdHRyaWJ1dGUoImRpc3BsYXlOYW1lIikpCiAgICAgICAgICAgICAgICBlbGlmIHNlbGYub3RwVHlwZSA9PS
 AidG90cCI6CiAgICAgICAgICAgICAgICAgICAgb3RwX3NlY3JldF9rZXkgPSBzZWxmLmdlbmVyYXRlU2VjcmV0VG90cEtleSgpCiAgICAgICAgICAgICAgICAgICAgb3RwX2Vucm9sbG1lbnRfcmVxd
 WVzdCA9IHNlbGYuZ2VuZXJhdGVUb3RwU2VjcmV0S2V5VXJpKG90cF9zZWNyZXRfa2V5LCBzZWxmLm90cElzc3VlciwgdXNlci5nZXRBdHRyaWJ1dGUoImRpc3BsYXlOYW1lIikpCiAgICAgICAgICAg
 ICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgIHByaW50ICJPVFAuIFByZXBhcmUgZm9yIHN0ZXAgMi4gVW5rbm93biBPVFAgdHlwZTogJyVzJyIgJSBzZWxmLm90cFR5cGUKICAgICAgICAgICA
 gICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgICAgICAgICBwcmludCAiT1RQLiBQcmVwYXJlIGZvciBzdGVwIDIuIFByZXBhcmVkIGVucm9sbG1lbnQgcmVxdWVzdCBmb3IgdXNlcjogJyVzJy
 IgJSB1c2VyLmdldFVzZXJJZCgpCiAgICAgICAgICAgICAgICBjb250ZXh0LnNldCgib3RwX3NlY3JldF9rZXkiLCBzZWxmLnRvQmFzZTY0VXJsKG90cF9zZWNyZXRfa2V5KSkKICAgICAgICAgICAgI
 CAgIGNvbnRleHQuc2V0KCJvdHBfZW5yb2xsbWVudF9yZXF1ZXN0Iiwgb3RwX2Vucm9sbG1lbnRfcmVxdWVzdCkKCiAgICAgICAgICAgIHJldHVybiBUcnVlCiAgICAgICAgZWxpZiBzdGVwID09IDM6
 CiAgICAgICAgICAgIHByaW50ICJPVFAuIFByZXBhcmUgZm9yIHN0ZXAgMyIKCiAgICAgICAgICAgIHNlc3Npb25fc3RhdGVfdmFsaWRhdGlvbiA9IHNlbGYudmFsaWRhdGVTZXNzaW9uU3RhdGUoc2V
 zc2lvbl9hdHRyaWJ1dGVzKQogICAgICAgICAgICBpZiBub3Qgc2Vzc2lvbl9zdGF0ZV92YWxpZGF0aW9uOgogICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgICAgICAgICBvdHBfYXV0aF
 9tZXRob2QgPSBzZXNzaW9uX2F0dHJpYnV0ZXMuZ2V0KCJvdHBfYXV0aF9tZXRob2QiKQogICAgICAgICAgICBwcmludCAiT1RQLiBQcmVwYXJlIGZvciBzdGVwIDMuIG90cF9hdXRoX21ldGhvZDogJ
 yVzJyIgJSBvdHBfYXV0aF9tZXRob2QKCiAgICAgICAgICAgIGlmIG90cF9hdXRoX21ldGhvZCA9PSAnZW5yb2xsJzoKICAgICAgICAgICAgICAgIHJldHVybiBUcnVlCgogICAgICAgIHJldHVybiBG
 YWxzZQoKICAgIGRlZiBnZXRFeHRyYVBhcmFtZXRlcnNGb3JTdGVwKHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCBzdGVwKToKICAgICAgICByZXR1cm4gQXJyYXlzLmFzTGlzdCgib3RwX2F
 1dGhfbWV0aG9kIiwgIm90cF9jb3VudF9sb2dpbl9zdGVwcyIsICJvdHBfc2VjcmV0X2tleSIsICJvdHBfZW5yb2xsbWVudF9yZXF1ZXN0IikKCiAgICBkZWYgZ2V0Q291bnRBdXRoZW50aWNhdGlvbl
 N0ZXBzKHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKToKICAgICAgICBjb250ZXh0ID0gQ29udGV4dHMuZ2V0RXZlbnRDb250ZXh0KCkKICAgICAgICBzZXNzaW9uX2F0dHJpYnV0ZXMgPSBjb
 250ZXh0LmdldCgic2Vzc2lvbkF0dHJpYnV0ZXMiKQoKICAgICAgICBpZiBzZXNzaW9uX2F0dHJpYnV0ZXMuY29udGFpbnNLZXkoIm90cF9jb3VudF9sb2dpbl9zdGVwcyIpOgogICAgICAgICAgICBy
 ZXR1cm4gU3RyaW5nSGVscGVyLnRvSW50ZWdlcihzZXNzaW9uX2F0dHJpYnV0ZXMuZ2V0KCJvdHBfY291bnRfbG9naW5fc3RlcHMiKSkKICAgICAgICBlbHNlOgogICAgICAgICAgICByZXR1cm4gMgo
 KICAgIGRlZiBnZXRQYWdlRm9yU3RlcChzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcywgc3RlcCk6CiAgICAgICAgaWYgc3RlcCA9PSAyOgogICAgICAgICAgICBjb250ZXh0ID0gQ29udGV4dH
 MuZ2V0RXZlbnRDb250ZXh0KCkKICAgICAgICAgICAgc2Vzc2lvbl9hdHRyaWJ1dGVzID0gY29udGV4dC5nZXQoInNlc3Npb25BdHRyaWJ1dGVzIikKICAgIAogICAgICAgICAgICBvdHBfYXV0aF9tZ
 XRob2QgPSBzZXNzaW9uX2F0dHJpYnV0ZXMuZ2V0KCJvdHBfYXV0aF9tZXRob2QiKQogICAgICAgICAgICBwcmludCAiT1RQLiBHZXAgcGFnZSBmb3Igc3RlcCAyLiBvdHBfYXV0aF9tZXRob2Q6ICcl
 cyciICUgb3RwX2F1dGhfbWV0aG9kCiAgICAKICAgICAgICAgICAgaWYgb3RwX2F1dGhfbWV0aG9kID09ICdlbnJvbGwnOgogICAgICAgICAgICAgICAgcmV0dXJuICIvYXV0aC9vdHAvZW5yb2xsLnh
 odG1sIgogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgcmV0dXJuICIvYXV0aC9vdHAvb3RwbG9naW4ueGh0bWwiCiAgICAgICAgZWxpZiBzdGVwID09IDM6CiAgICAgICAgICAgIHJldH
 VybiAiL2F1dGgvb3RwL290cGxvZ2luLnhodG1sIgoKICAgICAgICByZXR1cm4gIiIKCiAgICBkZWYgbG9nb3V0KHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCByZXF1ZXN0UGFyYW1ldGVyc
 yk6CiAgICAgICAgcmV0dXJuIFRydWUKCiAgICBkZWYgc2V0RXZlbnRDb250ZXh0UGFyYW1ldGVycyhzZWxmLCBjb250ZXh0KToKICAgICAgICBpZiBzZWxmLnJlZ2lzdHJhdGlvblVyaSAhPSBOb25l
 OgogICAgICAgICAgICBjb250ZXh0LnNldCgiZXh0ZXJuYWxfcmVnaXN0cmF0aW9uX3VyaSIsIHNlbGYucmVnaXN0cmF0aW9uVXJpKQoKICAgICAgICBpZiBzZWxmLmN1c3RvbUxhYmVsICE9IE5vbmU
 6CiAgICAgICAgICAgIGNvbnRleHQuc2V0KCJxcl9sYWJlbCIsIHNlbGYuY3VzdG9tTGFiZWwpCgogICAgICAgIGNvbnRleHQuc2V0KCJxcl9vcHRpb25zIiwgc2VsZi5jdXN0b21Rck9wdGlvbnMpCg
 ogICAgZGVmIGxvYWRPdHBDb25maWd1cmF0aW9uKHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKToKICAgICAgICBwcmludCAiT1RQLiBMb2FkIE9UUCBjb25maWd1cmF0aW9uIgogICAgICAgI
 GlmIG5vdCBjb25maWd1cmF0aW9uQXR0cmlidXRlcy5jb250YWluc0tleSgib3RwX2NvbmZfZmlsZSIpOgogICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgb3RwX2NvbmZfZmlsZSA9IGNv
 bmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmdldCgib3RwX2NvbmZfZmlsZSIpLmdldFZhbHVlMigpCgogICAgICAgICMgTG9hZCBjb25maWd1cmF0aW9uIGZyb20gZmlsZQogICAgICAgIGYgPSBvcGVuKG9
 0cF9jb25mX2ZpbGUsICdyJykKICAgICAgICB0cnk6CiAgICAgICAgICAgIG90cENvbmZpZ3VyYXRpb24gPSBqc29uLmxvYWRzKGYucmVhZCgpKQogICAgICAgIGV4Y2VwdDoKICAgICAgICAgICAgcH
 JpbnQgIk9UUC4gTG9hZCBPVFAgY29uZmlndXJhdGlvbi4gRmFpbGVkIHRvIGxvYWQgY29uZmlndXJhdGlvbiBmcm9tIGZpbGU6Iiwgb3RwX2NvbmZfZmlsZQogICAgICAgICAgICByZXR1cm4gRmFsc
 2UKICAgICAgICBmaW5hbGx5OgogICAgICAgICAgICBmLmNsb3NlKCkKICAgICAgICAKICAgICAgICAjIENoZWNrIGNvbmZpZ3VyYXRpb24gZmlsZSBzZXR0aW5ncwogICAgICAgIHRyeToKICAgICAg
 ICAgICAgc2VsZi5ob3RwQ29uZmlndXJhdGlvbiA9IG90cENvbmZpZ3VyYXRpb25bImh0b3AiXQogICAgICAgICAgICBzZWxmLnRvdHBDb25maWd1cmF0aW9uID0gb3RwQ29uZmlndXJhdGlvblsidG9
 0cCJdCiAgICAgICAgICAgIAogICAgICAgICAgICBobWFjU2hhQWxnb3JpdGhtID0gc2VsZi50b3RwQ29uZmlndXJhdGlvblsiaG1hY1NoYUFsZ29yaXRobSJdCiAgICAgICAgICAgIGhtYWNTaGFBbG
 dvcml0aG1UeXBlID0gTm9uZQoKICAgICAgICAgICAgaWYgU3RyaW5nSGVscGVyLmVxdWFsc0lnbm9yZUNhc2UoaG1hY1NoYUFsZ29yaXRobSwgInNoYTEiKToKICAgICAgICAgICAgICAgIGhtYWNTa
 GFBbGdvcml0aG1UeXBlID0gSG1hY1NoYUFsZ29yaXRobS5ITUFDX1NIQV8xCiAgICAgICAgICAgIGVsaWYgU3RyaW5nSGVscGVyLmVxdWFsc0lnbm9yZUNhc2UoaG1hY1NoYUFsZ29yaXRobSwgInNo
 YTI1NiIpOgogICAgICAgICAgICAgICAgaG1hY1NoYUFsZ29yaXRobVR5cGUgPSBIbWFjU2hhQWxnb3JpdGhtLkhNQUNfU0hBXzI1NgogICAgICAgICAgICBlbGlmIFN0cmluZ0hlbHBlci5lcXVhbHN
 JZ25vcmVDYXNlKGhtYWNTaGFBbGdvcml0aG0sICJzaGE1MTIiKToKICAgICAgICAgICAgICAgIGhtYWNTaGFBbGdvcml0aG1UeXBlID0gSG1hY1NoYUFsZ29yaXRobS5ITUFDX1NIQV81MTIKICAgIC
 AgICAgICAgZWxzZToKICAgICAgICAgICAgICAgIHByaW50ICJPVFAuIExvYWQgT1RQIGNvbmZpZ3VyYXRpb24uIEludmFsaWQgVE9UUCBITUFDIFNIQSBhbGdvcml0aG06ICclcyciICUgaG1hY1NoY
 UFsZ29yaXRobQogICAgICAgICAgICAgICAgIAogICAgICAgICAgICBzZWxmLnRvdHBDb25maWd1cmF0aW9uWyJobWFjU2hhQWxnb3JpdGhtVHlwZSJdID0gaG1hY1NoYUFsZ29yaXRobVR5cGUKICAg
 ICAgICBleGNlcHQ6CiAgICAgICAgICAgIHByaW50ICJPVFAuIExvYWQgT1RQIGNvbmZpZ3VyYXRpb24uIEludmFsaWQgY29uZmlndXJhdGlvbiBmaWxlICclcycgZm9ybWF0LiBFeGNlcHRpb246ICc
 lcyciICUgKG90cF9jb25mX2ZpbGUsIHN5cy5leGNfaW5mbygpWzFdKQogICAgICAgICAgICByZXR1cm4gRmFsc2UKICAgICAgICAKCiAgICAgICAgcmV0dXJuIFRydWUKCiAgICBkZWYgcHJvY2Vzc0
 Jhc2ljQXV0aGVudGljYXRpb24oc2VsZiwgY3JlZGVudGlhbHMpOgogICAgICAgIHVzZXJTZXJ2aWNlID0gVXNlclNlcnZpY2UuaW5zdGFuY2UoKQoKICAgICAgICB1c2VyX25hbWUgPSBjcmVkZW50a
 WFscy5nZXRVc2VybmFtZSgpCiAgICAgICAgdXNlcl9wYXNzd29yZCA9IGNyZWRlbnRpYWxzLmdldFBhc3N3b3JkKCkKCiAgICAgICAgbG9nZ2VkX2luID0gRmFsc2UKICAgICAgICBpZiBTdHJpbmdI
 ZWxwZXIuaXNOb3RFbXB0eVN0cmluZyh1c2VyX25hbWUpIGFuZCBTdHJpbmdIZWxwZXIuaXNOb3RFbXB0eVN0cmluZyh1c2VyX3Bhc3N3b3JkKToKICAgICAgICAgICAgbG9nZ2VkX2luID0gdXNlclN
 lcnZpY2UuYXV0aGVudGljYXRlKHVzZXJfbmFtZSwgdXNlcl9wYXNzd29yZCkKCiAgICAgICAgaWYgbm90IGxvZ2dlZF9pbjoKICAgICAgICAgICAgcmV0dXJuIE5vbmUKCiAgICAgICAgZmluZF91c2
 VyX2J5X3VpZCA9IHVzZXJTZXJ2aWNlLmdldFVzZXIodXNlcl9uYW1lKQogICAgICAgIGlmIGZpbmRfdXNlcl9ieV91aWQgPT0gTm9uZToKICAgICAgICAgICAgcHJpbnQgIk9UUC4gUHJvY2VzcyBiY
 XNpYyBhdXRoZW50aWNhdGlvbi4gRmFpbGVkIHRvIGZpbmQgdXNlciAnJXMnIiAlIHVzZXJfbmFtZQogICAgICAgICAgICByZXR1cm4gTm9uZQogICAgICAgIAogICAgICAgIHJldHVybiBmaW5kX3Vz
 ZXJfYnlfdWlkCgogICAgZGVmIGZpbmRFbnJvbGxtZW50cyhzZWxmLCB1c2VyX25hbWUsIHNraXBQcmVmaXggPSBUcnVlKToKICAgICAgICByZXN1bHQgPSBbXQoKICAgICAgICB1c2VyU2VydmljZSA
 9IFVzZXJTZXJ2aWNlLmluc3RhbmNlKCkKICAgICAgICB1c2VyID0gdXNlclNlcnZpY2UuZ2V0VXNlcih1c2VyX25hbWUsICJveEV4dGVybmFsVWlkIikKICAgICAgICBpZiB1c2VyID09IE5vbmU6Ci
 AgICAgICAgICAgIHByaW50ICJPVFAuIEZpbmQgZW5yb2xsbWVudHMuIEZhaWxlZCB0byBmaW5kIHVzZXIiCiAgICAgICAgICAgIHJldHVybiByZXN1bHQKICAgICAgICAKICAgICAgICB1c2VyX2N1c
 3RvbV9leHRfYXR0cmlidXRlID0gdXNlclNlcnZpY2UuZ2V0Q3VzdG9tQXR0cmlidXRlKHVzZXIsICJveEV4dGVybmFsVWlkIikKICAgICAgICBpZiB1c2VyX2N1c3RvbV9leHRfYXR0cmlidXRlID09
 IE5vbmU6CiAgICAgICAgICAgIHJldHVybiByZXN1bHQKCiAgICAgICAgb3RwX3ByZWZpeCA9ICIlczoiICUgc2VsZi5vdHBUeXBlCiAgICAgICAgCiAgICAgICAgb3RwX3ByZWZpeF9sZW5ndGggPSB
 sZW4ob3RwX3ByZWZpeCkgCiAgICAgICAgZm9yIHVzZXJfZXh0ZXJuYWxfdWlkIGluIHVzZXJfY3VzdG9tX2V4dF9hdHRyaWJ1dGUuZ2V0VmFsdWVzKCk6CiAgICAgICAgICAgIGluZGV4ID0gdXNlcl
 9leHRlcm5hbF91aWQuZmluZChvdHBfcHJlZml4KQogICAgICAgICAgICBpZiBpbmRleCAhPSAtMToKICAgICAgICAgICAgICAgIGlmIHNraXBQcmVmaXg6CiAgICAgICAgICAgICAgICAgICAgZW5yb
 2xsbWVudF91aWQgPSB1c2VyX2V4dGVybmFsX3VpZFtvdHBfcHJlZml4X2xlbmd0aDpdCiAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgIGVucm9sbG1lbnRfdWlkID0gdXNl
 cl9leHRlcm5hbF91aWQKCiAgICAgICAgICAgICAgICByZXN1bHQuYXBwZW5kKGVucm9sbG1lbnRfdWlkKQogICAgICAgIAogICAgICAgIHJldHVybiByZXN1bHQKCiAgICBkZWYgdmFsaWRhdGVTZXN
 zaW9uU3RhdGUoc2VsZiwgc2Vzc2lvbl9hdHRyaWJ1dGVzKToKICAgICAgICBzZXNzaW9uX3N0YXRlID0gU2Vzc2lvblN0YXRlU2VydmljZS5pbnN0YW5jZSgpLmdldFNlc3Npb25TdGF0ZUZyb21Db2
 9raWUoKQogICAgICAgIGlmIFN0cmluZ0hlbHBlci5pc0VtcHR5KHNlc3Npb25fc3RhdGUpOgogICAgICAgICAgICBwcmludCAiT1RQLiBWYWxpZGF0ZSBzZXNzaW9uIHN0YXRlLiBGYWlsZWQgdG8gZ
 GV0ZXJtaW5lIHNlc3Npb25fc3RhdGUiCiAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICBvdHBfYXV0aF9tZXRob2QgPSBzZXNzaW9uX2F0dHJpYnV0ZXMuZ2V0KCJvdHBfYXV0aF9tZXRo
 b2QiKQogICAgICAgIGlmIG5vdCBvdHBfYXV0aF9tZXRob2QgaW4gWydlbnJvbGwnLCAnYXV0aGVudGljYXRlJ106CiAgICAgICAgICAgIHByaW50ICJPVFAuIFZhbGlkYXRlIHNlc3Npb24gc3RhdGU
 uIEZhaWxlZCB0byBhdXRoZW50aWNhdGUgdXNlci4gb3RwX2F1dGhfbWV0aG9kOiAnJXMnIiAlIG90cF9hdXRoX21ldGhvZAogICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgcmV0dXJuIF
 RydWUKCiAgICBkZWYgcHJvY2Vzc090cEF1dGhlbnRpY2F0aW9uKHNlbGYsIHJlcXVlc3RQYXJhbWV0ZXJzLCB1c2VyX25hbWUsIHNlc3Npb25fYXR0cmlidXRlcywgb3RwX2F1dGhfbWV0aG9kKToKI
 CAgICAgICBmYWNlc01lc3NhZ2VzID0gRmFjZXNNZXNzYWdlcy5pbnN0YW5jZSgpCiAgICAgICAgRmFjZXNDb250ZXh0LmdldEN1cnJlbnRJbnN0YW5jZSgpLmdldEV4dGVybmFsQ29udGV4dCgpLmdl
 dEZsYXNoKCkuc2V0S2VlcE1lc3NhZ2VzKFRydWUpCgogICAgICAgIHVzZXJTZXJ2aWNlID0gVXNlclNlcnZpY2UuaW5zdGFuY2UoKQoKICAgICAgICBvdHBDb2RlID0gU2VydmVyVXRpbC5nZXRGaXJ
 zdFZhbHVlKHJlcXVlc3RQYXJhbWV0ZXJzLCAibG9naW5Gb3JtOm90cENvZGUiKQogICAgICAgIGlmIFN0cmluZ0hlbHBlci5pc0VtcHR5KG90cENvZGUpOgogICAgICAgICAgICBmYWNlc01lc3NhZ2
 VzLmFkZChTdGF0dXNNZXNzYWdlLlNldmVyaXR5LkVSUk9SLCAiRmFpbGVkIHRvIGF1dGhlbnRpY2F0ZS4gT1RQIGNvZGUgaXMgZW1wdHkiKQogICAgICAgICAgICBwcmludCAiT1RQLiBQcm9jZXNzI
 E9UUCBhdXRoZW50aWNhdGlvbi4gb3RwQ29kZSBpcyBlbXB0eSIKCiAgICAgICAgICAgIHJldHVybiBGYWxzZQogICAgICAgIAogICAgICAgIGlmIG90cF9hdXRoX21ldGhvZCA9PSAiZW5yb2xsIjoK
 ICAgICAgICAgICAgIyBHZXQga2V5IGZyb20gc2Vzc2lvbgogICAgICAgICAgICBvdHBfc2VjcmV0X2tleV9lbmNvZGVkID0gc2Vzc2lvbl9hdHRyaWJ1dGVzLmdldCgib3RwX3NlY3JldF9rZXkiKQo
 gICAgICAgICAgICBpZiBvdHBfc2VjcmV0X2tleV9lbmNvZGVkID09IE5vbmU6CiAgICAgICAgICAgICAgICBwcmludCAiT1RQLiBQcm9jZXNzIE9UUCBhdXRoZW50aWNhdGlvbi4gT1RQIHNlY3JldC
 BrZXkgaXMgaW52YWxpZCIKICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQogICAgICAgICAgICAKICAgICAgICAgICAgb3RwX3NlY3JldF9rZXkgPSBzZWxmLmZyb21CYXNlNjRVcmwob3RwX3NlY
 3JldF9rZXlfZW5jb2RlZCkKCiAgICAgICAgICAgIGlmIHNlbGYub3RwVHlwZSA9PSAiaG90cCI6CiAgICAgICAgICAgICAgICB2YWxpZGF0aW9uX3Jlc3VsdCA9IHNlbGYudmFsaWRhdGVIb3RwS2V5
 KG90cF9zZWNyZXRfa2V5LCAxLCBvdHBDb2RlKQogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICBpZiAodmFsaWRhdGlvbl9yZXN1bHQgIT0gTm9uZSkgYW5kIHZhbGlkYXRpb25fcmVzdWx
 0WyJyZXN1bHQiXToKICAgICAgICAgICAgICAgICAgICBwcmludCAiT1RQLiBQcm9jZXNzIEhPVFAgYXV0aGVudGljYXRpb24gZHVyaW5nIGVucm9sbG1lbnQuIG90cENvZGUgaXMgdmFsaWQiCiAgIC
 AgICAgICAgICAgICAgICAgIyBTdG9yZSBIT1RQIFNlY3JldCBLZXkgYW5kIG1vdmluZyBmYWN0b3IgaW4gdXNlciBlbnRyeQogICAgICAgICAgICAgICAgICAgIG90cF91c2VyX2V4dGVybmFsX3VpZ
 CA9ICJob3RwOiVzOyVzIiAlICggb3RwX3NlY3JldF9rZXlfZW5jb2RlZCwgdmFsaWRhdGlvbl9yZXN1bHRbIm1vdmluZ0ZhY3RvciJdICkKCiAgICAgICAgICAgICAgICAgICAgIyBBZGQgb3RwX3Vz
 ZXJfZXh0ZXJuYWxfdWlkIHRvIHVzZXIncyBleHRlcm5hbCBHVUlEIGxpc3QKICAgICAgICAgICAgICAgICAgICBmaW5kX3VzZXJfYnlfZXh0ZXJuYWxfdWlkID0gdXNlclNlcnZpY2UuYWRkVXNlckF
 0dHJpYnV0ZSh1c2VyX25hbWUsICJveEV4dGVybmFsVWlkIiwgb3RwX3VzZXJfZXh0ZXJuYWxfdWlkKQogICAgICAgICAgICAgICAgICAgIGlmIGZpbmRfdXNlcl9ieV9leHRlcm5hbF91aWQgIT0gTm
 9uZToKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFRydWUKCiAgICAgICAgICAgICAgICAgICAgcHJpbnQgIk9UUC4gUHJvY2VzcyBIT1RQIGF1dGhlbnRpY2F0aW9uIGR1cmluZyBlbnJvb
 GxtZW50LiBGYWlsZWQgdG8gdXBkYXRlIHVzZXIgZW50cnkiCiAgICAgICAgICAgIGVsaWYgc2VsZi5vdHBUeXBlID09ICJ0b3RwIjoKICAgICAgICAgICAgICAgIHZhbGlkYXRpb25fcmVzdWx0ID0g
 c2VsZi52YWxpZGF0ZVRvdHBLZXkob3RwX3NlY3JldF9rZXksIG90cENvZGUpCiAgICAgICAgICAgICAgICBpZiAodmFsaWRhdGlvbl9yZXN1bHQgIT0gTm9uZSkgYW5kIHZhbGlkYXRpb25fcmVzdWx
 0WyJyZXN1bHQiXToKICAgICAgICAgICAgICAgICAgICBwcmludCAiT1RQLiBQcm9jZXNzIFRPVFAgYXV0aGVudGljYXRpb24gZHVyaW5nIGVucm9sbG1lbnQuIG90cENvZGUgaXMgdmFsaWQiCiAgIC
 AgICAgICAgICAgICAgICAgIyBTdG9yZSBUT1RQIFNlY3JldCBLZXkgYW5kIG1vdmluZyBmYWN0b3IgaW4gdXNlciBlbnRyeQogICAgICAgICAgICAgICAgICAgIG90cF91c2VyX2V4dGVybmFsX3VpZ
 CA9ICJ0b3RwOiVzIiAlIG90cF9zZWNyZXRfa2V5X2VuY29kZWQKCiAgICAgICAgICAgICAgICAgICAgIyBBZGQgb3RwX3VzZXJfZXh0ZXJuYWxfdWlkIHRvIHVzZXIncyBleHRlcm5hbCBHVUlEIGxp
 c3QKICAgICAgICAgICAgICAgICAgICBmaW5kX3VzZXJfYnlfZXh0ZXJuYWxfdWlkID0gdXNlclNlcnZpY2UuYWRkVXNlckF0dHJpYnV0ZSh1c2VyX25hbWUsICJveEV4dGVybmFsVWlkIiwgb3RwX3V
 zZXJfZXh0ZXJuYWxfdWlkKQogICAgICAgICAgICAgICAgICAgIGlmIGZpbmRfdXNlcl9ieV9leHRlcm5hbF91aWQgIT0gTm9uZToKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFRydWUKCi
 AgICAgICAgICAgICAgICAgICAgcHJpbnQgIk9UUC4gUHJvY2VzcyBUT1RQIGF1dGhlbnRpY2F0aW9uIGR1cmluZyBlbnJvbGxtZW50LiBGYWlsZWQgdG8gdXBkYXRlIHVzZXIgZW50cnkiCiAgICAgI
 CAgZWxpZiBvdHBfYXV0aF9tZXRob2QgPT0gImF1dGhlbnRpY2F0ZSI6CiAgICAgICAgICAgIHVzZXJfZW5yb2xsbWVudHMgPSBzZWxmLmZpbmRFbnJvbGxtZW50cyh1c2VyX25hbWUpCgogICAgICAg
 ICAgICBpZiBsZW4odXNlcl9lbnJvbGxtZW50cykgPT0gMDoKICAgICAgICAgICAgICAgIHByaW50ICJPVFAuIFByb2Nlc3MgT1RQIGF1dGhlbnRpY2F0aW9uLiBUaGVyZSBpcyBubyBPVFAgZW5yb2x
 sbWVudCBmb3IgdXNlciAnJXMnIiAlIHVzZXJfbmFtZQogICAgICAgICAgICAgICAgZmFjZXNNZXNzYWdlcy5hZGQoU3RhdHVzTWVzc2FnZS5TZXZlcml0eS5FUlJPUiwgIlRoZXJlIGlzIG5vIHZhbG
 lkIE9UUCB1c2VyIGVucm9sbG1lbnRzIikKICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgaWYgc2VsZi5vdHBUeXBlID09ICJob3RwIjoKICAgICAgICAgICAgICAgIGZvc
 iB1c2VyX2Vucm9sbG1lbnQgaW4gdXNlcl9lbnJvbGxtZW50czoKICAgICAgICAgICAgICAgICAgICB1c2VyX2Vucm9sbG1lbnRfZGF0YSA9IHVzZXJfZW5yb2xsbWVudC5zcGxpdCgiOyIpCiAgICAg
 ICAgICAgICAgICAgICAgb3RwX3NlY3JldF9rZXlfZW5jb2RlZCA9IHVzZXJfZW5yb2xsbWVudF9kYXRhWzBdCgogICAgICAgICAgICAgICAgICAgICMgR2V0IGN1cnJlbnQgbW92aW5nIGZhY3RvciB
 mcm9tIHVzZXIgZW50cnkKICAgICAgICAgICAgICAgICAgICBtb3ZpbmdfZmFjdG9yID0gU3RyaW5nSGVscGVyLnRvSW50ZWdlcih1c2VyX2Vucm9sbG1lbnRfZGF0YVsxXSkKICAgICAgICAgICAgIC
 AgICAgICBvdHBfc2VjcmV0X2tleSA9IHNlbGYuZnJvbUJhc2U2NFVybChvdHBfc2VjcmV0X2tleV9lbmNvZGVkKQoKICAgICAgICAgICAgICAgICAgICAjIFZhbGlkYXRlIFRPVFAKICAgICAgICAgI
 CAgICAgICAgICB2YWxpZGF0aW9uX3Jlc3VsdCA9IHNlbGYudmFsaWRhdGVIb3RwS2V5KG90cF9zZWNyZXRfa2V5LCBtb3ZpbmdfZmFjdG9yLCBvdHBDb2RlKQogICAgICAgICAgICAgICAgICAgIGlm
 ICh2YWxpZGF0aW9uX3Jlc3VsdCAhPSBOb25lKSBhbmQgdmFsaWRhdGlvbl9yZXN1bHRbInJlc3VsdCJdOgogICAgICAgICAgICAgICAgICAgICAgICBwcmludCAiT1RQLiBQcm9jZXNzIEhPVFAgYXV
 0aGVudGljYXRpb24gZHVyaW5nIGF1dGhlbnRpY2F0aW9uLiBvdHBDb2RlIGlzIHZhbGlkIgogICAgICAgICAgICAgICAgICAgICAgICBvdHBfdXNlcl9leHRlcm5hbF91aWQgPSAiaG90cDolczslcy
 IgJSAoIG90cF9zZWNyZXRfa2V5X2VuY29kZWQsIG1vdmluZ19mYWN0b3IgKQogICAgICAgICAgICAgICAgICAgICAgICBuZXdfb3RwX3VzZXJfZXh0ZXJuYWxfdWlkID0gImhvdHA6JXM7JXMiICUgK
 CBvdHBfc2VjcmV0X2tleV9lbmNvZGVkLCB2YWxpZGF0aW9uX3Jlc3VsdFsibW92aW5nRmFjdG9yIl0gKQogICAgCiAgICAgICAgICAgICAgICAgICAgICAgICMgVXBkYXRlIG1vdmluZyBmYWN0b3Ig
 aW4gdXNlciBlbnRyeQogICAgICAgICAgICAgICAgICAgICAgICBmaW5kX3VzZXJfYnlfZXh0ZXJuYWxfdWlkID0gdXNlclNlcnZpY2UucmVwbGFjZVVzZXJBdHRyaWJ1dGUodXNlcl9uYW1lLCAib3h
 FeHRlcm5hbFVpZCIsIG90cF91c2VyX2V4dGVybmFsX3VpZCwgbmV3X290cF91c2VyX2V4dGVybmFsX3VpZCkKICAgICAgICAgICAgICAgICAgICAgICAgaWYgZmluZF91c2VyX2J5X2V4dGVybmFsX3
 VpZCAhPSBOb25lOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFRydWUKICAgIAogICAgICAgICAgICAgICAgICAgICAgICBwcmludCAiT1RQLiBQcm9jZXNzIEhPVFAgYXV0aGVud
 GljYXRpb24gZHVyaW5nIGF1dGhlbnRpY2F0aW9uLiBGYWlsZWQgdG8gdXBkYXRlIHVzZXIgZW50cnkiCiAgICAgICAgICAgIGVsaWYgc2VsZi5vdHBUeXBlID09ICJ0b3RwIjoKICAgICAgICAgICAg
 ICAgIGZvciB1c2VyX2Vucm9sbG1lbnQgaW4gdXNlcl9lbnJvbGxtZW50czoKICAgICAgICAgICAgICAgICAgICBvdHBfc2VjcmV0X2tleSA9IHNlbGYuZnJvbUJhc2U2NFVybCh1c2VyX2Vucm9sbG1
 lbnQpCgogICAgICAgICAgICAgICAgICAgICMgVmFsaWRhdGUgVE9UUAogICAgICAgICAgICAgICAgICAgIHZhbGlkYXRpb25fcmVzdWx0ID0gc2VsZi52YWxpZGF0ZVRvdHBLZXkob3RwX3NlY3JldF
 9rZXksIG90cENvZGUpCiAgICAgICAgICAgICAgICAgICAgaWYgKHZhbGlkYXRpb25fcmVzdWx0ICE9IE5vbmUpIGFuZCB2YWxpZGF0aW9uX3Jlc3VsdFsicmVzdWx0Il06CiAgICAgICAgICAgICAgI
 CAgICAgICAgIHByaW50ICJPVFAuIFByb2Nlc3MgVE9UUCBhdXRoZW50aWNhdGlvbiBkdXJpbmcgYXV0aGVudGljYXRpb24uIG90cENvZGUgaXMgdmFsaWQiCiAgICAgICAgICAgICAgICAgICAgICAg
 IHJldHVybiBUcnVlCgogICAgICAgIGZhY2VzTWVzc2FnZXMuYWRkKFN0YXR1c01lc3NhZ2UuU2V2ZXJpdHkuRVJST1IsICJGYWlsZWQgdG8gYXV0aGVudGljYXRlLiBPVFAgY29kZSBpcyBpbnZhbGl
 kIikKICAgICAgICBwcmludCAiT1RQLiBQcm9jZXNzIE9UUCBhdXRoZW50aWNhdGlvbi4gT1RQIGNvZGUgaXMgaW52YWxpZCIKCiAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgIyBTaGFyZWQgSE9UUC
 9UT1RQIG1ldGhvZHMKICAgIGRlZiBnZW5lcmF0ZVNlY3JldEtleShzZWxmLCBrZXlMZW5ndGgpOgogICAgICAgIGJ5dGVzID0gamFycmF5Lnplcm9zKGtleUxlbmd0aCwgImIiKQogICAgICAgIHNlY
 3VyZVJhbmRvbSA9IFNlY3VyZVJhbmRvbSgpCiAgICAgICAgc2VjdXJlUmFuZG9tLm5leHRCeXRlcyhieXRlcykKICAgICAgICAKICAgICAgICByZXR1cm4gYnl0ZXMKICAgIAogICAgIyBIT1RQIG1l
 dGhvZHMKICAgIGRlZiBnZW5lcmF0ZVNlY3JldEhvdHBLZXkoc2VsZik6CiAgICAgICAga2V5TGVuZ3RoID0gc2VsZi5ob3RwQ29uZmlndXJhdGlvblsia2V5TGVuZ3RoIl0KICAgICAgICAKICAgICA
 gICByZXR1cm4gc2VsZi5nZW5lcmF0ZVNlY3JldEtleShrZXlMZW5ndGgpCgogICAgZGVmIGdlbmVyYXRlSG90cEtleShzZWxmLCBzZWNyZXRLZXksIG1vdmluZ0ZhY3Rvcik6CiAgICAgICAgZGlnaX
 RzID0gc2VsZi5ob3RwQ29uZmlndXJhdGlvblsiZGlnaXRzIl0KCiAgICAgICAgaG90cCA9IEhPVFAua2V5KHNlY3JldEtleSkuZGlnaXRzKGRpZ2l0cykubW92aW5nRmFjdG9yKG1vdmluZ0ZhY3Rvc
 ikuYnVpbGQoKQogICAgICAgIAogICAgICAgIHJldHVybiBob3RwLnZhbHVlKCkKCiAgICBkZWYgdmFsaWRhdGVIb3RwS2V5KHNlbGYsIHNlY3JldEtleSwgbW92aW5nRmFjdG9yLCB0b3RwS2V5KToK
 ICAgICAgICBkaWdpdHMgPSBzZWxmLmhvdHBDb25maWd1cmF0aW9uWyJkaWdpdHMiXQoKICAgICAgICBodG9wVmFsaWRhdGlvblJlc3VsdCA9IEhPVFBWYWxpZGF0b3IubG9va0FoZWFkV2luZG93KDE
 pLnZhbGlkYXRlKHNlY3JldEtleSwgbW92aW5nRmFjdG9yLCBkaWdpdHMsIHRvdHBLZXkpCiAgICAgICAgaWYgaHRvcFZhbGlkYXRpb25SZXN1bHQuaXNWYWxpZCgpOgogICAgICAgICAgICByZXR1cm
 4geyAicmVzdWx0IjogVHJ1ZSwgIm1vdmluZ0ZhY3RvciI6IGh0b3BWYWxpZGF0aW9uUmVzdWx0LmdldE5ld01vdmluZ0ZhY3RvcigpIH0KCiAgICAgICAgcmV0dXJuIHsgInJlc3VsdCI6IEZhbHNlL
 CAibW92aW5nRmFjdG9yIjogTm9uZSB9CgogICAgZGVmIGdlbmVyYXRlSG90cFNlY3JldEtleVVyaShzZWxmLCBzZWNyZXRLZXksIGlzc3VlciwgdXNlckRpc3BsYXlOYW1lKToKICAgICAgICBkaWdp
 dHMgPSBzZWxmLmhvdHBDb25maWd1cmF0aW9uWyJkaWdpdHMiXQoKICAgICAgICBzZWNyZXRLZXlCYXNlMzIgPSBzZWxmLnRvQmFzZTMyKHNlY3JldEtleSkKICAgICAgICBvdHBLZXkgPSBPVFBLZXk
 oc2VjcmV0S2V5QmFzZTMyLCBPVFBUeXBlLkhPVFApCiAgICAgICAgbGFiZWwgPSBpc3N1ZXIgKyAiOiVzIiAlIHVzZXJEaXNwbGF5TmFtZTsKCiAgICAgICAgb3RwQXV0aFVSSSA9IE9UUEF1dGhVUk
 lCdWlsZGVyLmZyb21LZXkob3RwS2V5KS5sYWJlbChsYWJlbCkuaXNzdWVyKGlzc3VlcikuZGlnaXRzKGRpZ2l0cykuYnVpbGQoKTsKCiAgICAgICAgcmV0dXJuIG90cEF1dGhVUkkudG9VcmlTdHJpb
 mcoKQoKICAgICMgVE9UUCBtZXRob2RzCiAgICBkZWYgZ2VuZXJhdGVTZWNyZXRUb3RwS2V5KHNlbGYpOgogICAgICAgIGtleUxlbmd0aCA9IHNlbGYudG90cENvbmZpZ3VyYXRpb25bImtleUxlbmd0
 aCJdCiAgICAgICAgCiAgICAgICAgcmV0dXJuIHNlbGYuZ2VuZXJhdGVTZWNyZXRLZXkoa2V5TGVuZ3RoKQoKICAgIGRlZiBnZW5lcmF0ZVRvdHBLZXkoc2VsZiwgc2VjcmV0S2V5KToKICAgICAgICB
 kaWdpdHMgPSBzZWxmLnRvdHBDb25maWd1cmF0aW9uWyJkaWdpdHMiXQogICAgICAgIHRpbWVTdGVwID0gc2VsZi50b3RwQ29uZmlndXJhdGlvblsidGltZVN0ZXAiXQogICAgICAgIGhtYWNTaGFBbG
 dvcml0aG1UeXBlID0gc2VsZi50b3RwQ29uZmlndXJhdGlvblsiaG1hY1NoYUFsZ29yaXRobVR5cGUiXQoKICAgICAgICB0b3RwID0gVE9UUC5rZXkoc2VjcmV0S2V5KS5kaWdpdHMoZGlnaXRzKS50a
 W1lU3RlcChUaW1lVW5pdC5TRUNPTkRTLnRvTWlsbGlzKHRpbWVTdGVwKSkuaG1hY1NoYShobWFjU2hhQWxnb3JpdGhtVHlwZSkuYnVpbGQoKQogICAgICAgIAogICAgICAgIHJldHVybiB0b3RwLnZh
 bHVlKCkKCiAgICBkZWYgdmFsaWRhdGVUb3RwS2V5KHNlbGYsIHNlY3JldEtleSwgdG90cEtleSk6CiAgICAgICAgbG9jYWxUb3RwS2V5ID0gc2VsZi5nZW5lcmF0ZVRvdHBLZXkoc2VjcmV0S2V5KQo
 gICAgICAgIGlmIFN0cmluZ0hlbHBlci5lcXVhbHMobG9jYWxUb3RwS2V5LCB0b3RwS2V5KToKICAgICAgICAgICAgcmV0dXJuIHsgInJlc3VsdCI6IFRydWUgfQoKICAgICAgICByZXR1cm4geyAicm
 VzdWx0IjogRmFsc2UgfQoKICAgIGRlZiBnZW5lcmF0ZVRvdHBTZWNyZXRLZXlVcmkoc2VsZiwgc2VjcmV0S2V5LCBpc3N1ZXIsIHVzZXJEaXNwbGF5TmFtZSk6CiAgICAgICAgZGlnaXRzID0gc2VsZ
 i50b3RwQ29uZmlndXJhdGlvblsiZGlnaXRzIl0KICAgICAgICB0aW1lU3RlcCA9IHNlbGYudG90cENvbmZpZ3VyYXRpb25bInRpbWVTdGVwIl0KCiAgICAgICAgc2VjcmV0S2V5QmFzZTMyID0gc2Vs
 Zi50b0Jhc2UzMihzZWNyZXRLZXkpCiAgICAgICAgb3RwS2V5ID0gT1RQS2V5KHNlY3JldEtleUJhc2UzMiwgT1RQVHlwZS5UT1RQKQogICAgICAgIGxhYmVsID0gaXNzdWVyICsgIjolcyIgJSB1c2V
 yRGlzcGxheU5hbWU7CgogICAgICAgIG90cEF1dGhVUkkgPSBPVFBBdXRoVVJJQnVpbGRlci5mcm9tS2V5KG90cEtleSkubGFiZWwobGFiZWwpLmlzc3Vlcihpc3N1ZXIpLmRpZ2l0cyhkaWdpdHMpLn
 RpbWVTdGVwKFRpbWVVbml0LlNFQ09ORFMudG9NaWxsaXModGltZVN0ZXApKS5idWlsZCgpOwoKICAgICAgICByZXR1cm4gb3RwQXV0aFVSSS50b1VyaVN0cmluZygpCgogICAgIyBVdGlsaXR5IG1ld
 GhvZHMKICAgIGRlZiB0b0Jhc2UzMihzZWxmLCBieXRlcyk6CiAgICAgICAgcmV0dXJuIEJhc2VFbmNvZGluZy5iYXNlMzIoKS5lbmNvZGUoYnl0ZXMpCgogICAgZGVmIHRvQmFzZTY0VXJsKHNlbGYs
 IGJ5dGVzKToKICAgICAgICByZXR1cm4gQmFzZUVuY29kaW5nLmJhc2U2NFVybCgpLmVuY29kZShieXRlcykKCiAgICBkZWYgZnJvbUJhc2U2NFVybChzZWxmLCBjaGFycyk6CiAgICAgICAgcmV0dXJ
 uIEJhc2VFbmNvZGluZy5iYXNlNjRVcmwoKS5kZWNvZGUoY2hhcnMpCg==
oxScriptType: person_authentication
programmingLanguage: python

dn: inum=%(inumOrg)s!0011!5018.F9CF,ou=scripts,o=%(inumOrg)s,o=gluu
objectClass: top
objectClass: oxCustomScript
description: DUO authentication module
displayName: duo
gluuStatus: false
inum: %(inumOrg)s!0011!5018.F9CF
oxConfigurationProperty: {"value1":"duo_creds_file","value2":"/etc/certs/duo_creds.json","description":""}
oxConfigurationProperty: {"value1":"duo_host","value2":"api-random.duosecurity.com","description":""}
oxLevel: 20
oxModuleProperty: {"value1":"usage_type","value2":"interactive","description":""}
oxModuleProperty: {"value1":"location_type","value2":"ldap","description":""}
oxRevision: 1
oxScript:: IyBveEF1dGggaXMgYXZhaWxhYmxlIHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoMjAwOCkuIFNlZSBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUIGZvciBmdWxsIHRleHQuC
 iMgQ29weXJpZ2h0IChjKSAyMDE2LCBHbHV1CiMKIyBBdXRob3I6IFl1cml5IE1vdmNoYW4KIwoKZnJvbSBvcmcuamJvc3Muc2VhbS5jb250ZXh0cyBpbXBvcnQgQ29udGV4dCwgQ29udGV4dHMKZnJv
 bSBvcmcuamJvc3Muc2VhbS5zZWN1cml0eSBpbXBvcnQgSWRlbnRpdHkKZnJvbSBvcmcueGRpLm1vZGVsLmN1c3RvbS5zY3JpcHQudHlwZS5hdXRoIGltcG9ydCBQZXJzb25BdXRoZW50aWNhdGlvblR
 5cGUKZnJvbSBvcmcueGRpLm94YXV0aC5zZXJ2aWNlIGltcG9ydCBVc2VyU2VydmljZSwgVXNlckdyb3VwU2VydmljZSwgQXV0aGVudGljYXRpb25TZXJ2aWNlCmZyb20gb3JnLnhkaS5zZXJ2aWNlIG
 ltcG9ydCBNYWlsU2VydmljZQpmcm9tIG9yZy54ZGkudXRpbCBpbXBvcnQgU3RyaW5nSGVscGVyCmZyb20gb3JnLnhkaS51dGlsIGltcG9ydCBBcnJheUhlbHBlcgoKaW1wb3J0IGphdmEKaW1wb3J0I
 GR1b193ZWIKdHJ5OgogICAgaW1wb3J0IGpzb24KZXhjZXB0IEltcG9ydEVycm9yOgogICAgaW1wb3J0IHNpbXBsZWpzb24gYXMganNvbgoKY2xhc3MgUGVyc29uQXV0aGVudGljYXRpb24oUGVyc29u
 QXV0aGVudGljYXRpb25UeXBlKToKICAgIGRlZiBfX2luaXRfXyhzZWxmLCBjdXJyZW50VGltZU1pbGxpcyk6CiAgICAgICAgc2VsZi5jdXJyZW50VGltZU1pbGxpcyA9IGN1cnJlbnRUaW1lTWlsbGl
 zCgogICAgZGVmIGluaXQoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOgogICAgICAgIHByaW50ICJEdW8uIEluaXRpYWxpemF0aW9uIgoKICAgICAgICBkdW9fY3JlZHNfZmlsZSA9IGNvbm
 ZpZ3VyYXRpb25BdHRyaWJ1dGVzLmdldCgiZHVvX2NyZWRzX2ZpbGUiKS5nZXRWYWx1ZTIoKQogICAgICAgICMgTG9hZCBjcmVkZW50aWFscyBmcm9tIGZpbGUKICAgICAgICBmID0gb3BlbihkdW9fY
 3JlZHNfZmlsZSwgJ3InKQogICAgICAgIHRyeToKICAgICAgICAgICAgY3JlZHMgPSBqc29uLmxvYWRzKGYucmVhZCgpKQogICAgICAgIGV4Y2VwdDoKICAgICAgICAgICAgcHJpbnQgIkR1by4gSW5p
 dGlhbGl6YXRpb24uIEZhaWxlZCB0byBsb2FkIGNyZWRzIGZyb20gZmlsZToiLCBkdW9fY3JlZHNfZmlsZQogICAgICAgICAgICByZXR1cm4gRmFsc2UKICAgICAgICBmaW5hbGx5OgogICAgICAgICA
 gICBmLmNsb3NlKCkKCiAgICAgICAgc2VsZi5pa2V5ID0gc3RyKGNyZWRzWyJpa2V5Il0pCiAgICAgICAgc2VsZi5za2V5ID0gc3RyKGNyZWRzWyJza2V5Il0pCiAgICAgICAgc2VsZi5ha2V5ID0gc3
 RyKGNyZWRzWyJha2V5Il0pCgogICAgICAgIHNlbGYudXNlX2R1b19ncm91cCA9IEZhbHNlCiAgICAgICAgaWYgKGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmNvbnRhaW5zS2V5KCJkdW9fZ3JvdXAiK
 Sk6CiAgICAgICAgICAgIHNlbGYuZHVvX2dyb3VwID0gY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuZ2V0KCJkdW9fZ3JvdXAiKS5nZXRWYWx1ZTIoKQogICAgICAgICAgICBzZWxmLnVzZV9kdW9fZ3Jv
 dXAgPSBUcnVlCiAgICAgICAgICAgIHByaW50ICJEdW8uIEluaXRpYWxpemF0aW9uLiBVc2luZyBEdW8gb25seSBpZiB1c2VyIGJlbG9uZyB0byBncm91cDoiLCBzZWxmLmR1b19ncm91cAoKICAgICA
 gICBzZWxmLnVzZV9hdWRpdF9ncm91cCA9IEZhbHNlCiAgICAgICAgaWYgKGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmNvbnRhaW5zS2V5KCJhdWRpdF9ncm91cCIpKToKICAgICAgICAgICAgc2VsZi
 5hdWRpdF9ncm91cCA9IGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmdldCgiYXVkaXRfZ3JvdXAiKS5nZXRWYWx1ZTIoKQoKICAgICAgICAgICAgaWYgKG5vdCBjb25maWd1cmF0aW9uQXR0cmlidXRlc
 y5jb250YWluc0tleSgiYXVkaXRfZ3JvdXBfZW1haWwiKSk6CiAgICAgICAgICAgICAgICBwcmludCAiRHVvLiBJbml0aWFsaXphdGlvbi4gUHJvcGVydHkgYXVkaXRfZ3JvdXBfZW1haWwgaXMgbm90
 IHNwZWNpZmllZCIKICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgc2VsZi5hdWRpdF9lbWFpbCA9IGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmdldCgiYXVkaXRfZ3JvdXB
 fZW1haWwiKS5nZXRWYWx1ZTIoKQogICAgICAgICAgICBzZWxmLnVzZV9hdWRpdF9ncm91cCA9IFRydWUKCiAgICAgICAgICAgIHByaW50ICJEdW8uIEluaXRpYWxpemF0aW9uLiBVc2luZyBhdWRpdG
 8gZ3JvdXA6Iiwgc2VsZi5hdWRpdF9ncm91cAogICAgICAgICAgICAKICAgICAgICBpZiAoc2VsZi51c2VfZHVvX2dyb3VwIG9yIHNlbGYudXNlX2F1ZGl0X2dyb3VwKToKICAgICAgICAgICAgaWYgK
 G5vdCBjb25maWd1cmF0aW9uQXR0cmlidXRlcy5jb250YWluc0tleSgiYXVkaXRfYXR0cmlidXRlIikpOgogICAgICAgICAgICAgICAgcHJpbnQgIkR1by4gSW5pdGlhbGl6YXRpb24uIFByb3BlcnR5
 IGF1ZGl0X2F0dHJpYnV0ZSBpcyBub3Qgc3BlY2lmaWVkIgogICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBzZWxmLmF1ZGl0X2F0dHJ
 pYnV0ZSA9IGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmdldCgiYXVkaXRfYXR0cmlidXRlIikuZ2V0VmFsdWUyKCkKCgogICAgICAgIHByaW50ICJEdW8uIEluaXRpYWxpemVkIHN1Y2Nlc3NmdWxseS
 IKICAgICAgICByZXR1cm4gVHJ1ZSAgIAoKICAgIGRlZiBkZXN0cm95KHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKToKICAgICAgICBwcmludCAiRHVvLiBEZXN0cm95IgogICAgICAgIHBya
 W50ICJEdW8uIERlc3Ryb3llZCBzdWNjZXNzZnVsbHkiCiAgICAgICAgcmV0dXJuIFRydWUKCiAgICBkZWYgZ2V0QXBpVmVyc2lvbihzZWxmKToKICAgICAgICByZXR1cm4gMQoKICAgIGRlZiBpc1Zh
 bGlkQXV0aGVudGljYXRpb25NZXRob2Qoc2VsZiwgdXNhZ2VUeXBlLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6CiAgICAgICAgcmV0dXJuIFRydWUKCiAgICBkZWYgZ2V0QWx0ZXJuYXRpdmVBdXR
 oZW50aWNhdGlvbk1ldGhvZChzZWxmLCB1c2FnZVR5cGUsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKToKICAgICAgICByZXR1cm4gTm9uZQoKICAgIGRlZiBhdXRoZW50aWNhdGUoc2VsZiwgY29uZm
 lndXJhdGlvbkF0dHJpYnV0ZXMsIHJlcXVlc3RQYXJhbWV0ZXJzLCBzdGVwKToKICAgICAgICBkdW9faG9zdCA9IGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmdldCgiZHVvX2hvc3QiKS5nZXRWYWx1Z
 TIoKQoKICAgICAgICBjcmVkZW50aWFscyA9IElkZW50aXR5Lmluc3RhbmNlKCkuZ2V0Q3JlZGVudGlhbHMoKQogICAgICAgIHVzZXJfbmFtZSA9IGNyZWRlbnRpYWxzLmdldFVzZXJuYW1lKCkKCiAg
 ICAgICAgaWYgKHN0ZXAgPT0gMSk6CiAgICAgICAgICAgIHByaW50ICJEdW8uIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxIgoKICAgICAgICAgICAgdXNlcl9wYXNzd29yZCA9IGNyZWRlbnRpYWxzLmd
 ldFBhc3N3b3JkKCkKICAgICAgICAgICAgbG9nZ2VkX2luID0gRmFsc2UKICAgICAgICAgICAgaWYgKFN0cmluZ0hlbHBlci5pc05vdEVtcHR5U3RyaW5nKHVzZXJfbmFtZSkgYW5kIFN0cmluZ0hlbH
 Blci5pc05vdEVtcHR5U3RyaW5nKHVzZXJfcGFzc3dvcmQpKToKICAgICAgICAgICAgICAgIHVzZXJTZXJ2aWNlID0gVXNlclNlcnZpY2UuaW5zdGFuY2UoKQogICAgICAgICAgICAgICAgbG9nZ2VkX
 2luID0gdXNlclNlcnZpY2UuYXV0aGVudGljYXRlKHVzZXJfbmFtZSwgdXNlcl9wYXNzd29yZCkKCiAgICAgICAgICAgIGlmIChub3QgbG9nZ2VkX2luKToKICAgICAgICAgICAgICAgIHJldHVybiBG
 YWxzZQoKICAgICAgICAgICAgYXV0aGVudGljYXRpb25TZXJ2aWNlID0gQXV0aGVudGljYXRpb25TZXJ2aWNlLmluc3RhbmNlKCkKICAgICAgICAgICAgdXNlciA9IGF1dGhlbnRpY2F0aW9uU2Vydml
 jZS5nZXRBdXRoZW50aWNhdGVkVXNlcigpCiAgICAgICAgICAgIGlmIChzZWxmLnVzZV9kdW9fZ3JvdXApOgogICAgICAgICAgICAgICAgcHJpbnQgIkR1by4gQXV0aGVudGljYXRlIGZvciBzdGVwID
 EuIENoZWNraW5nIGlmIHVzZXIgYmVsb25nIHRvIER1byBncm91cCIKICAgICAgICAgICAgICAgIGlzX21lbWJlcl9kdW9fZ3JvdXAgPSBzZWxmLmlzVXNlck1lbWJlck9mR3JvdXAodXNlciwgc2VsZ
 i5hdWRpdF9hdHRyaWJ1dGUsIHNlbGYuZHVvX2dyb3VwKQogICAgICAgICAgICAgICAgaWYgKGlzX21lbWJlcl9kdW9fZ3JvdXApOgogICAgICAgICAgICAgICAgICAgIHByaW50ICJEdW8uIEF1dGhl
 bnRpY2F0ZSBmb3Igc3RlcCAxLiBVc2VyICciICsgdXNlci5nZXRVc2VySWQoKSArICInIG1lbWJlciBvZiBEdW8gZ3JvdXAiCiAgICAgICAgICAgICAgICAgICAgZHVvX2NvdW50X2xvZ2luX3N0ZXB
 zID0gMgogICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICBzZWxmLnByb2Nlc3NBdWRpdEdyb3VwKHVzZXIpCiAgICAgICAgICAgICAgICAgICAgZHVvX2NvdW50X2xvZ2luX3
 N0ZXBzID0gMQoKICAgICAgICAgICAgICAgIGNvbnRleHQgPSBDb250ZXh0cy5nZXRFdmVudENvbnRleHQoKQogICAgICAgICAgICAgICAgY29udGV4dC5zZXQoImR1b19jb3VudF9sb2dpbl9zdGVwc
 yIsIGR1b19jb3VudF9sb2dpbl9zdGVwcykKCiAgICAgICAgICAgIHJldHVybiBUcnVlCiAgICAgICAgZWxpZiAoc3RlcCA9PSAyKToKICAgICAgICAgICAgcHJpbnQgIkR1by4gQXV0aGVudGljYXRl
 IGZvciBzdGVwIDIiCgogICAgICAgICAgICBzaWdfcmVzcG9uc2VfYXJyYXkgPSByZXF1ZXN0UGFyYW1ldGVycy5nZXQoInNpZ19yZXNwb25zZSIpCiAgICAgICAgICAgIGlmIEFycmF5SGVscGVyLml
 zRW1wdHkoc2lnX3Jlc3BvbnNlX2FycmF5KToKICAgICAgICAgICAgICAgIHByaW50ICJEdW8uIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAyLiBzaWdfcmVzcG9uc2UgaXMgZW1wdHkiCiAgICAgICAgIC
 AgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgICAgIGR1b19zaWdfcmVzcG9uc2UgPSBzaWdfcmVzcG9uc2VfYXJyYXlbMF0KCiAgICAgICAgICAgIHByaW50ICJEdW8uIEF1dGhlbnRpY2F0ZSBmb
 3Igc3RlcCAyLiBkdW9fc2lnX3Jlc3BvbnNlOiAiICsgZHVvX3NpZ19yZXNwb25zZQoKICAgICAgICAgICAgYXV0aGVudGljYXRlZF91c2VybmFtZSA9IGR1b193ZWIudmVyaWZ5X3Jlc3BvbnNlKHNl
 bGYuaWtleSwgc2VsZi5za2V5LCBzZWxmLmFrZXksIGR1b19zaWdfcmVzcG9uc2UpCgogICAgICAgICAgICBwcmludCAiRHVvLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMi4gYXV0aGVudGljYXRlZF9
 1c2VybmFtZTogIiArIGF1dGhlbnRpY2F0ZWRfdXNlcm5hbWUgKyAiLCBleHBlY3RlZCB1c2VyX25hbWU6ICIgKyB1c2VyX25hbWUKCiAgICAgICAgICAgIGlmIChub3QgU3RyaW5nSGVscGVyLmVxdW
 Fscyh1c2VyX25hbWUsIGF1dGhlbnRpY2F0ZWRfdXNlcm5hbWUpKToKICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgYXV0aGVudGljYXRpb25TZXJ2aWNlID0gQXV0aGVud
 GljYXRpb25TZXJ2aWNlLmluc3RhbmNlKCkKICAgICAgICAgICAgdXNlciA9IGF1dGhlbnRpY2F0aW9uU2VydmljZS5nZXRBdXRoZW50aWNhdGVkVXNlcigpCiAgICAgICAgICAgIHNlbGYucHJvY2Vz
 c0F1ZGl0R3JvdXAodXNlcikKCiAgICAgICAgICAgIHJldHVybiBUcnVlCiAgICAgICAgZWxzZToKICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgZGVmIHByZXBhcmVGb3JTdGVwKHNlbGYsIGN
 vbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCByZXF1ZXN0UGFyYW1ldGVycywgc3RlcCk6CiAgICAgICAgY29udGV4dCA9IENvbnRleHRzLmdldEV2ZW50Q29udGV4dCgpCgogICAgICAgIGR1b19ob3N0ID
 0gY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuZ2V0KCJkdW9faG9zdCIpLmdldFZhbHVlMigpCgogICAgICAgIGNyZWRlbnRpYWxzID0gSWRlbnRpdHkuaW5zdGFuY2UoKS5nZXRDcmVkZW50aWFscygpC
 iAgICAgICAgdXNlcl9uYW1lID0gY3JlZGVudGlhbHMuZ2V0VXNlcm5hbWUoKQoKICAgICAgICBpZiAoc3RlcCA9PSAxKToKICAgICAgICAgICAgcHJpbnQgIkR1by4gUHJlcGFyZSBmb3Igc3RlcCAx
 IgoKICAgICAgICAgICAgcmV0dXJuIFRydWUKICAgICAgICBlbGlmIChzdGVwID09IDIpOgogICAgICAgICAgICBwcmludCAiRHVvLiBQcmVwYXJlIGZvciBzdGVwIDIiCgogICAgICAgICAgICBkdW9
 fc2lnX3JlcXVlc3QgPSBkdW9fd2ViLnNpZ25fcmVxdWVzdChzZWxmLmlrZXksIHNlbGYuc2tleSwgc2VsZi5ha2V5LCB1c2VyX25hbWUpCiAgICAgICAgICAgIHByaW50ICJEdW8uIFByZXBhcmUgZm
 9yIHN0ZXAgMi4gZHVvX3NpZ19yZXF1ZXN0OiAiICsgZHVvX3NpZ19yZXF1ZXN0CiAgICAgICAgICAgIAogICAgICAgICAgICBjb250ZXh0LnNldCgiZHVvX2hvc3QiLCBkdW9faG9zdCkKICAgICAgI
 CAgICAgY29udGV4dC5zZXQoImR1b19zaWdfcmVxdWVzdCIsIGR1b19zaWdfcmVxdWVzdCkKCiAgICAgICAgICAgIHJldHVybiBUcnVlCiAgICAgICAgZWxzZToKICAgICAgICAgICAgcmV0dXJuIEZh
 bHNlCgogICAgZGVmIGdldEV4dHJhUGFyYW1ldGVyc0ZvclN0ZXAoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIHN0ZXApOgogICAgICAgIHJldHVybiBOb25lCgogICAgZGVmIGdldENvdW5
 0QXV0aGVudGljYXRpb25TdGVwcyhzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6CiAgICAgICAgY29udGV4dCA9IENvbnRleHRzLmdldEV2ZW50Q29udGV4dCgpCiAgICAgICAgaWYgKGNvbn
 RleHQuaXNTZXQoImR1b19jb3VudF9sb2dpbl9zdGVwcyIpKToKICAgICAgICAgICAgcmV0dXJuIGNvbnRleHQuZ2V0KCJkdW9fY291bnRfbG9naW5fc3RlcHMiKQoKICAgICAgICByZXR1cm4gMgoKI
 CAgIGRlZiBnZXRQYWdlRm9yU3RlcChzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcywgc3RlcCk6CiAgICAgICAgaWYgKHN0ZXAgPT0gMik6CiAgICAgICAgICAgIHJldHVybiAiL2F1dGgvZHVv
 L2R1b2xvZ2luLnhodG1sIgogICAgICAgIHJldHVybiAiIgoKICAgIGRlZiBsb2dvdXQoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIHJlcXVlc3RQYXJhbWV0ZXJzKToKICAgICAgICByZXR
 1cm4gVHJ1ZQoKICAgIGRlZiBpc1VzZXJNZW1iZXJPZkdyb3VwKHNlbGYsIHVzZXIsIGF0dHJpYnV0ZSwgZ3JvdXApOgogICAgICAgIGlzX21lbWJlciA9IEZhbHNlCiAgICAgICAgbWVtYmVyX29mX2
 xpc3QgPSB1c2VyLmdldEF0dHJpYnV0ZVZhbHVlcyhhdHRyaWJ1dGUpCiAgICAgICAgaWYgKG1lbWJlcl9vZl9saXN0ICE9IE5vbmUpOgogICAgICAgICAgICBmb3IgbWVtYmVyX29mIGluIG1lbWJlc
 l9vZl9saXN0OgogICAgICAgICAgICAgICAgaWYgKFN0cmluZ0hlbHBlci5lcXVhbHNJZ25vcmVDYXNlKGdyb3VwLCBtZW1iZXJfb2YpKToKICAgICAgICAgICAgICAgICAgICBpc19tZW1iZXIgPSBU
 cnVlCiAgICAgICAgICAgICAgICAgICAgYnJlYWsKCiAgICAgICAgcmV0dXJuIGlzX21lbWJlcgoKICAgIGRlZiBwcm9jZXNzQXVkaXRHcm91cChzZWxmLCB1c2VyKToKICAgICAgICBpZiAoc2VsZi5
 1c2VfYXVkaXRfZ3JvdXApOgogICAgICAgICAgICBpc19tZW1iZXIgPSBzZWxmLmlzVXNlck1lbWJlck9mR3JvdXAodXNlciwgc2VsZi5hdWRpdF9hdHRyaWJ1dGUsIHNlbGYuYXVkaXRfZ3JvdXApCi
 AgICAgICAgICAgIGlmIChpc19tZW1iZXIpOgogICAgICAgICAgICAgICAgcHJpbnQgIkR1by4gQXV0aGVudGljYXRlIGZvciBwcm9jZXNzQXVkaXRHcm91cC4gVXNlciAnIiArIHVzZXIuZ2V0VXNlc
 klkKCkgKyAiJyBtZW1iZXIgb2YgYXVkaXQgZ3JvdXAiCiAgICAgICAgICAgICAgICBwcmludCAiRHVvLiBBdXRoZW50aWNhdGUgZm9yIHByb2Nlc3NBdWRpdEdyb3VwLiBTZW5kaW5nIGUtbWFpbCBh
 Ym91dCB1c2VyICciICsgdXNlci5nZXRVc2VySWQoKSArICInIGxvZ2luIHRvIiwgc2VsZi5hdWRpdF9lbWFpbAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAjIFNlbmQgZS1tYWlsIHR
 vIGFkbWluaXN0cmF0b3IKICAgICAgICAgICAgICAgIHVzZXJfaWQgPSB1c2VyLmdldFVzZXJJZCgpCiAgICAgICAgICAgICAgICBtYWlsU2VydmljZSA9IE1haWxTZXJ2aWNlLmluc3RhbmNlKCkKIC
 AgICAgICAgICAgICAgIHN1YmplY3QgPSAiVXNlciBsb2cgaW46ICIgKyB1c2VyX2lkCiAgICAgICAgICAgICAgICBib2R5ID0gIlVzZXIgbG9nIGluOiAiICsgdXNlcl9pZAogICAgICAgICAgICAgI
 CAgbWFpbFNlcnZpY2Uuc2VuZE1haWwoc2VsZi5hdWRpdF9lbWFpbCwgc3ViamVjdCwgYm9keSkK
oxScriptType: person_authentication
programmingLanguage: python

dn: inum=%(inumOrg)s!0011!522F.CDC5,ou=scripts,o=%(inumOrg)s,o=gluu
objectClass: top
objectClass: oxCustomScript
description: Sample Update User script
displayName: update_user
gluuStatus: false
inum: %(inumOrg)s!0011!522F.CDC5
oxLevel: 100
oxModuleProperty: {"value1":"location_type","value2":"ldap","description":""}
oxRevision: 1
oxScript:: IyBveEF1dGggaXMgYXZhaWxhYmxlIHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoMjAwOCkuIFNlZSBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUIGZvciBmdWxsIHRleHQuC
 iMgQ29weXJpZ2h0IChjKSAyMDE2LCBHbHV1CiMKIyBBdXRob3I6IFl1cml5IE1vdmNoYW4KIwoKZnJvbSBvcmcueGRpLm1vZGVsLmN1c3RvbS5zY3JpcHQudHlwZS51c2VyIGltcG9ydCBVcGRhdGVV
 c2VyVHlwZQpmcm9tIG9yZy54ZGkudXRpbCBpbXBvcnQgU3RyaW5nSGVscGVyLCBBcnJheUhlbHBlcgpmcm9tIGphdmEudXRpbCBpbXBvcnQgQXJyYXlzLCBBcnJheUxpc3QKCmltcG9ydCBqYXZhCgp
 jbGFzcyBVcGRhdGVVc2VyKFVwZGF0ZVVzZXJUeXBlKToKICAgIGRlZiBfX2luaXRfXyhzZWxmLCBjdXJyZW50VGltZU1pbGxpcyk6CiAgICAgICAgc2VsZi5jdXJyZW50VGltZU1pbGxpcyA9IGN1cn
 JlbnRUaW1lTWlsbGlzCgogICAgZGVmIGluaXQoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOgogICAgICAgIHByaW50ICJVcGRhdGUgdXNlci4gSW5pdGlhbGl6YXRpb24iCiAgICAgICAgc
 HJpbnQgIlVwZGF0ZSB1c2VyLiBJbml0aWFsaXplZCBzdWNjZXNzZnVsbHkiCgogICAgICAgIHJldHVybiBUcnVlICAgCgogICAgZGVmIGRlc3Ryb3koc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0
 ZXMpOgogICAgICAgIHByaW50ICJVcGRhdGUgdXNlci4gRGVzdHJveSIKICAgICAgICBwcmludCAiVXBkYXRlIHVzZXIuIERlc3Ryb3llZCBzdWNjZXNzZnVsbHkiCiAgICAgICAgcmV0dXJuIFRydWU
 gICAKCiAgICAjIFVwZGF0ZSB1c2VyIGVudHJ5IGJlZm9yZSBwZXJzaXN0ZW50IGl0CiAgICAjICAgdXNlciBpcyBvcmcuZ2x1dS5veHRydXN0Lm1vZGVsLkdsdXVDdXN0b21QZXJzb24KICAgICMgIC
 BwZXJzaXN0ZWQgaXMgYm9vbGVhbiB2YWx1ZSB0byBzcGVjaWZ5IGlmIG9wZXJhdGlvbiB0eXBlOiBhZGQvbW9kaWZ5CiAgICAjICAgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMgaXMgamF2YS51dGlsL
 k1hcDxTdHJpbmcsIFNpbXBsZUN1c3RvbVByb3BlcnR5PgogICAgZGVmIHVwZGF0ZVVzZXIoc2VsZiwgdXNlciwgcGVyc2lzdGVkLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6CiAgICAgICAgcHJp
 bnQgIlVwZGF0ZSB1c2VyLiBVcGRhdGVVc2VyIG1ldGhvZCIKCiAgICAgICAgdWlkID0gdXNlci5nZXRVaWQoKQogICAgICAgIHByaW50ICJVcGRhdGUgdXNlci4gVXNlciBVaWQ6IiwgdWlkCiAgICA
 gICAgCiAgICAgICAgbWFpbCA9IHVpZCArICJAZXhhbXBsZS5vcmciCiAgICAgICAgdXNlci5zZXRNYWlsKG1haWwpCgogICAgICAgIHJldHVybiBUcnVlCgogICAgZGVmIGdldEFwaVZlcnNpb24oc2
 VsZik6CiAgICAgICAgcmV0dXJuIDEK
oxScriptType: update_user
programmingLanguage: python

dn: inum=%(inumOrg)s!0011!6EA0.8F0C,ou=scripts,o=%(inumOrg)s,o=gluu
objectClass: top
objectClass: oxCustomScript
description: Sample User Registration script
displayName: user_registration
gluuStatus: false
inum: %(inumOrg)s!0011!6EA0.8F0C
oxConfigurationProperty: {"value1":"enable_user","value2":"false","description":""}
oxLevel: 100
oxModuleProperty: {"value1":"location_type","value2":"ldap","description":""}
oxRevision: 1
oxScript:: IyBveEF1dGggaXMgYXZhaWxhYmxlIHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoMjAwOCkuIFNlZSBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUIGZvciBmdWxsIHRleHQuC
 iMgQ29weXJpZ2h0IChjKSAyMDE2LCBHbHV1CiMKIyBBdXRob3I6IFl1cml5IE1vdmNoYW4KIwoKZnJvbSBvcmcueGRpLm1vZGVsLmN1c3RvbS5zY3JpcHQudHlwZS51c2VyIGltcG9ydCBVc2VyUmVn
 aXN0cmF0aW9uVHlwZQpmcm9tIG9yZy54ZGkubGRhcC5tb2RlbCBpbXBvcnQgR2x1dVN0YXR1cwpmcm9tIG9yZy54ZGkudXRpbCBpbXBvcnQgU3RyaW5nSGVscGVyLCBBcnJheUhlbHBlcgpmcm9tIGp
 hdmEudXRpbCBpbXBvcnQgQXJyYXlzLCBBcnJheUxpc3QKCmltcG9ydCBqYXZhCgpjbGFzcyBVc2VyUmVnaXN0cmF0aW9uKFVzZXJSZWdpc3RyYXRpb25UeXBlKToKICAgIGRlZiBfX2luaXRfXyhzZW
 xmLCBjdXJyZW50VGltZU1pbGxpcyk6CiAgICAgICAgc2VsZi5jdXJyZW50VGltZU1pbGxpcyA9IGN1cnJlbnRUaW1lTWlsbGlzCgogICAgZGVmIGluaXQoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpY
 nV0ZXMpOgogICAgICAgIHByaW50ICJVc2VyIHJlZ2lzdHJhdGlvbi4gSW5pdGlhbGl6YXRpb24iCgogICAgICAgIHNlbGYuZW5hYmxlX3VzZXIgPSBTdHJpbmdIZWxwZXIudG9Cb29sZWFuKGNvbmZp
 Z3VyYXRpb25BdHRyaWJ1dGVzLmdldCgiZW5hYmxlX3VzZXIiKS5nZXRWYWx1ZTIoKSwgRmFsc2UpCgogICAgICAgIHByaW50ICJVc2VyIHJlZ2lzdHJhdGlvbi4gSW5pdGlhbGl6ZWQgc3VjY2Vzc2Z
 1bGx5IgoKICAgICAgICByZXR1cm4gVHJ1ZSAgIAoKICAgIGRlZiBkZXN0cm95KHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKToKICAgICAgICBwcmludCAiVXNlciByZWdpc3RyYXRpb24uIE
 Rlc3Ryb3kiCiAgICAgICAgcHJpbnQgIlVzZXIgcmVnaXN0cmF0aW9uLiBEZXN0cm95ZWQgc3VjY2Vzc2Z1bGx5IgogICAgICAgIHJldHVybiBUcnVlICAgCgogICAgIyBVc2VyIHJlZ2lzdHJhdGlvb
 iBpbml0IG1ldGhvZAogICAgIyAgIHVzZXIgaXMgb3JnLmdsdXUub3h0cnVzdC5tb2RlbC5HbHV1Q3VzdG9tUGVyc29uCiAgICAjICAgcmVxdWVzdFBhcmFtZXRlcnMgaXMgamF2YS51dGlsLk1hcDxT
 dHJpbmcsIFN0cmluZ1tdPgogICAgIyAgIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzIGlzIGphdmEudXRpbC5NYXA8U3RyaW5nLCBTaW1wbGVDdXN0b21Qcm9wZXJ0eT4KICAgIGRlZiBpbml0UmVnaXN
 0cmF0aW9uKHNlbGYsIHVzZXIsIHJlcXVlc3RQYXJhbWV0ZXJzLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6CiAgICAgICAgcHJpbnQgIlVzZXIgcmVnaXN0cmF0aW9uLiBJbml0IG1ldGhvZCIKCi
 AgICAgICAgcmV0dXJuIFRydWUKCiAgICAjIFVzZXIgcmVnaXN0cmF0aW9uIHByZSBtZXRob2QKICAgICMgICB1c2VyIGlzIG9yZy5nbHV1Lm94dHJ1c3QubW9kZWwuR2x1dUN1c3RvbVBlcnNvbgogI
 CAgIyAgIHJlcXVlc3RQYXJhbWV0ZXJzIGlzIGphdmEudXRpbC5NYXA8U3RyaW5nLCBTdHJpbmdbXT4KICAgICMgICBjb25maWd1cmF0aW9uQXR0cmlidXRlcyBpcyBqYXZhLnV0aWwuTWFwPFN0cmlu
 ZywgU2ltcGxlQ3VzdG9tUHJvcGVydHk+CiAgICBkZWYgcHJlUmVnaXN0cmF0aW9uKHNlbGYsIHVzZXIsIHJlcXVlc3RQYXJhbWV0ZXJzLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6CiAgICAgICA
 gcHJpbnQgIlVzZXIgcmVnaXN0cmF0aW9uLiBQcmUgbWV0aG9kIgoKICAgICAgICB1c2VyU3RhdHVzID0gR2x1dVN0YXR1cy5BQ1RJVkUKICAgICAgICBpZiBub3Qgc2VsZi5lbmFibGVfdXNlcjoKIC
 AgICAgICAgICAgdXNlclN0YXR1cyA9IEdsdXVTdGF0dXMuSU5BQ1RJVkUKCiAgICAgICAgIyBEaXNhYmxlL0VuYWJsZSByZWdpc3RlcmVkIHVzZXIKICAgICAgICB1c2VyLnNldFN0YXR1cyh1c2VyU
 3RhdHVzKQoKICAgICAgICByZXR1cm4gVHJ1ZQoKICAgICMgVXNlciByZWdpc3RyYXRpb24gcG9zdCBtZXRob2QKICAgICMgICB1c2VyIGlzIG9yZy5nbHV1Lm94dHJ1c3QubW9kZWwuR2x1dUN1c3Rv
 bVBlcnNvbgogICAgIyAgIHJlcXVlc3RQYXJhbWV0ZXJzIGlzIGphdmEudXRpbC5NYXA8U3RyaW5nLCBTdHJpbmdbXT4KICAgICMgICBjb25maWd1cmF0aW9uQXR0cmlidXRlcyBpcyBqYXZhLnV0aWw
 uTWFwPFN0cmluZywgU2ltcGxlQ3VzdG9tUHJvcGVydHk+CiAgICBkZWYgcG9zdFJlZ2lzdHJhdGlvbihzZWxmLCB1c2VyLCByZXF1ZXN0UGFyYW1ldGVycywgY29uZmlndXJhdGlvbkF0dHJpYnV0ZX
 MpOgogICAgICAgIHByaW50ICJVc2VyIHJlZ2lzdHJhdGlvbi4gUG9zdCBtZXRob2QiCgogICAgICAgIHJldHVybiBUcnVlCgogICAgZGVmIGdldEFwaVZlcnNpb24oc2VsZik6CiAgICAgICAgcmV0d
 XJuIDEK
oxScriptType: user_registration
programmingLanguage: python

dn: inum=%(inumOrg)s!0011!7523.8F2D,ou=scripts,o=%(inumOrg)s,o=gluu
objectClass: top
objectClass: oxCustomScript
description: Google+ authentication module
displayName: gplus
gluuStatus: false
inum: %(inumOrg)s!0011!7523.8F2D
oxConfigurationProperty: {"value1":"gplus_client_secrets_file","value2":"/etc/certs/gplus_client_secrets.json","description":""}
oxConfigurationProperty: {"value1":"gplus_deployment_type","value2":"enroll","description":""}
oxConfigurationProperty: {"value1":"gplus_remote_attributes_list","value2":"email, email, name, family_name, given_name, locale","description":""}
oxConfigurationProperty: {"value1":"gplus_local_attributes_list","value2":"uid, mail, givenName, sn, cn, preferredLanguage","description":""}
oxLevel: 40
oxModuleProperty: {"value1":"usage_type","value2":"interactive","description":""}
oxModuleProperty: {"value1":"location_type","value2":"ldap","description":""}
oxRevision: 1
oxScript:: IyBveEF1dGggaXMgYXZhaWxhYmxlIHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoMjAwOCkuIFNlZSBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUIGZvciBmdWxsIHRleHQuC
 iMgQ29weXJpZ2h0IChjKSAyMDE2LCBHbHV1CiMKIyBBdXRob3I6IFl1cml5IE1vdmNoYW4KIwoKZnJvbSBvcmcuamJvc3Muc2VhbS5jb250ZXh0cyBpbXBvcnQgQ29udGV4dCwgQ29udGV4dHMKZnJv
 bSBvcmcuamJvc3Muc2VhbS5zZWN1cml0eSBpbXBvcnQgSWRlbnRpdHkKZnJvbSBqYXZheC5mYWNlcy5jb250ZXh0IGltcG9ydCBGYWNlc0NvbnRleHQKZnJvbSBvcmcueGRpLm1vZGVsLmN1c3RvbS5
 zY3JpcHQudHlwZS5hdXRoIGltcG9ydCBQZXJzb25BdXRoZW50aWNhdGlvblR5cGUKZnJvbSBvcmcueGRpLm94YXV0aC5zZXJ2aWNlIGltcG9ydCBVc2VyU2VydmljZSwgQ2xpZW50U2VydmljZSwgQX
 V0aGVudGljYXRpb25TZXJ2aWNlCmZyb20gb3JnLnhkaS51dGlsIGltcG9ydCBTdHJpbmdIZWxwZXIsIEFycmF5SGVscGVyCmZyb20gamF2YS51dGlsIGltcG9ydCBBcnJheXMsIEFycmF5TGlzdCwgS
 GFzaE1hcCwgSWRlbnRpdHlIYXNoTWFwCmZyb20gb3JnLnhkaS5veGF1dGgubW9kZWwuY29tbW9uIGltcG9ydCBVc2VyCmZyb20gb3JnLnhkaS5veGF1dGguY2xpZW50IGltcG9ydCBUb2tlbkNsaWVu
 dCwgVG9rZW5SZXF1ZXN0LCBVc2VySW5mb0NsaWVudApmcm9tIG9yZy54ZGkub3hhdXRoLm1vZGVsLmNvbW1vbiBpbXBvcnQgR3JhbnRUeXBlLCBBdXRoZW50aWNhdGlvbk1ldGhvZApmcm9tIG9yZy5
 4ZGkub3hhdXRoLm1vZGVsLmp3dCBpbXBvcnQgSnd0LCBKd3RDbGFpbU5hbWUKCmltcG9ydCBqYXZhCgp0cnk6CiAgICBpbXBvcnQganNvbgpleGNlcHQgSW1wb3J0RXJyb3I6CiAgICBpbXBvcnQgc2
 ltcGxlanNvbiBhcyBqc29uCgpjbGFzcyBQZXJzb25BdXRoZW50aWNhdGlvbihQZXJzb25BdXRoZW50aWNhdGlvblR5cGUpOgogICAgZGVmIF9faW5pdF9fKHNlbGYsIGN1cnJlbnRUaW1lTWlsbGlzK
 ToKICAgICAgICBzZWxmLmN1cnJlbnRUaW1lTWlsbGlzID0gY3VycmVudFRpbWVNaWxsaXMKCiAgICBkZWYgaW5pdChzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6CiAgICAgICAgcHJpbnQg
 Ikdvb2dsZSsgSW5pdGlhbGl6YXRpb24iCgogICAgICAgIGlmIChub3QgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuY29udGFpbnNLZXkoImdwbHVzX2NsaWVudF9zZWNyZXRzX2ZpbGUiKSk6CiAgICA
 gICAgICAgIHByaW50ICJHb29nbGUrIEluaXRpYWxpemF0aW9uLiBUaGUgcHJvcGVydHkgZ3BsdXNfY2xpZW50X3NlY3JldHNfZmlsZSBpcyBlbXB0eSIKICAgICAgICAgICAgcmV0dXJuIEZhbHNlCi
 AgICAgICAgICAgIAogICAgICAgIGNsaWVudFNlY3JldHNGaWxlID0gY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuZ2V0KCJncGx1c19jbGllbnRfc2VjcmV0c19maWxlIikuZ2V0VmFsdWUyKCkKICAgI
 CAgICBzZWxmLmNsaWVudFNlY3JldHMgPSBzZWxmLmxvYWRDbGllbnRTZWNyZXRzKGNsaWVudFNlY3JldHNGaWxlKQogICAgICAgIGlmIChzZWxmLmNsaWVudFNlY3JldHMgPT0gTm9uZSk6CiAgICAg
 ICAgICAgIHByaW50ICJHb29nbGUrIEluaXRpYWxpemF0aW9uLiBGaWxlIHdpdGggR29vZ2xlKyBjbGllbnQgc2VjcmV0cyBzaG91bGQgYmUgbm90IGVtcHR5IgogICAgICAgICAgICByZXR1cm4gRmF
 sc2UKCiAgICAgICAgc2VsZi5hdHRyaWJ1dGVzTWFwcGluZyA9IE5vbmUKICAgICAgICBpZiAoY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuY29udGFpbnNLZXkoImdwbHVzX3JlbW90ZV9hdHRyaWJ1dG
 VzX2xpc3QiKSBhbmQKICAgICAgICAgICAgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuY29udGFpbnNLZXkoImdwbHVzX2xvY2FsX2F0dHJpYnV0ZXNfbGlzdCIpKToKCiAgICAgICAgICAgIHJlbW90Z
 UF0dHJpYnV0ZXNMaXN0ID0gY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuZ2V0KCJncGx1c19yZW1vdGVfYXR0cmlidXRlc19saXN0IikuZ2V0VmFsdWUyKCkKICAgICAgICAgICAgaWYgKFN0cmluZ0hl
 bHBlci5pc0VtcHR5KHJlbW90ZUF0dHJpYnV0ZXNMaXN0KSk6CiAgICAgICAgICAgICAgICBwcmludCAiR29vZ2xlKyBJbml0aWFsaXphdGlvbi4gVGhlIHByb3BlcnR5IGdwbHVzX3JlbW90ZV9hdHR
 yaWJ1dGVzX2xpc3QgaXMgZW1wdHkiCiAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UgICAgCgogICAgICAgICAgICBsb2NhbEF0dHJpYnV0ZXNMaXN0ID0gY29uZmlndXJhdGlvbkF0dHJpYnV0ZX
 MuZ2V0KCJncGx1c19sb2NhbF9hdHRyaWJ1dGVzX2xpc3QiKS5nZXRWYWx1ZTIoKQogICAgICAgICAgICBpZiAoU3RyaW5nSGVscGVyLmlzRW1wdHkobG9jYWxBdHRyaWJ1dGVzTGlzdCkpOgogICAgI
 CAgICAgICAgICAgcHJpbnQgIkdvb2dsZSsgSW5pdGlhbGl6YXRpb24uIFRoZSBwcm9wZXJ0eSBncGx1c19sb2NhbF9hdHRyaWJ1dGVzX2xpc3QgaXMgZW1wdHkiCiAgICAgICAgICAgICAgICByZXR1
 cm4gRmFsc2UKCiAgICAgICAgICAgIHNlbGYuYXR0cmlidXRlc01hcHBpbmcgPSBzZWxmLnByZXBhcmVBdHRyaWJ1dGVzTWFwcGluZyhyZW1vdGVBdHRyaWJ1dGVzTGlzdCwgbG9jYWxBdHRyaWJ1dGV
 zTGlzdCkKICAgICAgICAgICAgaWYgKHNlbGYuYXR0cmlidXRlc01hcHBpbmcgPT0gTm9uZSk6CiAgICAgICAgICAgICAgICBwcmludCAiR29vZ2xlKyBJbml0aWFsaXphdGlvbi4gVGhlIGF0dHJpYn
 V0ZXMgbWFwcGluZyBpc24ndCB2YWxpZCIKICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICBzZWxmLmV4dGVuc2lvbk1vZHVsZSA9IE5vbmUKICAgICAgICBpZiAoY29uZmlndXJhd
 GlvbkF0dHJpYnV0ZXMuY29udGFpbnNLZXkoImV4dGVuc2lvbl9tb2R1bGUiKSk6CiAgICAgICAgICAgIGV4dGVuc2lvbk1vZHVsZU5hbWUgPSBjb25maWd1cmF0aW9uQXR0cmlidXRlcy5nZXQoImV4
 dGVuc2lvbl9tb2R1bGUiKS5nZXRWYWx1ZTIoKQogICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICBzZWxmLmV4dGVuc2lvbk1vZHVsZSA9IF9faW1wb3J0X18oZXh0ZW5zaW9uTW9kdWxlTmF
 tZSkKICAgICAgICAgICAgICAgIGV4dGVuc2lvbk1vZHVsZUluaXRSZXN1bHQgPSBzZWxmLmV4dGVuc2lvbk1vZHVsZS5pbml0KGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKQogICAgICAgICAgICAgIC
 AgaWYgKG5vdCBleHRlbnNpb25Nb2R1bGVJbml0UmVzdWx0KToKICAgICAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKICAgICAgICAgICAgZXhjZXB0IEltcG9ydEVycm9yLCBleDoKICAgICAgI
 CAgICAgICAgIHByaW50ICJHb29nbGUrIEluaXRpYWxpemF0aW9uLiBGYWlsZWQgdG8gbG9hZCBncGx1c19leHRlbnNpb25fbW9kdWxlOiIsIGV4dGVuc2lvbk1vZHVsZU5hbWUKICAgICAgICAgICAg
 ICAgIHByaW50ICJHb29nbGUrIEluaXRpYWxpemF0aW9uLiBVbmV4cGVjdGVkIGVycm9yOiIsIGV4CiAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgcHJpbnQgIkdvb2dsZSsgSW5
 pdGlhbGl6ZWQgc3VjY2Vzc2Z1bGx5IgogICAgICAgIHJldHVybiBUcnVlICAgCgogICAgZGVmIGRlc3Ryb3koc2VsZiwgYXV0aENvbmZpZ3VyYXRpb24pOgogICAgICAgIHByaW50ICJHb29nbGUrIE
 Rlc3Ryb3kiCiAgICAgICAgcHJpbnQgIkdvb2dsZSsgRGVzdHJveWVkIHN1Y2Nlc3NmdWxseSIKCiAgICBkZWYgZ2V0QXBpVmVyc2lvbihzZWxmKToKICAgICAgICByZXR1cm4gMQoKICAgIGRlZiBpc
 1ZhbGlkQXV0aGVudGljYXRpb25NZXRob2Qoc2VsZiwgdXNhZ2VUeXBlLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6CiAgICAgICAgcmV0dXJuIFRydWUKCiAgICBkZWYgZ2V0QWx0ZXJuYXRpdmVB
 dXRoZW50aWNhdGlvbk1ldGhvZChzZWxmLCB1c2FnZVR5cGUsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKToKICAgICAgICByZXR1cm4gTm9uZQoKICAgIGRlZiBhdXRoZW50aWNhdGUoc2VsZiwgY29
 uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIHJlcXVlc3RQYXJhbWV0ZXJzLCBzdGVwKToKICAgICAgICBjb250ZXh0ID0gQ29udGV4dHMuZ2V0RXZlbnRDb250ZXh0KCkKICAgICAgICBhdXRoZW50aWNhdG
 lvblNlcnZpY2UgPSBBdXRoZW50aWNhdGlvblNlcnZpY2UuaW5zdGFuY2UoKQogICAgICAgIHVzZXJTZXJ2aWNlID0gVXNlclNlcnZpY2UuaW5zdGFuY2UoKQoKICAgICAgICBtYXBVc2VyRGVwbG95b
 WVudCA9IEZhbHNlCiAgICAgICAgZW5yb2xsVXNlckRlcGxveW1lbnQgPSBGYWxzZQogICAgICAgIGlmIChjb25maWd1cmF0aW9uQXR0cmlidXRlcy5jb250YWluc0tleSgiZ3BsdXNfZGVwbG95bWVu
 dF90eXBlIikpOgogICAgICAgICAgICBkZXBsb3ltZW50VHlwZSA9IFN0cmluZ0hlbHBlci50b0xvd2VyQ2FzZShjb25maWd1cmF0aW9uQXR0cmlidXRlcy5nZXQoImdwbHVzX2RlcGxveW1lbnRfdHl
 wZSIpLmdldFZhbHVlMigpKQogICAgICAgICAgICAKICAgICAgICAgICAgaWYgKFN0cmluZ0hlbHBlci5lcXVhbHNJZ25vcmVDYXNlKGRlcGxveW1lbnRUeXBlLCAibWFwIikpOgogICAgICAgICAgIC
 AgICAgbWFwVXNlckRlcGxveW1lbnQgPSBUcnVlCiAgICAgICAgICAgIGlmIChTdHJpbmdIZWxwZXIuZXF1YWxzSWdub3JlQ2FzZShkZXBsb3ltZW50VHlwZSwgImVucm9sbCIpKToKICAgICAgICAgI
 CAgICAgIGVucm9sbFVzZXJEZXBsb3ltZW50ID0gVHJ1ZQoKICAgICAgICBpZiAoc3RlcCA9PSAxKToKICAgICAgICAgICAgcHJpbnQgIkdvb2dsZSsgQXV0aGVudGljYXRlIGZvciBzdGVwIDEiCiAK
 ICAgICAgICAgICAgZ3BsdXNBdXRoQ29kZUFycmF5ID0gcmVxdWVzdFBhcmFtZXRlcnMuZ2V0KCJncGx1c19hdXRoX2NvZGUiKQogICAgICAgICAgICBncGx1c0F1dGhDb2RlID0gZ3BsdXNBdXRoQ29
 kZUFycmF5WzBdCgogICAgICAgICAgICAjIENoZWNrIGlmIHVzZXIgdXNlcyBiYXNpYyBtZXRob2QgdG8gbG9nIGluCiAgICAgICAgICAgIHVzZUJhc2ljQXV0aCA9IEZhbHNlCiAgICAgICAgICAgIG
 lmIChTdHJpbmdIZWxwZXIuaXNFbXB0eVN0cmluZyhncGx1c0F1dGhDb2RlKSk6CiAgICAgICAgICAgICAgICB1c2VCYXNpY0F1dGggPSBUcnVlCgogICAgICAgICAgICAjIFVzZSBiYXNpYyBtZXRob
 2QgdG8gbG9nIGluCiAgICAgICAgICAgIGlmICh1c2VCYXNpY0F1dGgpOgogICAgICAgICAgICAgICAgcHJpbnQgIkdvb2dsZSsgQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIEJhc2ljIGF1dGhlbnRp
 Y2F0aW9uIgogICAgICAgIAogICAgICAgICAgICAgICAgY29udGV4dC5zZXQoImdwbHVzX2NvdW50X2xvZ2luX3N0ZXBzIiwgMSkKICAgICAgICAKICAgICAgICAgICAgICAgIGNyZWRlbnRpYWxzID0
 gSWRlbnRpdHkuaW5zdGFuY2UoKS5nZXRDcmVkZW50aWFscygpCiAgICAgICAgICAgICAgICB1c2VyTmFtZSA9IGNyZWRlbnRpYWxzLmdldFVzZXJuYW1lKCkKICAgICAgICAgICAgICAgIHVzZXJQYX
 Nzd29yZCA9IGNyZWRlbnRpYWxzLmdldFBhc3N3b3JkKCkKICAgICAgICAKICAgICAgICAgICAgICAgIGxvZ2dlZEluID0gRmFsc2UKICAgICAgICAgICAgICAgIGlmIChTdHJpbmdIZWxwZXIuaXNOb
 3RFbXB0eVN0cmluZyh1c2VyTmFtZSkgYW5kIFN0cmluZ0hlbHBlci5pc05vdEVtcHR5U3RyaW5nKHVzZXJQYXNzd29yZCkpOgogICAgICAgICAgICAgICAgICAgIHVzZXJTZXJ2aWNlID0gVXNlclNl
 cnZpY2UuaW5zdGFuY2UoKQogICAgICAgICAgICAgICAgICAgIGxvZ2dlZEluID0gdXNlclNlcnZpY2UuYXV0aGVudGljYXRlKHVzZXJOYW1lLCB1c2VyUGFzc3dvcmQpCiAgICAgICAgCiAgICAgICA
 gICAgICAgICBpZiAobm90IGxvZ2dlZEluKToKICAgICAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKICAgICAgICAKICAgICAgICAgICAgICAgIHJldHVybiBUcnVlCgogICAgICAgICAgICAjIF
 VzZSBHb29nbGUrIG1ldGhvZCB0byBsb2cgaW4KICAgICAgICAgICAgcHJpbnQgIkdvb2dsZSsgQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIGdwbHVzQXV0aENvZGU6IiwgZ3BsdXNBdXRoQ29kZQoKI
 CAgICAgICAgICAgY3VycmVudENsaWVudFNlY3JldHMgPSBzZWxmLmdldEN1cnJlbnRDbGllbnRTZWNyZXRzKHNlbGYuY2xpZW50U2VjcmV0cywgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIHJlcXVl
 c3RQYXJhbWV0ZXJzKQogICAgICAgICAgICBpZiAoY3VycmVudENsaWVudFNlY3JldHMgPT0gTm9uZSk6CiAgICAgICAgICAgICAgICBwcmludCAiR29vZ2xlKyBBdXRoZW50aWNhdGUgZm9yIHN0ZXA
 gMS4gQ2xpZW50IHNlY3JldHMgY29uZmlndXJhdGlvbiBpcyBpbnZhbGlkIgogICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlCiAgICAgICAgICAgIAogICAgICAgICAgICBwcmludCAiR29vZ2xlKy
 BBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gQXR0ZW1wdGluZyB0byBnZXRzIHRva2VucyIKICAgICAgICAgICAgdG9rZW5SZXNwb25zZSA9IHNlbGYuZ2V0VG9rZW5zQnlDb2RlKHNlbGYuY2xpZW50U
 2VjcmV0cywgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIGdwbHVzQXV0aENvZGUpOwogICAgICAgICAgICBpZiAoKHRva2VuUmVzcG9uc2UgPT0gTm9uZSkgb3IgKHRva2VuUmVzcG9uc2UuZ2V0SWRU
 b2tlbigpID09IE5vbmUpIG9yICh0b2tlblJlc3BvbnNlLmdldEFjY2Vzc1Rva2VuKCkgPT0gTm9uZSkpOgogICAgICAgICAgICAgICAgcHJpbnQgIkdvb2dsZSsgQXV0aGVudGljYXRlIGZvciBzdGV
 wIDEuIEZhaWxlZCB0byBnZXQgdG9rZW5zIgogICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBwcmludCAiR29vZ2xlKyBBdXRoZW50aW
 NhdGUgZm9yIHN0ZXAgMS4gU3VjY2Vzc2Z1bGx5IGdldHMgdG9rZW5zIgoKICAgICAgICAgICAgand0ID0gSnd0LnBhcnNlKHRva2VuUmVzcG9uc2UuZ2V0SWRUb2tlbigpKQogICAgICAgICAgICAjI
 FRPRE86IFZhbGlkYXRlIElEIFRva2VuIFNpZ25hdHVyZSAgCgogICAgICAgICAgICBncGx1c1VzZXJVaWQgPSBqd3QuZ2V0Q2xhaW1zKCkuZ2V0Q2xhaW1Bc1N0cmluZyhKd3RDbGFpbU5hbWUuU1VC
 SkVDVF9JREVOVElGSUVSKTsKICAgICAgICAgICAgcHJpbnQgIkdvb2dsZSsgQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIEZvdW5kIEdvb2dsZSB1c2VyIElEIGluIHRoZSBJRCB0b2tlbjogIiwgZ3B
 sdXNVc2VyVWlkCiAgICAgICAgICAgIAogICAgICAgICAgICBpZiAobWFwVXNlckRlcGxveW1lbnQpOgogICAgICAgICAgICAgICAgIyBVc2UgbWFwcGluZyB0byBsb2NhbCBJRFAgdXNlcgogICAgIC
 AgICAgICAgICAgcHJpbnQgIkdvb2dsZSsgQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIEF0dGVtcHRpbmcgdG8gZmluZCB1c2VyIGJ5IG94RXh0ZXJuYWxVaWQ6IGdwbHVzOiIsIGdwbHVzVXNlclVpZ
 AoKICAgICAgICAgICAgICAgICMgQ2hlY2sgaWYgdGhlcmUgaXMgdXNlciB3aXRoIHNwZWNpZmllZCBncGx1c1VzZXJVaWQKICAgICAgICAgICAgICAgIGZvdW5kVXNlciA9IHVzZXJTZXJ2aWNlLmdl
 dFVzZXJCeUF0dHJpYnV0ZSgib3hFeHRlcm5hbFVpZCIsICJncGx1czoiICsgZ3BsdXNVc2VyVWlkKQoKICAgICAgICAgICAgICAgIGlmIChmb3VuZFVzZXIgPT0gTm9uZSk6CiAgICAgICAgICAgICA
 gICAgICAgcHJpbnQgIkdvb2dsZSsgQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIEZhaWxlZCB0byBmaW5kIHVzZXIiCiAgICAgICAgICAgICAgICAgICAgcHJpbnQgIkdvb2dsZSsgQXV0aGVudGljYX
 RlIGZvciBzdGVwIDEuIFNldHRpbmcgY291bnQgc3RlcHMgdG8gMiIKICAgICAgICAgICAgICAgICAgICBjb250ZXh0LnNldCgiZ3BsdXNfY291bnRfbG9naW5fc3RlcHMiLCAyKQogICAgICAgICAgI
 CAgICAgICAgIGNvbnRleHQuc2V0KCJncGx1c191c2VyX3VpZCIsIGdwbHVzVXNlclVpZCkKICAgICAgICAgICAgICAgICAgICByZXR1cm4gVHJ1ZQoKICAgICAgICAgICAgICAgIGZvdW5kVXNlck5h
 bWUgPSBmb3VuZFVzZXIuZ2V0VXNlcklkKCkKICAgICAgICAgICAgICAgIHByaW50ICJHb29nbGUrIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxLiBmb3VuZFVzZXJOYW1lOiIsIGZvdW5kVXNlck5hbWU
 KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdXNlckF1dGhlbnRpY2F0ZWQgPSBhdXRoZW50aWNhdGlvblNlcnZpY2UuYXV0aGVudGljYXRlKGZvdW5kVXNlck5hbWUpCiAgICAgICAgIC
 AgICAgICBpZiAodXNlckF1dGhlbnRpY2F0ZWQgPT0gRmFsc2UpOgogICAgICAgICAgICAgICAgICAgIHByaW50ICJHb29nbGUrIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxLiBGYWlsZWQgdG8gYXV0a
 GVudGljYXRlIHVzZXIiCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgcHJpbnQgIkdvb2dsZSsgQXV0aGVudGljYXRlIGZvciBzdGVw
 IDEuIFNldHRpbmcgY291bnQgc3RlcHMgdG8gMSIKICAgICAgICAgICAgICAgIGNvbnRleHQuc2V0KCJncGx1c19jb3VudF9sb2dpbl9zdGVwcyIsIDEpCgogICAgICAgICAgICAgICAgcG9zdExvZ2l
 uUmVzdWx0ID0gc2VsZi5leHRlbnNpb25Qb3N0TG9naW4oY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIGZvdW5kVXNlcikKICAgICAgICAgICAgICAgIHByaW50ICJHb29nbGUrIEF1dGhlbnRpY2F0ZS
 Bmb3Igc3RlcCAxLiBwb3N0TG9naW5SZXN1bHQ6IiwgcG9zdExvZ2luUmVzdWx0CgogICAgICAgICAgICAgICAgcmV0dXJuIHBvc3RMb2dpblJlc3VsdAogICAgICAgICAgICBlbGlmIChlbnJvbGxVc
 2VyRGVwbG95bWVudCk6CiAgICAgICAgICAgICAgICAjIFVzZSBhdXRvIGVucm9sbG1lbnQgdG8gbG9jYWwgSURQCiAgICAgICAgICAgICAgICBwcmludCAiR29vZ2xlKyBBdXRoZW50aWNhdGUgZm9y
 IHN0ZXAgMS4gQXR0ZW1wdGluZyB0byBmaW5kIHVzZXIgYnkgb3hFeHRlcm5hbFVpZDogZ3BsdXM6IiwgZ3BsdXNVc2VyVWlkCiAKICAgICAgICAgICAgICAgICMgQ2hlY2sgaWYgdGhlcmUgaXMgdXN
 lciB3aXRoIHNwZWNpZmllZCBncGx1c1VzZXJVaWQKICAgICAgICAgICAgICAgIGZvdW5kVXNlciA9IHVzZXJTZXJ2aWNlLmdldFVzZXJCeUF0dHJpYnV0ZSgib3hFeHRlcm5hbFVpZCIsICJncGx1cz
 oiICsgZ3BsdXNVc2VyVWlkKQogCiAgICAgICAgICAgICAgICBpZiAoZm91bmRVc2VyID09IE5vbmUpOgogICAgICAgICAgICAgICAgICAgICMgQXV0byB1c2VyIGVucm9sbGVtbnQKICAgICAgICAgI
 CAgICAgICAgICBwcmludCAiR29vZ2xlKyBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gVGhlcmUgaXMgbm8gdXNlciBpbiBMREFQLiBBZGRpbmcgdXNlciB0byBsb2NhbCBMREFQIgoKICAgICAgICAg
 ICAgICAgICAgICBwcmludCAiR29vZ2xlKyBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gQXR0ZW1wdGluZyB0byBnZXRzIHVzZXIgaW5mbyIKICAgICAgICAgICAgICAgICAgICB1c2VySW5mb1Jlc3B
 vbnNlID0gc2VsZi5nZXRVc2VySW5mbyhjdXJyZW50Q2xpZW50U2VjcmV0cywgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIHRva2VuUmVzcG9uc2UuZ2V0QWNjZXNzVG9rZW4oKSkKICAgICAgICAgIC
 AgICAgICAgICBpZiAoKHVzZXJJbmZvUmVzcG9uc2UgPT0gTm9uZSkgb3IgKHVzZXJJbmZvUmVzcG9uc2UuZ2V0Q2xhaW1zKCkuc2l6ZSgpID09IDApKToKICAgICAgICAgICAgICAgICAgICAgICAgc
 HJpbnQgIkdvb2dsZSsgQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIEZhaWxlZCB0byBnZXQgdXNlciBpbmZvIgogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKICAgICAgICAgICAg
 ICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgICAgICBwcmludCAiR29vZ2xlKyBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gU3VjY2Vzc2Z1bGx5IGdldHMgdXNlciBpbmZvIgogICAgICA
 gICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIGdwbHVzUmVzcG9uc2VBdHRyaWJ1dGVzID0gdXNlckluZm9SZXNwb25zZS5nZXRDbGFpbXMoKQogCiAgICAgICAgICAgICAgICAgICAgIy
 BDb252ZXJ0IEdvb2dsZSsgdXNlciBjbGFpbXMgdG8gbG92ZXIgY2FzZQogICAgICAgICAgICAgICAgICAgIGdwbHVzUmVzcG9uc2VOb3JtYWxpemVkQXR0cmlidXRlcyA9IEhhc2hNYXAoKQogICAgI
 CAgICAgICAgICAgICAgIGZvciBncGx1c1Jlc3BvbnNlQXR0cmlidXRlRW50cnkgaW4gZ3BsdXNSZXNwb25zZUF0dHJpYnV0ZXMuZW50cnlTZXQoKToKICAgICAgICAgICAgICAgICAgICAgICAgZ3Bs
 dXNSZXNwb25zZU5vcm1hbGl6ZWRBdHRyaWJ1dGVzLnB1dCgKICAgICAgICAgICAgICAgICAgICAgICAgICAgIFN0cmluZ0hlbHBlci50b0xvd2VyQ2FzZShncGx1c1Jlc3BvbnNlQXR0cmlidXRlRW5
 0cnkuZ2V0S2V5KCkpLCBncGx1c1Jlc3BvbnNlQXR0cmlidXRlRW50cnkuZ2V0VmFsdWUoKSkKIAogICAgICAgICAgICAgICAgICAgIGN1cnJlbnRBdHRyaWJ1dGVzTWFwcGluZyA9IHNlbGYuZ2V0Q3
 VycmVudEF0dHJpYnV0ZXNNYXBwaW5nKHNlbGYuYXR0cmlidXRlc01hcHBpbmcsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCByZXF1ZXN0UGFyYW1ldGVycykKICAgICAgICAgICAgICAgICAgICBwc
 mludCAiR29vZ2xlKyBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gVXNpbmcgbmV4dCBhdHRyaWJ1dGVzIG1hcHBpbmciLCBjdXJyZW50QXR0cmlidXRlc01hcHBpbmcKIAogICAgICAgICAgICAgICAg
 ICAgIG5ld1VzZXIgPSBVc2VyKCkKICAgICAgICAgICAgICAgICAgICBmb3IgYXR0cmlidXRlc01hcHBpbmdFbnRyeSBpbiBjdXJyZW50QXR0cmlidXRlc01hcHBpbmcuZW50cnlTZXQoKToKICAgICA
 gICAgICAgICAgICAgICAgICAgcmVtb3RlQXR0cmlidXRlID0gYXR0cmlidXRlc01hcHBpbmdFbnRyeS5nZXRLZXkoKQogICAgICAgICAgICAgICAgICAgICAgICBsb2NhbEF0dHJpYnV0ZSA9IGF0dH
 JpYnV0ZXNNYXBwaW5nRW50cnkuZ2V0VmFsdWUoKQogCiAgICAgICAgICAgICAgICAgICAgICAgIGxvY2FsQXR0cmlidXRlVmFsdWUgPSBncGx1c1Jlc3BvbnNlTm9ybWFsaXplZEF0dHJpYnV0ZXMuZ
 2V0KHJlbW90ZUF0dHJpYnV0ZSkKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGxvY2FsQXR0cmlidXRlICE9IE5vbmUpOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3VXNlci5zZXRB
 dHRyaWJ1dGUobG9jYWxBdHRyaWJ1dGUsIGxvY2FsQXR0cmlidXRlVmFsdWUpCiAKICAgICAgICAgICAgICAgICAgICBpZiAobmV3VXNlci5nZXRBdHRyaWJ1dGUoInNuIikgPT0gTm9uZSk6CiAgICA
 gICAgICAgICAgICAgICAgICAgIG5ld1VzZXIuc2V0QXR0cmlidXRlKCJzbiIsIGdwbHVzVXNlclVpZCkKIAogICAgICAgICAgICAgICAgICAgIGlmIChuZXdVc2VyLmdldEF0dHJpYnV0ZSgiY24iKS
 A9PSBOb25lKToKICAgICAgICAgICAgICAgICAgICAgICAgbmV3VXNlci5zZXRBdHRyaWJ1dGUoImNuIiwgZ3BsdXNVc2VyVWlkKQoKICAgICAgICAgICAgICAgICAgICBuZXdVc2VyLnNldEF0dHJpY
 nV0ZSgib3hFeHRlcm5hbFVpZCIsICJncGx1czoiICsgZ3BsdXNVc2VyVWlkKQogICAgICAgICAgICAgICAgICAgIHByaW50ICJHb29nbGUrIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxLiBBdHRlbXB0
 aW5nIHRvIGFkZCB1c2VyIiwgZ3BsdXNVc2VyVWlkLCAiIHdpdGggbmV4dCBhdHRyaWJ1dGVzIiwgbmV3VXNlci5nZXRDdXN0b21BdHRyaWJ1dGVzKCkKIAogICAgICAgICAgICAgICAgICAgIGZvdW5
 kVXNlciA9IHVzZXJTZXJ2aWNlLmFkZFVzZXIobmV3VXNlciwgVHJ1ZSkKICAgICAgICAgICAgICAgICAgICBwcmludCAiR29vZ2xlKyBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gQWRkZWQgbmV3IH
 VzZXIgd2l0aCBVSUQiLCBmb3VuZFVzZXIuZ2V0VXNlcklkKCkKCiAgICAgICAgICAgICAgICBmb3VuZFVzZXJOYW1lID0gZm91bmRVc2VyLmdldFVzZXJJZCgpCiAgICAgICAgICAgICAgICBwcmlud
 CAiR29vZ2xlKyBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gZm91bmRVc2VyTmFtZToiLCBmb3VuZFVzZXJOYW1lCgogICAgICAgICAgICAgICAgdXNlckF1dGhlbnRpY2F0ZWQgPSBhdXRoZW50aWNh
 dGlvblNlcnZpY2UuYXV0aGVudGljYXRlKGZvdW5kVXNlck5hbWUpCiAgICAgICAgICAgICAgICBpZiAodXNlckF1dGhlbnRpY2F0ZWQgPT0gRmFsc2UpOgogICAgICAgICAgICAgICAgICAgIHByaW5
 0ICJHb29nbGUrIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxLiBGYWlsZWQgdG8gYXV0aGVudGljYXRlIHVzZXIiCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgICAgICAgICAgIC
 AgcHJpbnQgIkdvb2dsZSsgQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIFNldHRpbmcgY291bnQgc3RlcHMgdG8gMSIKICAgICAgICAgICAgICAgIGNvbnRleHQuc2V0KCJncGx1c19jb3VudF9sb2dpb
 l9zdGVwcyIsIDEpCgogICAgICAgICAgICAgICAgcG9zdExvZ2luUmVzdWx0ID0gc2VsZi5leHRlbnNpb25Qb3N0TG9naW4oY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIGZvdW5kVXNlcikKICAgICAg
 ICAgICAgICAgIHByaW50ICJHb29nbGUrIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxLiBwb3N0TG9naW5SZXN1bHQ6IiwgcG9zdExvZ2luUmVzdWx0CgogICAgICAgICAgICAgICAgcmV0dXJuIHBvc3R
 Mb2dpblJlc3VsdAogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgIyBDaGVjayBpZiB0aGVyZSBpcyB1c2VyIHdpdGggc3BlY2lmaWVkIGdwbHVzVXNlclVpZAogICAgICAgICAgICAgIC
 AgcHJpbnQgIkdvb2dsZSsgQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIEF0dGVtcHRpbmcgdG8gZmluZCB1c2VyIGJ5IHVpZDoiLCBncGx1c1VzZXJVaWQKCiAgICAgICAgICAgICAgICBmb3VuZFVzZ
 XIgPSB1c2VyU2VydmljZS5nZXRVc2VyKGdwbHVzVXNlclVpZCkKICAgICAgICAgICAgICAgIGlmIChmb3VuZFVzZXIgPT0gTm9uZSk6CiAgICAgICAgICAgICAgICAgICAgcHJpbnQgIkdvb2dsZSsg
 QXV0aGVudGljYXRlIGZvciBzdGVwIDEuIEZhaWxlZCB0byBmaW5kIHVzZXIiCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgICAgICAgICAgICAgZm91bmRVc2VyTmFtZSA9IGZ
 vdW5kVXNlci5nZXRVc2VySWQoKQogICAgICAgICAgICAgICAgcHJpbnQgIkdvb2dsZSsgQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIGZvdW5kVXNlck5hbWU6IiwgZm91bmRVc2VyTmFtZQoKICAgIC
 AgICAgICAgICAgIHVzZXJBdXRoZW50aWNhdGVkID0gYXV0aGVudGljYXRpb25TZXJ2aWNlLmF1dGhlbnRpY2F0ZShmb3VuZFVzZXJOYW1lKQogICAgICAgICAgICAgICAgaWYgKHVzZXJBdXRoZW50a
 WNhdGVkID09IEZhbHNlKToKICAgICAgICAgICAgICAgICAgICBwcmludCAiR29vZ2xlKyBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gRmFpbGVkIHRvIGF1dGhlbnRpY2F0ZSB1c2VyIgogICAgICAg
 ICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgICAgIHByaW50ICJHb29nbGUrIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxLiBTZXR0aW5nIGNvdW50IHN0ZXBzIHRvIDEiCiAgICA
 gICAgICAgICAgICBjb250ZXh0LnNldCgiZ3BsdXNfY291bnRfbG9naW5fc3RlcHMiLCAxKQoKICAgICAgICAgICAgICAgIHBvc3RMb2dpblJlc3VsdCA9IHNlbGYuZXh0ZW5zaW9uUG9zdExvZ2luKG
 NvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCBmb3VuZFVzZXIpCiAgICAgICAgICAgICAgICBwcmludCAiR29vZ2xlKyBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gcG9zdExvZ2luUmVzdWx0OiIsIHBvc
 3RMb2dpblJlc3VsdAoKICAgICAgICAgICAgICAgIHJldHVybiBwb3N0TG9naW5SZXN1bHQKICAgICAgICBlbGlmIChzdGVwID09IDIpOgogICAgICAgICAgICBwcmludCAiR29vZ2xlKyBBdXRoZW50
 aWNhdGUgZm9yIHN0ZXAgMiIKICAgICAgICAgICAgCiAgICAgICAgICAgIHNlc3Npb25BdHRyaWJ1dGVzID0gY29udGV4dC5nZXQoInNlc3Npb25BdHRyaWJ1dGVzIikKICAgICAgICAgICAgaWYgKHN
 lc3Npb25BdHRyaWJ1dGVzID09IE5vbmUpIG9yIG5vdCBzZXNzaW9uQXR0cmlidXRlcy5jb250YWluc0tleSgiZ3BsdXNfdXNlcl91aWQiKToKICAgICAgICAgICAgICAgIHByaW50ICJHb29nbGUrIE
 F1dGhlbnRpY2F0ZSBmb3Igc3RlcCAyLiBncGx1c191c2VyX3VpZCBpcyBlbXB0eSIKICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgZ3BsdXNVc2VyVWlkID0gc2Vzc2lvb
 kF0dHJpYnV0ZXMuZ2V0KCJncGx1c191c2VyX3VpZCIpCiAgICAgICAgICAgIHBhc3NlZF9zdGVwMSA9IFN0cmluZ0hlbHBlci5pc05vdEVtcHR5U3RyaW5nKGdwbHVzVXNlclVpZCkKICAgICAgICAg
 ICAgaWYgKG5vdCBwYXNzZWRfc3RlcDEpOgogICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgICAgICAgICBjcmVkZW50aWFscyA9IElkZW50aXR5Lmluc3RhbmNlKCkuZ2V0Q3JlZGVudGl
 hbHMoKQogICAgICAgICAgICB1c2VyTmFtZSA9IGNyZWRlbnRpYWxzLmdldFVzZXJuYW1lKCkKICAgICAgICAgICAgdXNlclBhc3N3b3JkID0gY3JlZGVudGlhbHMuZ2V0UGFzc3dvcmQoKQoKICAgIC
 AgICAgICAgbG9nZ2VkSW4gPSBGYWxzZQogICAgICAgICAgICBpZiAoU3RyaW5nSGVscGVyLmlzTm90RW1wdHlTdHJpbmcodXNlck5hbWUpIGFuZCBTdHJpbmdIZWxwZXIuaXNOb3RFbXB0eVN0cmluZ
 yh1c2VyUGFzc3dvcmQpKToKICAgICAgICAgICAgICAgIGxvZ2dlZEluID0gdXNlclNlcnZpY2UuYXV0aGVudGljYXRlKHVzZXJOYW1lLCB1c2VyUGFzc3dvcmQpCgogICAgICAgICAgICBpZiAobm90
 IGxvZ2dlZEluKToKICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgIyBDaGVjayBpZiB0aGVyZSBpcyB1c2VyIHdoaWNoIGhhcyBncGx1c1VzZXJVaWQKICAgICAgICAgICA
 gIyBBdm9pZCBtYXBwaW5nIEdvb2dsZSBhY2NvdW50IHRvIG1vcmUgdGhhbiBvbmUgSURQIGFjY291bnQKICAgICAgICAgICAgZm91bmRVc2VyID0gdXNlclNlcnZpY2UuZ2V0VXNlckJ5QXR0cmlidX
 RlKCJveEV4dGVybmFsVWlkIiwgImdwbHVzOiIgKyBncGx1c1VzZXJVaWQpCgogICAgICAgICAgICBpZiAoZm91bmRVc2VyID09IE5vbmUpOgogICAgICAgICAgICAgICAgIyBBZGQgZ3BsdXNVc2VyV
 WlkIHRvIHVzZXIgb25lIGlkIFVJRHMKICAgICAgICAgICAgICAgIGZvdW5kVXNlciA9IHVzZXJTZXJ2aWNlLmFkZFVzZXJBdHRyaWJ1dGUodXNlck5hbWUsICJveEV4dGVybmFsVWlkIiwgImdwbHVz
 OiIgKyBncGx1c1VzZXJVaWQpCiAgICAgICAgICAgICAgICBpZiAoZm91bmRVc2VyID09IE5vbmUpOgogICAgICAgICAgICAgICAgICAgIHByaW50ICJHb29nbGUrIEF1dGhlbnRpY2F0ZSBmb3Igc3R
 lcCAyLiBGYWlsZWQgdG8gdXBkYXRlIGN1cnJlbnQgdXNlciIKICAgICAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgICAgICAgICBwb3N0TG9naW5SZXN1bHQgPSBzZWxmLmV4dG
 Vuc2lvblBvc3RMb2dpbihjb25maWd1cmF0aW9uQXR0cmlidXRlcywgZm91bmRVc2VyKQogICAgICAgICAgICAgICAgcHJpbnQgIkdvb2dsZSsgQXV0aGVudGljYXRlIGZvciBzdGVwIDIuIHBvc3RMb
 2dpblJlc3VsdDoiLCBwb3N0TG9naW5SZXN1bHQKCiAgICAgICAgICAgICAgICByZXR1cm4gcG9zdExvZ2luUmVzdWx0CiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBmb3VuZFVzZXJO
 YW1lID0gZm91bmRVc2VyLmdldFVzZXJJZCgpCiAgICAgICAgICAgICAgICBwcmludCAiR29vZ2xlKyBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMi4gZm91bmRVc2VyTmFtZToiLCBmb3VuZFVzZXJOYW1
 lCiAgICAKICAgICAgICAgICAgICAgIGlmIFN0cmluZ0hlbHBlci5lcXVhbHModXNlck5hbWUsIGZvdW5kVXNlck5hbWUpOgogICAgICAgICAgICAgICAgICAgIHBvc3RMb2dpblJlc3VsdCA9IHNlbG
 YuZXh0ZW5zaW9uUG9zdExvZ2luKGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCBmb3VuZFVzZXIpCiAgICAgICAgICAgICAgICAgICAgcHJpbnQgIkdvb2dsZSsgQXV0aGVudGljYXRlIGZvciBzdGVwI
 DIuIHBvc3RMb2dpblJlc3VsdDoiLCBwb3N0TG9naW5SZXN1bHQKICAgIAogICAgICAgICAgICAgICAgICAgIHJldHVybiBwb3N0TG9naW5SZXN1bHQKICAgICAgICAKICAgICAgICAgICAgcmV0dXJu
 IEZhbHNlCiAgICAgICAgZWxzZToKICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgZGVmIHByZXBhcmVGb3JTdGVwKHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCByZXF1ZXN0UGFyYW1
 ldGVycywgc3RlcCk6CiAgICAgICAgY29udGV4dCA9IENvbnRleHRzLmdldEV2ZW50Q29udGV4dCgpCiAgICAgICAgYXV0aGVudGljYXRpb25TZXJ2aWNlID0gQXV0aGVudGljYXRpb25TZXJ2aWNlLm
 luc3RhbmNlKCkKCiAgICAgICAgaWYgKHN0ZXAgPT0gMSk6CiAgICAgICAgICAgIHByaW50ICJHb29nbGUrIFByZXBhcmUgZm9yIHN0ZXAgMSIKICAgICAgICAgICAgCiAgICAgICAgICAgIGN1cnJlb
 nRDbGllbnRTZWNyZXRzID0gc2VsZi5nZXRDdXJyZW50Q2xpZW50U2VjcmV0cyhzZWxmLmNsaWVudFNlY3JldHMsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCByZXF1ZXN0UGFyYW1ldGVycykKICAg
 ICAgICAgICAgaWYgKGN1cnJlbnRDbGllbnRTZWNyZXRzID09IE5vbmUpOgogICAgICAgICAgICAgICAgcHJpbnQgIkdvb2dsZSsgUHJlcGFyZSBmb3Igc3RlcCAxLiBHb29nbGUrIGNsaWVudCBjb25
 maWd1cmF0aW9uIGlzIGludmFsaWQiCiAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKICAgICAgICAgICAgCiAgICAgICAgICAgIGNvbnRleHQuc2V0KCJncGx1c19jbGllbnRfaWQiLCBjdXJyZW
 50Q2xpZW50U2VjcmV0c1sid2ViIl1bImNsaWVudF9pZCJdKQogICAgICAgICAgICBjb250ZXh0LnNldCgiZ3BsdXNfY2xpZW50X3NlY3JldCIsIGN1cnJlbnRDbGllbnRTZWNyZXRzWyJ3ZWIiXVsiY
 2xpZW50X3NlY3JldCJdKQoKICAgICAgICAgICAgcmV0dXJuIFRydWUKICAgICAgICBlbGlmIChzdGVwID09IDIpOgogICAgICAgICAgICBwcmludCAiR29vZ2xlKyBQcmVwYXJlIGZvciBzdGVwIDIi
 CgogICAgICAgICAgICByZXR1cm4gVHJ1ZQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgIGRlZiBnZXRFeHRyYVBhcmFtZXRlcnNGb3JTdGVwKHNlbGYsIGNvbmZpZ3V
 yYXRpb25BdHRyaWJ1dGVzLCBzdGVwKToKICAgICAgICBpZiAoc3RlcCA9PSAyKToKICAgICAgICAgICAgcmV0dXJuIEFycmF5cy5hc0xpc3QoImdwbHVzX3VzZXJfdWlkIikKCiAgICAgICAgcmV0dX
 JuIE5vbmUKCiAgICBkZWYgZ2V0Q291bnRBdXRoZW50aWNhdGlvblN0ZXBzKHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKToKICAgICAgICBjb250ZXh0ID0gQ29udGV4dHMuZ2V0RXZlbnRDb
 250ZXh0KCkKICAgICAgICBpZiAoY29udGV4dC5pc1NldCgiZ3BsdXNfY291bnRfbG9naW5fc3RlcHMiKSk6CiAgICAgICAgICAgIHJldHVybiBjb250ZXh0LmdldCgiZ3BsdXNfY291bnRfbG9naW5f
 c3RlcHMiKQogICAgICAgIAogICAgICAgIHJldHVybiAyCgogICAgZGVmIGdldFBhZ2VGb3JTdGVwKHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCBzdGVwKToKICAgICAgICBpZiAoc3RlcCA
 9PSAxKToKICAgICAgICAgICAgcmV0dXJuICIvYXV0aC9ncGx1cy9ncGx1c2xvZ2luLnhodG1sIgoKICAgICAgICByZXR1cm4gIi9hdXRoL2dwbHVzL2dwbHVzcG9zdGxvZ2luLnhodG1sIgoKICAgIG
 RlZiBsb2dvdXQoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIHJlcXVlc3RQYXJhbWV0ZXJzKToKICAgICAgICAjIFRPRE8gUmV2b2tlIHRva2VuCiAgICAgICAgcmV0dXJuIFRydWUKCiAgI
 CBkZWYgbG9hZENsaWVudFNlY3JldHMoc2VsZiwgY2xpZW50U2VjcmV0c0ZpbGUpOgogICAgICAgIGNsaWVudFNlY3JldHMgPSBOb25lCgogICAgICAgICMgTG9hZCBjZXJ0aWZpY2F0ZSBmcm9tIGZp
 bGUKICAgICAgICBmID0gb3BlbihjbGllbnRTZWNyZXRzRmlsZSwgJ3InKQogICAgICAgIHRyeToKICAgICAgICAgICAgY2xpZW50U2VjcmV0cyA9IGpzb24ubG9hZHMoZi5yZWFkKCkpCiAgICAgICA
 gZXhjZXB0OgogICAgICAgICAgICBwcmludCAiRmFpbGVkIHRvIGxvYWQgR29vZ2xlKyBjbGllbnQgc2VjcmV0cyBmcm9tIGZpbGU6IiwgY2xpZW50U2VjcmV0cwogICAgICAgICAgICByZXR1cm4gTm
 9uZQogICAgICAgIGZpbmFsbHk6CiAgICAgICAgICAgIGYuY2xvc2UoKQogICAgICAgIAogICAgICAgIHJldHVybiBjbGllbnRTZWNyZXRzCgogICAgZGVmIGdldENsaWVudENvbmZpZ3VyYXRpb24oc
 2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIHJlcXVlc3RQYXJhbWV0ZXJzKToKICAgICAgICAjIEdldCBjbGllbnQgY29uZmlndXJhdGlvbgogICAgICAgIGlmIChjb25maWd1cmF0aW9uQXR0
 cmlidXRlcy5jb250YWluc0tleSgiZ3BsdXNfY2xpZW50X2NvbmZpZ3VyYXRpb25fYXR0cmlidXRlIikpOgogICAgICAgICAgICBjbGllbnRDb25maWd1cmF0aW9uQXR0cmlidXRlID0gY29uZmlndXJ
 hdGlvbkF0dHJpYnV0ZXMuZ2V0KCJncGx1c19jbGllbnRfY29uZmlndXJhdGlvbl9hdHRyaWJ1dGUiKS5nZXRWYWx1ZTIoKQogICAgICAgICAgICBwcmludCAiR29vZ2xlKyBHZXRDbGllbnRDb25maW
 d1cmF0aW9uLiBVc2luZyBjbGllbnQgYXR0cmlidXRlOiIsIGNsaWVudENvbmZpZ3VyYXRpb25BdHRyaWJ1dGUKCiAgICAgICAgICAgIGlmIChyZXF1ZXN0UGFyYW1ldGVycyA9PSBOb25lKToKICAgI
 CAgICAgICAgICAgIHJldHVybiBOb25lCgogICAgICAgICAgICBjbGllbnRJZCA9IE5vbmUKICAgICAgICAgICAgCiAgICAgICAgICAgICMgQXR0ZW1wdCB0byBkZXRlcm1pbmUgY2xpZW50X2lkIGZy
 b20gcmVxdWVzdAogICAgICAgICAgICBjbGllbnRJZEFycmF5ID0gcmVxdWVzdFBhcmFtZXRlcnMuZ2V0KCJjbGllbnRfaWQiKQogICAgICAgICAgICBpZiAoQXJyYXlIZWxwZXIuaXNOb3RFbXB0eSh
 jbGllbnRJZEFycmF5KSBhbmQgU3RyaW5nSGVscGVyLmlzTm90RW1wdHlTdHJpbmcoY2xpZW50SWRBcnJheVswXSkpOgogICAgICAgICAgICAgICAgY2xpZW50SWQgPSBjbGllbnRJZEFycmF5WzBdCg
 ogICAgICAgICAgICAjIEF0dGVtcHQgdG8gZGV0ZXJtaW5lIGNsaWVudF9pZCBmcm9tIGV2ZW50IGNvbnRleHQKICAgICAgICAgICAgaWYgKGNsaWVudElkID09IE5vbmUpOgogICAgICAgICAgICAgI
 CAgZXZlbnRDb250ZXh0ID0gQ29udGV4dHMuZ2V0RXZlbnRDb250ZXh0KCkKICAgICAgICAgICAgICAgIGlmIChldmVudENvbnRleHQuaXNTZXQoInNlc3Npb25BdHRyaWJ1dGVzIikpOgogICAgICAg
 ICAgICAgICAgICAgIGNsaWVudElkID0gZXZlbnRDb250ZXh0LmdldCgic2Vzc2lvbkF0dHJpYnV0ZXMiKS5nZXQoImNsaWVudF9pZCIpCgogICAgICAgICAgICBpZiAoY2xpZW50SWQgPT0gTm9uZSk
 6CiAgICAgICAgICAgICAgICBwcmludCAiR29vZ2xlKyBHZXRDbGllbnRDb25maWd1cmF0aW9uLiBjbGllbnRfaWQgaXMgZW1wdHkiCiAgICAgICAgICAgICAgICByZXR1cm4gTm9uZQoKICAgICAgIC
 AgICAgY2xpZW50U2VydmljZSA9IENsaWVudFNlcnZpY2UuaW5zdGFuY2UoKQogICAgICAgICAgICBjbGllbnQgPSBjbGllbnRTZXJ2aWNlLmdldENsaWVudChjbGllbnRJZCkKICAgICAgICAgICAga
 WYgKGNsaWVudCA9PSBOb25lKToKICAgICAgICAgICAgICAgIHByaW50ICJHb29nbGUrIEdldENsaWVudENvbmZpZ3VyYXRpb24uIEZhaWxlZCB0byBmaW5kIGNsaWVudCIsIGNsaWVudElkLCAiIGlu
 IGxvY2FsIExEQVAiCiAgICAgICAgICAgICAgICByZXR1cm4gTm9uZQoKICAgICAgICAgICAgY2xpZW50Q29uZmlndXJhdGlvbiA9IGNsaWVudFNlcnZpY2UuZ2V0Q3VzdG9tQXR0cmlidXRlKGNsaWV
 udCwgY2xpZW50Q29uZmlndXJhdGlvbkF0dHJpYnV0ZSkKICAgICAgICAgICAgaWYgKChjbGllbnRDb25maWd1cmF0aW9uID09IE5vbmUpIG9yIFN0cmluZ0hlbHBlci5pc0VtcHR5KGNsaWVudENvbm
 ZpZ3VyYXRpb24uZ2V0VmFsdWUoKSkpOgogICAgICAgICAgICAgICAgcHJpbnQgIkdvb2dsZSsgR2V0Q2xpZW50Q29uZmlndXJhdGlvbi4gQ2xpZW50IiwgY2xpZW50SWQsICIgYXR0cmlidXRlIiwgY
 2xpZW50Q29uZmlndXJhdGlvbkF0dHJpYnV0ZSwgIiBpcyBlbXB0eSIKICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgIHByaW50ICJHb29nbGUrIEdldENsaWVudENvbmZpZ3VyYXRpb24u
 IENsaWVudCIsIGNsaWVudElkLCAiIGF0dHJpYnV0ZSIsIGNsaWVudENvbmZpZ3VyYXRpb25BdHRyaWJ1dGUsICIgaXMiLCBjbGllbnRDb25maWd1cmF0aW9uCiAgICAgICAgICAgICAgICByZXR1cm4
 gY2xpZW50Q29uZmlndXJhdGlvbgoKICAgICAgICByZXR1cm4gTm9uZQoKICAgIGRlZiBnZXRDdXJyZW50Q2xpZW50U2VjcmV0cyhzZWxmLCBjdXJyZW50Q2xpZW50U2VjcmV0cywgY29uZmlndXJhdG
 lvbkF0dHJpYnV0ZXMsIHJlcXVlc3RQYXJhbWV0ZXJzKToKICAgICAgICBjbGllbnRDb25maWd1cmF0aW9uID0gc2VsZi5nZXRDbGllbnRDb25maWd1cmF0aW9uKGNvbmZpZ3VyYXRpb25BdHRyaWJ1d
 GVzLCByZXF1ZXN0UGFyYW1ldGVycykKICAgICAgICBpZiAoY2xpZW50Q29uZmlndXJhdGlvbiA9PSBOb25lKToKICAgICAgICAgICAgcmV0dXJuIGN1cnJlbnRDbGllbnRTZWNyZXRzCiAgICAgICAg
 CiAgICAgICAgY2xpZW50Q29uZmlndXJhdGlvblZhbHVlID0ganNvbi5sb2FkcyhjbGllbnRDb25maWd1cmF0aW9uLmdldFZhbHVlKCkpCgogICAgICAgIHJldHVybiBjbGllbnRDb25maWd1cmF0aW9
 uVmFsdWVbImdwbHVzIl0KCiAgICBkZWYgZ2V0Q3VycmVudEF0dHJpYnV0ZXNNYXBwaW5nKHNlbGYsIGN1cnJlbnRBdHRyaWJ1dGVzTWFwcGluZywgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIHJlcX
 Vlc3RQYXJhbWV0ZXJzKToKICAgICAgICBjbGllbnRDb25maWd1cmF0aW9uID0gc2VsZi5nZXRDbGllbnRDb25maWd1cmF0aW9uKGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCByZXF1ZXN0UGFyYW1ld
 GVycykKICAgICAgICBpZiAoY2xpZW50Q29uZmlndXJhdGlvbiA9PSBOb25lKToKICAgICAgICAgICAgcmV0dXJuIGN1cnJlbnRBdHRyaWJ1dGVzTWFwcGluZwoKICAgICAgICBjbGllbnRDb25maWd1
 cmF0aW9uVmFsdWUgPSBqc29uLmxvYWRzKGNsaWVudENvbmZpZ3VyYXRpb24uZ2V0VmFsdWUoKSkKCiAgICAgICAgY2xpZW50QXR0cmlidXRlc01hcHBpbmcgPSBzZWxmLnByZXBhcmVBdHRyaWJ1dGV
 zTWFwcGluZyhjbGllbnRDb25maWd1cmF0aW9uVmFsdWVbImdwbHVzX3JlbW90ZV9hdHRyaWJ1dGVzX2xpc3QiXSwgY2xpZW50Q29uZmlndXJhdGlvblZhbHVlWyJncGx1c19sb2NhbF9hdHRyaWJ1dG
 VzX2xpc3QiXSkKICAgICAgICBpZiAoY2xpZW50QXR0cmlidXRlc01hcHBpbmcgPT0gTm9uZSk6CiAgICAgICAgICAgIHByaW50ICJHb29nbGUrIEdldEN1cnJlbnRBdHRyaWJ1dGVzTWFwcGluZy4gQ
 2xpZW50IGF0dHJpYnV0ZXMgbWFwcGluZyBpcyBpbnZhbGlkLiBVc2luZyBkZWZhdWx0IG9uZSIKICAgICAgICAgICAgcmV0dXJuIGN1cnJlbnRBdHRyaWJ1dGVzTWFwcGluZwoKICAgICAgICByZXR1
 cm4gY2xpZW50QXR0cmlidXRlc01hcHBpbmcKCiAgICBkZWYgcHJlcGFyZUF0dHJpYnV0ZXNNYXBwaW5nKHNlbGYsIHJlbW90ZUF0dHJpYnV0ZXNMaXN0LCBsb2NhbEF0dHJpYnV0ZXNMaXN0KToKICA
 gICAgICByZW1vdGVBdHRyaWJ1dGVzTGlzdEFycmF5ID0gU3RyaW5nSGVscGVyLnNwbGl0KHJlbW90ZUF0dHJpYnV0ZXNMaXN0LCAiLCIpCiAgICAgICAgaWYgKEFycmF5SGVscGVyLmlzRW1wdHkocm
 Vtb3RlQXR0cmlidXRlc0xpc3RBcnJheSkpOgogICAgICAgICAgICBwcmludCAiR29vZ2xlKyBQcmVwYXJlQXR0cmlidXRlc01hcHBpbmcuIFRoZXJlIGlzIG5vIGF0dHJpYnV0ZXMgc3BlY2lmaWVkI
 GluIHJlbW90ZUF0dHJpYnV0ZXNMaXN0IHByb3BlcnR5IgogICAgICAgICAgICByZXR1cm4gTm9uZQogICAgICAgIAogICAgICAgIGxvY2FsQXR0cmlidXRlc0xpc3RBcnJheSA9IFN0cmluZ0hlbHBl
 ci5zcGxpdChsb2NhbEF0dHJpYnV0ZXNMaXN0LCAiLCIpCiAgICAgICAgaWYgKEFycmF5SGVscGVyLmlzRW1wdHkobG9jYWxBdHRyaWJ1dGVzTGlzdEFycmF5KSk6CiAgICAgICAgICAgIHByaW50ICJ
 Hb29nbGUrIFByZXBhcmVBdHRyaWJ1dGVzTWFwcGluZy4gVGhlcmUgaXMgbm8gYXR0cmlidXRlcyBzcGVjaWZpZWQgaW4gbG9jYWxBdHRyaWJ1dGVzTGlzdCBwcm9wZXJ0eSIKICAgICAgICAgICAgcm
 V0dXJuIE5vbmUKCiAgICAgICAgaWYgKGxlbihyZW1vdGVBdHRyaWJ1dGVzTGlzdEFycmF5KSAhPSBsZW4obG9jYWxBdHRyaWJ1dGVzTGlzdEFycmF5KSk6CiAgICAgICAgICAgIHByaW50ICJHb29nb
 GUrIFByZXBhcmVBdHRyaWJ1dGVzTWFwcGluZy4gVGhlIG51bWJlciBvZiBhdHRyaWJ1dGVzIGluIHJlbW90ZUF0dHJpYnV0ZXNMaXN0IGFuZCBsb2NhbEF0dHJpYnV0ZXNMaXN0IGlzbid0IGVxdWFs
 IgogICAgICAgICAgICByZXR1cm4gTm9uZQogICAgICAgIAogICAgICAgIGF0dHJpYnV0ZU1hcHBpbmcgPSBJZGVudGl0eUhhc2hNYXAoKQogICAgICAgIGNvbnRhaW5zVWlkID0gRmFsc2UKICAgICA
 gICBpID0gMAogICAgICAgIGNvdW50ID0gbGVuKHJlbW90ZUF0dHJpYnV0ZXNMaXN0QXJyYXkpCiAgICAgICAgd2hpbGUgKGkgPCBjb3VudCk6CiAgICAgICAgICAgIHJlbW90ZUF0dHJpYnV0ZSA9IF
 N0cmluZ0hlbHBlci50b0xvd2VyQ2FzZShyZW1vdGVBdHRyaWJ1dGVzTGlzdEFycmF5W2ldKQogICAgICAgICAgICBsb2NhbEF0dHJpYnV0ZSA9IFN0cmluZ0hlbHBlci50b0xvd2VyQ2FzZShsb2Nhb
 EF0dHJpYnV0ZXNMaXN0QXJyYXlbaV0pCiAgICAgICAgICAgIGF0dHJpYnV0ZU1hcHBpbmcucHV0KHJlbW90ZUF0dHJpYnV0ZSwgbG9jYWxBdHRyaWJ1dGUpCgogICAgICAgICAgICBpZiAoU3RyaW5n
 SGVscGVyLmVxdWFsc0lnbm9yZUNhc2UobG9jYWxBdHRyaWJ1dGUsICJ1aWQiKSk6CiAgICAgICAgICAgICAgICBjb250YWluc1VpZCA9IFRydWUKCiAgICAgICAgICAgIGkgPSBpICsgMQoKICAgICA
 gICBpZiAobm90IGNvbnRhaW5zVWlkKToKICAgICAgICAgICAgcHJpbnQgIkdvb2dsZSsgUHJlcGFyZUF0dHJpYnV0ZXNNYXBwaW5nLiBUaGVyZSBpcyBubyBtYXBwaW5nIHRvIG1hbmRhdG9yeSAndW
 lkJyBhdHRyaWJ1dGUiCiAgICAgICAgICAgIHJldHVybiBOb25lCiAgICAgICAgCiAgICAgICAgcmV0dXJuIGF0dHJpYnV0ZU1hcHBpbmcKCiAgICBkZWYgZ2V0VG9rZW5zQnlDb2RlKHNlbGYsIGN1c
 nJlbnRDbGllbnRTZWNyZXRzLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcywgY29kZSk6CiAgICAgICAgdG9rZW5SZXF1ZXN0ID0gVG9rZW5SZXF1ZXN0KEdyYW50VHlwZS5DTElFTlRfQ1JFREVOVElB
 TFMpCiAgICAgICAgdG9rZW5SZXF1ZXN0LnNldEF1dGhlbnRpY2F0aW9uTWV0aG9kKEF1dGhlbnRpY2F0aW9uTWV0aG9kLkNMSUVOVF9TRUNSRVRfUE9TVCkKICAgICAgICB0b2tlblJlcXVlc3Quc2V
 0Q29kZShjb2RlKQogICAgICAgIHRva2VuUmVxdWVzdC5zZXRBdXRoVXNlcm5hbWUoY3VycmVudENsaWVudFNlY3JldHNbIndlYiJdWyJjbGllbnRfaWQiXSkKICAgICAgICB0b2tlblJlcXVlc3Quc2
 V0QXV0aFBhc3N3b3JkKGN1cnJlbnRDbGllbnRTZWNyZXRzWyJ3ZWIiXVsiY2xpZW50X3NlY3JldCJdKQogICAgICAgIHRva2VuUmVxdWVzdC5zZXRSZWRpcmVjdFVyaSgicG9zdG1lc3NhZ2UiKQogI
 CAgICAgIHRva2VuUmVxdWVzdC5zZXRHcmFudFR5cGUoR3JhbnRUeXBlLkFVVEhPUklaQVRJT05fQ09ERSkKCiAgICAgICAgdG9rZW5DbGllbnQgPSBUb2tlbkNsaWVudChjdXJyZW50Q2xpZW50U2Vj
 cmV0c1sid2ViIl1bInRva2VuX3VyaSJdKQogICAgICAgIHRva2VuQ2xpZW50LnNldFJlcXVlc3QodG9rZW5SZXF1ZXN0KQogICAgICAgIAogICAgICAgIHRva2VuUmVzcG9uc2UgPSB0b2tlbkNsaWV
 udC5leGVjKCkKICAgICAgICBpZiAoKHRva2VuUmVzcG9uc2UgPT0gTm9uZSkgb3IgKHRva2VuUmVzcG9uc2UuZ2V0U3RhdHVzKCkgIT0gMjAwKSk6CiAgICAgICAgICAgIHJldHVybiBOb25lCgogIC
 AgICAgIHJldHVybiB0b2tlblJlc3BvbnNlCgogICAgZGVmIGdldFVzZXJJbmZvKHNlbGYsIGN1cnJlbnRDbGllbnRTZWNyZXRzLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcywgYWNjZXNzVG9rZW4pO
 gogICAgICAgIHVzZXJJbmZvQ2xpZW50ID0gVXNlckluZm9DbGllbnQoImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL3BsdXMvdjEvcGVvcGxlL21lL29wZW5JZENvbm5lY3QiKQoKICAgICAgICB1
 c2VySW5mb1Jlc3BvbnNlID0gdXNlckluZm9DbGllbnQuZXhlY1VzZXJJbmZvKGFjY2Vzc1Rva2VuKQogICAgICAgIGlmICgodXNlckluZm9SZXNwb25zZSA9PSBOb25lKSBvciAodXNlckluZm9SZXN
 wb25zZS5nZXRTdGF0dXMoKSAhPSAyMDApKToKICAgICAgICAgICAgcmV0dXJuIE5vbmUKCiAgICAgICAgcmV0dXJuIHVzZXJJbmZvUmVzcG9uc2UKCiAgICBkZWYgZXh0ZW5zaW9uUG9zdExvZ2luKH
 NlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCB1c2VyKToKICAgICAgICBpZiAoc2VsZi5leHRlbnNpb25Nb2R1bGUgIT0gTm9uZSk6CiAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgI
 HBvc3RMb2dpblJlc3VsdCA9IHNlbGYuZXh0ZW5zaW9uTW9kdWxlLnBvc3RMb2dpbihjb25maWd1cmF0aW9uQXR0cmlidXRlcywgdXNlcikKICAgICAgICAgICAgICAgIHByaW50ICJHb29nbGUrIFBv
 c3RMb2dpbiByZXN1bHQ6IiwgcG9zdExvZ2luUmVzdWx0CgogICAgICAgICAgICAgICAgcmV0dXJuIHBvc3RMb2dpblJlc3VsdAogICAgICAgICAgICBleGNlcHQgRXhjZXB0aW9uLCBleDoKICAgICA
 gICAgICAgICAgIHByaW50ICJHb29nbGUrIFBvc3RMb2dpbi4gRmFpbGVkIHRvIGV4ZWN1dGUgcG9zdExvZ2luIG1ldGhvZCIKICAgICAgICAgICAgICAgIHByaW50ICJHb29nbGUrIFBvc3RMb2dpbi
 4gVW5leHBlY3RlZCBlcnJvcjoiLCBleAogICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlCiAgICAgICAgICAgIGV4Y2VwdCBqYXZhLmxhbmcuVGhyb3dhYmxlLCBleDoKICAgICAgICAgICAgICAgI
 HByaW50ICJHb29nbGUrIFBvc3RMb2dpbi4gRmFpbGVkIHRvIGV4ZWN1dGUgcG9zdExvZ2luIG1ldGhvZCIKICAgICAgICAgICAgICAgIGV4LnByaW50U3RhY2tUcmFjZSgpIAogICAgICAgICAgICAg
 ICAgcmV0dXJuIEZhbHNlCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgcmV0dXJuIFRydWUK
oxScriptType: person_authentication
programmingLanguage: python

dn: inum=%(inumOrg)s!0011!8BAF.80D6,ou=scripts,o=%(inumOrg)s,o=gluu
objectClass: top
objectClass: oxCustomScript
description: Fido U2F authentication module
displayName: u2f
gluuStatus: false
inum: %(inumOrg)s!0011!8BAF.80D6
oxConfigurationProperty: {"value1":"u2f_application_id","value2":"https://%(hostname)s","description":""}
oxConfigurationProperty: {"value1":"u2f_server_uri","value2":"https://%(hostname)s","description":""}
oxLevel: 10
oxModuleProperty: {"value1":"usage_type","value2":"interactive","description":""}
oxModuleProperty: {"value1":"location_type","value2":"ldap","description":""}
oxRevision: 1
oxScript:: IyBveEF1dGggaXMgYXZhaWxhYmxlIHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoMjAwOCkuIFNlZSBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUIGZvciBmdWxsIHRleHQuC
 iMgQ29weXJpZ2h0IChjKSAyMDE2LCBHbHV1CiMKIyBBdXRob3I6IFl1cml5IE1vdmNoYW4KIwoKZnJvbSBvcmcueGRpLm1vZGVsLmN1c3RvbS5zY3JpcHQudHlwZS5hdXRoIGltcG9ydCBQZXJzb25B
 dXRoZW50aWNhdGlvblR5cGUKZnJvbSBvcmcuamJvc3Muc2VhbS5jb250ZXh0cyBpbXBvcnQgQ29udGV4dCwgQ29udGV4dHMKZnJvbSBvcmcuamJvc3Muc2VhbS5zZWN1cml0eSBpbXBvcnQgSWRlbnR
 pdHkKZnJvbSBvcmcueGRpLm94YXV0aC5zZXJ2aWNlIGltcG9ydCBVc2VyU2VydmljZSwgQXV0aGVudGljYXRpb25TZXJ2aWNlLCBTZXNzaW9uU3RhdGVTZXJ2aWNlCmZyb20gb3JnLnhkaS51dGlsIG
 ltcG9ydCBTdHJpbmdIZWxwZXIKZnJvbSBvcmcueGRpLnV0aWwgaW1wb3J0IEFycmF5SGVscGVyCmZyb20gb3JnLnhkaS5veGF1dGguY2xpZW50LmZpZG8udTJmIGltcG9ydCBGaWRvVTJmQ2xpZW50R
 mFjdG9yeQpmcm9tIG9yZy54ZGkub3hhdXRoLnNlcnZpY2UuZmlkby51MmYgaW1wb3J0IERldmljZVJlZ2lzdHJhdGlvblNlcnZpY2UKZnJvbSBvcmcueGRpLm94YXV0aC51dGlsIGltcG9ydCBTZXJ2
 ZXJVdGlsCmZyb20gb3JnLnhkaS5veGF1dGgubW9kZWwuY29uZmlnIGltcG9ydCBDb25zdGFudHMKZnJvbSBvcmcuamJvc3MucmVzdGVhc3kuY2xpZW50IGltcG9ydCBDbGllbnRSZXNwb25zZUZhaWx
 1cmUKZnJvbSBqYXZheC53cy5ycy5jb3JlIGltcG9ydCBSZXNwb25zZQpmcm9tIGphdmEudXRpbCBpbXBvcnQgQXJyYXlzCgppbXBvcnQgc3lzCmltcG9ydCBqYXZhCgpjbGFzcyBQZXJzb25BdXRoZW
 50aWNhdGlvbihQZXJzb25BdXRoZW50aWNhdGlvblR5cGUpOgogICAgZGVmIF9faW5pdF9fKHNlbGYsIGN1cnJlbnRUaW1lTWlsbGlzKToKICAgICAgICBzZWxmLmN1cnJlbnRUaW1lTWlsbGlzID0gY
 3VycmVudFRpbWVNaWxsaXMKCiAgICBkZWYgaW5pdChzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6CiAgICAgICAgcHJpbnQgIlUyRi4gSW5pdGlhbGl6YXRpb24iCgogICAgICAgIHByaW50
 ICJVMkYuIEluaXRpYWxpemF0aW9uLiBEb3dubG9hZGluZyBVMkYgbWV0YWRhdGEiCiAgICAgICAgdTJmX3NlcnZlcl91cmkgPSBjb25maWd1cmF0aW9uQXR0cmlidXRlcy5nZXQoInUyZl9zZXJ2ZXJ
 fdXJpIikuZ2V0VmFsdWUyKCkKICAgICAgICB1MmZfc2VydmVyX21ldGFkYXRhX3VyaSA9IHUyZl9zZXJ2ZXJfdXJpICsgIi8ud2VsbC1rbm93bi9maWRvLXUyZi1jb25maWd1cmF0aW9uIgoKICAgIC
 AgICBtZXRhRGF0YUNvbmZpZ3VyYXRpb25TZXJ2aWNlID0gRmlkb1UyZkNsaWVudEZhY3RvcnkuaW5zdGFuY2UoKS5jcmVhdGVNZXRhRGF0YUNvbmZpZ3VyYXRpb25TZXJ2aWNlKHUyZl9zZXJ2ZXJfb
 WV0YWRhdGFfdXJpKQoKICAgICAgICBtYXhfYXR0ZW1wdHMgPSAzCiAgICAgICAgZm9yIGF0dGVtcHQgaW4gcmFuZ2UoMSwgbWF4X2F0dGVtcHRzKToKICAgICAgICAgICAgdHJ5OgogICAgICAgICAg
 ICAgICAgc2VsZi5tZXRhRGF0YUNvbmZpZ3VyYXRpb24gPSBtZXRhRGF0YUNvbmZpZ3VyYXRpb25TZXJ2aWNlLmdldE1ldGFkYXRhQ29uZmlndXJhdGlvbigpCiAgICAgICAgICAgICAgICBicmVhawo
 gICAgICAgICAgICBleGNlcHQgQ2xpZW50UmVzcG9uc2VGYWlsdXJlLCBleDoKICAgICAgICAgICAgICAgICMgRGV0ZWN0IGlmIGxhc3QgdHJ5IG9yIHdlIHN0aWxsIGdldCBTZXJ2aWNlIFVuYXZhaW
 xhYmxlIEhUVFAgZXJyb3IKICAgICAgICAgICAgICAgIGlmIChhdHRlbXB0ID09IG1heF9hdHRlbXB0cykgb3IgKGV4LmdldFJlc3BvbnNlKCkuZ2V0UmVzcG9uc2VTdGF0dXMoKSAhPSBSZXNwb25zZ
 S5TdGF0dXMuU0VSVklDRV9VTkFWQUlMQUJMRSk6CiAgICAgICAgICAgICAgICAgICAgcmFpc2UgZXgKCiAgICAgICAgICAgICAgICBqYXZhLmxhbmcuVGhyZWFkLnNsZWVwKDMwMDApCiAgICAgICAg
 ICAgICAgICBwcmludCAiQXR0ZW1wdGluZyB0byBsb2FkIG1ldGFkYXRhOiAlZCIgJSBhdHRlbXB0CiAgICAgICAgCiAgICAgICAgcHJpbnQgIlUyRi4gSW5pdGlhbGl6ZWQgc3VjY2Vzc2Z1bGx5Igo
 gICAgICAgIHJldHVybiBUcnVlICAgCgogICAgZGVmIGRlc3Ryb3koc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOgogICAgICAgIHByaW50ICJVMkYuIERlc3Ryb3kiCiAgICAgICAgcHJpbn
 QgIlUyRi4gRGVzdHJveWVkIHN1Y2Nlc3NmdWxseSIKICAgICAgICByZXR1cm4gVHJ1ZQoKICAgIGRlZiBnZXRBcGlWZXJzaW9uKHNlbGYpOgogICAgICAgIHJldHVybiAxCgogICAgZGVmIGlzVmFsa
 WRBdXRoZW50aWNhdGlvbk1ldGhvZChzZWxmLCB1c2FnZVR5cGUsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKToKICAgICAgICByZXR1cm4gVHJ1ZQoKICAgIGRlZiBnZXRBbHRlcm5hdGl2ZUF1dGhl
 bnRpY2F0aW9uTWV0aG9kKHNlbGYsIHVzYWdlVHlwZSwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOgogICAgICAgIHJldHVybiBOb25lCgogICAgZGVmIGF1dGhlbnRpY2F0ZShzZWxmLCBjb25maWd
 1cmF0aW9uQXR0cmlidXRlcywgcmVxdWVzdFBhcmFtZXRlcnMsIHN0ZXApOgogICAgICAgIGNyZWRlbnRpYWxzID0gSWRlbnRpdHkuaW5zdGFuY2UoKS5nZXRDcmVkZW50aWFscygpCiAgICAgICAgdX
 Nlcl9uYW1lID0gY3JlZGVudGlhbHMuZ2V0VXNlcm5hbWUoKQoKICAgICAgICBpZiAoc3RlcCA9PSAxKToKICAgICAgICAgICAgcHJpbnQgIlUyRi4gQXV0aGVudGljYXRlIGZvciBzdGVwIDEiCgogI
 CAgICAgICAgICB1c2VyX3Bhc3N3b3JkID0gY3JlZGVudGlhbHMuZ2V0UGFzc3dvcmQoKQogICAgICAgICAgICBsb2dnZWRfaW4gPSBGYWxzZQogICAgICAgICAgICBpZiAoU3RyaW5nSGVscGVyLmlz
 Tm90RW1wdHlTdHJpbmcodXNlcl9uYW1lKSBhbmQgU3RyaW5nSGVscGVyLmlzTm90RW1wdHlTdHJpbmcodXNlcl9wYXNzd29yZCkpOgogICAgICAgICAgICAgICAgdXNlclNlcnZpY2UgPSBVc2VyU2V
 ydmljZS5pbnN0YW5jZSgpCiAgICAgICAgICAgICAgICBsb2dnZWRfaW4gPSB1c2VyU2VydmljZS5hdXRoZW50aWNhdGUodXNlcl9uYW1lLCB1c2VyX3Bhc3N3b3JkKQoKICAgICAgICAgICAgaWYgKG
 5vdCBsb2dnZWRfaW4pOgogICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgICAgICAgICByZXR1cm4gVHJ1ZQogICAgICAgIGVsaWYgKHN0ZXAgPT0gMik6CiAgICAgICAgICAgIHByaW50I
 CJVMkYuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAyIgoKICAgICAgICAgICAgdG9rZW5fcmVzcG9uc2UgPSBTZXJ2ZXJVdGlsLmdldEZpcnN0VmFsdWUocmVxdWVzdFBhcmFtZXRlcnMsICJ0b2tlblJl
 c3BvbnNlIikKICAgICAgICAgICAgaWYgdG9rZW5fcmVzcG9uc2UgPT0gTm9uZToKICAgICAgICAgICAgICAgIHByaW50ICJVMkYuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAyLiB0b2tlblJlc3BvbnN
 lIGlzIGVtcHR5IgogICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgICAgICAgICBhdXRoX21ldGhvZCA9IFNlcnZlclV0aWwuZ2V0Rmlyc3RWYWx1ZShyZXF1ZXN0UGFyYW1ldGVycywgIm
 F1dGhNZXRob2QiKQogICAgICAgICAgICBpZiBhdXRoX21ldGhvZCA9PSBOb25lOgogICAgICAgICAgICAgICAgcHJpbnQgIlUyRi4gQXV0aGVudGljYXRlIGZvciBzdGVwIDIuIGF1dGhNZXRob2Qga
 XMgZW1wdHkiCiAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgICAgIGF1dGhlbnRpY2F0aW9uU2VydmljZSA9IEF1dGhlbnRpY2F0aW9uU2VydmljZS5pbnN0YW5jZSgpCiAgICAg
 ICAgICAgIHVzZXIgPSBhdXRoZW50aWNhdGlvblNlcnZpY2UuZ2V0QXV0aGVudGljYXRlZFVzZXIoKQogICAgICAgICAgICBpZiAodXNlciA9PSBOb25lKToKICAgICAgICAgICAgICAgIHByaW50ICJ
 VMkYuIFByZXBhcmUgZm9yIHN0ZXAgMi4gRmFpbGVkIHRvIGRldGVybWluZSB1c2VyIG5hbWUiCiAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgICAgIGlmIChhdXRoX21ldGhvZC
 A9PSAnYXV0aGVudGljYXRlJyk6CiAgICAgICAgICAgICAgICBwcmludCAiVTJGLiBQcmVwYXJlIGZvciBzdGVwIDIuIENhbGwgRklETyBVMkYgaW4gb3JkZXIgdG8gZmluaXNoIGF1dGhlbnRpY2F0a
 W9uIHdvcmtmbG93IgogICAgICAgICAgICAgICAgYXV0aGVudGljYXRpb25SZXF1ZXN0U2VydmljZSA9IEZpZG9VMmZDbGllbnRGYWN0b3J5Lmluc3RhbmNlKCkuY3JlYXRlQXV0aGVudGljYXRpb25S
 ZXF1ZXN0U2VydmljZShzZWxmLm1ldGFEYXRhQ29uZmlndXJhdGlvbikKICAgICAgICAgICAgICAgIGF1dGhlbnRpY2F0aW9uU3RhdHVzID0gYXV0aGVudGljYXRpb25SZXF1ZXN0U2VydmljZS5maW5
 pc2hBdXRoZW50aWNhdGlvbih1c2VyLmdldFVzZXJJZCgpLCB0b2tlbl9yZXNwb25zZSkKCiAgICAgICAgICAgICAgICBpZiAoYXV0aGVudGljYXRpb25TdGF0dXMuZ2V0U3RhdHVzKCkgIT0gQ29uc3
 RhbnRzLlJFU1VMVF9TVUNDRVNTKToKICAgICAgICAgICAgICAgICAgICBwcmludCAiVTJGLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMi4gR2V0IGludmFsaWQgYXV0aGVudGljYXRpb24gc3RhdHVzI
 GZyb20gRklETyBVMkYgc2VydmVyIgogICAgICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgICAgIHJldHVybiBUcnVlCiAgICAgICAgICAgIGVsaWYgKGF1dGhfbWV0aG9k
 ID09ICdlbnJvbGwnKToKICAgICAgICAgICAgICAgIHByaW50ICJVMkYuIFByZXBhcmUgZm9yIHN0ZXAgMi4gQ2FsbCBGSURPIFUyRiBpbiBvcmRlciB0byBmaW5pc2ggcmVnaXN0cmF0aW9uIHdvcmt
 mbG93IgogICAgICAgICAgICAgICAgcmVnaXN0cmF0aW9uUmVxdWVzdFNlcnZpY2UgPSBGaWRvVTJmQ2xpZW50RmFjdG9yeS5pbnN0YW5jZSgpLmNyZWF0ZVJlZ2lzdHJhdGlvblJlcXVlc3RTZXJ2aW
 NlKHNlbGYubWV0YURhdGFDb25maWd1cmF0aW9uKQogICAgICAgICAgICAgICAgcmVnaXN0cmF0aW9uU3RhdHVzID0gcmVnaXN0cmF0aW9uUmVxdWVzdFNlcnZpY2UuZmluaXNoUmVnaXN0cmF0aW9uK
 HVzZXIuZ2V0VXNlcklkKCksIHRva2VuX3Jlc3BvbnNlKQoKICAgICAgICAgICAgICAgIGlmIChyZWdpc3RyYXRpb25TdGF0dXMuZ2V0U3RhdHVzKCkgIT0gQ29uc3RhbnRzLlJFU1VMVF9TVUNDRVNT
 KToKICAgICAgICAgICAgICAgICAgICBwcmludCAiVTJGLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMi4gR2V0IGludmFsaWQgcmVnaXN0cmF0aW9uIHN0YXR1cyBmcm9tIEZJRE8gVTJGIHNlcnZlciI
 KICAgICAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgICAgICAgICByZXR1cm4gVHJ1ZQogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgcHJpbnQgIlUyRi4gUHJlcG
 FyZSBmb3Igc3RlcCAyLiBBdXRoZW50aWNhdGlvZCBtZXRob2QgaXMgaW52YWxpZCIKICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgcmV0dXJuIEZhbHNlCiAgICAgICAgZ
 WxzZToKICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgZGVmIHByZXBhcmVGb3JTdGVwKHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCByZXF1ZXN0UGFyYW1ldGVycywgc3RlcCk6CiAg
 ICAgICAgY29udGV4dCA9IENvbnRleHRzLmdldEV2ZW50Q29udGV4dCgpCgogICAgICAgIGlmIChzdGVwID09IDEpOgogICAgICAgICAgICByZXR1cm4gVHJ1ZQogICAgICAgIGVsaWYgKHN0ZXAgPT0
 gMik6CiAgICAgICAgICAgIHByaW50ICJVMkYuIFByZXBhcmUgZm9yIHN0ZXAgMiIKCiAgICAgICAgICAgIHNlc3Npb25fc3RhdGUgPSBTZXNzaW9uU3RhdGVTZXJ2aWNlLmluc3RhbmNlKCkuZ2V0U2
 Vzc2lvblN0YXRlRnJvbUNvb2tpZSgpCiAgICAgICAgICAgIGlmIFN0cmluZ0hlbHBlci5pc0VtcHR5KHNlc3Npb25fc3RhdGUpOgogICAgICAgICAgICAgICAgcHJpbnQgIlUyRi4gUHJlcGFyZSBmb
 3Igc3RlcCAyLiBGYWlsZWQgdG8gZGV0ZXJtaW5lIHNlc3Npb25fc3RhdGUiCiAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgICAgIGF1dGhlbnRpY2F0aW9uU2VydmljZSA9IEF1
 dGhlbnRpY2F0aW9uU2VydmljZS5pbnN0YW5jZSgpCiAgICAgICAgICAgIHVzZXIgPSBhdXRoZW50aWNhdGlvblNlcnZpY2UuZ2V0QXV0aGVudGljYXRlZFVzZXIoKQogICAgICAgICAgICBpZiAodXN
 lciA9PSBOb25lKToKICAgICAgICAgICAgICAgIHByaW50ICJVMkYuIFByZXBhcmUgZm9yIHN0ZXAgMi4gRmFpbGVkIHRvIGRldGVybWluZSB1c2VyIG5hbWUiCiAgICAgICAgICAgICAgICByZXR1cm
 4gRmFsc2UKCiAgICAgICAgICAgIHUyZl9hcHBsaWNhdGlvbl9pZCA9IGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmdldCgidTJmX2FwcGxpY2F0aW9uX2lkIikuZ2V0VmFsdWUyKCkKCiAgICAgICAgI
 CAgICMgQ2hlY2sgaWYgdXNlciBoYXZlIHJlZ2lzdGVyZWQgZGV2aWNlcwogICAgICAgICAgICBkZXZpY2VSZWdpc3RyYXRpb25TZXJ2aWNlID0gRGV2aWNlUmVnaXN0cmF0aW9uU2VydmljZS5pbnN0
 YW5jZSgpCgogICAgICAgICAgICB1c2VySW51bSA9IHVzZXIuZ2V0QXR0cmlidXRlKCJpbnVtIikKCiAgICAgICAgICAgIHJlZ2lzdHJhdGlvblJlcXVlc3QgPSBOb25lCiAgICAgICAgICAgIGF1dGh
 lbnRpY2F0aW9uUmVxdWVzdCA9IE5vbmUKCiAgICAgICAgICAgIGRldmljZVJlZ2lzdHJhdGlvbnMgPSBkZXZpY2VSZWdpc3RyYXRpb25TZXJ2aWNlLmZpbmRVc2VyRGV2aWNlUmVnaXN0cmF0aW9ucy
 h1c2VySW51bSwgdTJmX2FwcGxpY2F0aW9uX2lkKQogICAgICAgICAgICBpZiAoZGV2aWNlUmVnaXN0cmF0aW9ucy5zaXplKCkgPiAwKToKICAgICAgICAgICAgICAgIHByaW50ICJVMkYuIFByZXBhc
 mUgZm9yIHN0ZXAgMi4gQ2FsbCBGSURPIFUyRiBpbiBvcmRlciB0byBzdGFydCBhdXRoZW50aWNhdGlvbiB3b3JrZmxvdyIKCiAgICAgICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICAgICAg
 YXV0aGVudGljYXRpb25SZXF1ZXN0U2VydmljZSA9IEZpZG9VMmZDbGllbnRGYWN0b3J5Lmluc3RhbmNlKCkuY3JlYXRlQXV0aGVudGljYXRpb25SZXF1ZXN0U2VydmljZShzZWxmLm1ldGFEYXRhQ29
 uZmlndXJhdGlvbikKICAgICAgICAgICAgICAgICAgICBhdXRoZW50aWNhdGlvblJlcXVlc3QgPSBhdXRoZW50aWNhdGlvblJlcXVlc3RTZXJ2aWNlLnN0YXJ0QXV0aGVudGljYXRpb24odXNlci5nZX
 RVc2VySWQoKSwgTm9uZSwgdTJmX2FwcGxpY2F0aW9uX2lkLCBzZXNzaW9uX3N0YXRlKQogICAgICAgICAgICAgICAgZXhjZXB0IENsaWVudFJlc3BvbnNlRmFpbHVyZSwgZXg6CiAgICAgICAgICAgI
 CAgICAgICAgaWYgKGV4LmdldFJlc3BvbnNlKCkuZ2V0UmVzcG9uc2VTdGF0dXMoKSAhPSBSZXNwb25zZS5TdGF0dXMuTk9UX0ZPVU5EKToKICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQgIlUy
 Ri4gUHJlcGFyZSBmb3Igc3RlcCAyLiBGYWlsZWQgdG8gc3RhcnQgYXV0aGVudGljYXRpb24gd29ya2Zsb3cuIEV4Y2VwdGlvbjoiLCBzeXMuZXhjX2luZm8oKVsxXQogICAgICAgICAgICAgICAgICA
 gICAgICByZXR1cm4gRmFsc2UKICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgIHByaW50ICJVMkYuIFByZXBhcmUgZm9yIHN0ZXAgMi4gQ2FsbCBGSURPIFUyRiBpbiBvcmRlciB0byBzdG
 FydCByZWdpc3RyYXRpb24gd29ya2Zsb3ciCiAgICAgICAgICAgICAgICByZWdpc3RyYXRpb25SZXF1ZXN0U2VydmljZSA9IEZpZG9VMmZDbGllbnRGYWN0b3J5Lmluc3RhbmNlKCkuY3JlYXRlUmVna
 XN0cmF0aW9uUmVxdWVzdFNlcnZpY2Uoc2VsZi5tZXRhRGF0YUNvbmZpZ3VyYXRpb24pCiAgICAgICAgICAgICAgICByZWdpc3RyYXRpb25SZXF1ZXN0ID0gcmVnaXN0cmF0aW9uUmVxdWVzdFNlcnZp
 Y2Uuc3RhcnRSZWdpc3RyYXRpb24odXNlci5nZXRVc2VySWQoKSwgdTJmX2FwcGxpY2F0aW9uX2lkLCBzZXNzaW9uX3N0YXRlKQoKICAgICAgICAgICAgY29udGV4dC5zZXQoImZpZG9fdTJmX2F1dGh
 lbnRpY2F0aW9uX3JlcXVlc3QiLCBTZXJ2ZXJVdGlsLmFzSnNvbihhdXRoZW50aWNhdGlvblJlcXVlc3QpKQogICAgICAgICAgICBjb250ZXh0LnNldCgiZmlkb191MmZfcmVnaXN0cmF0aW9uX3JlcX
 Vlc3QiLCBTZXJ2ZXJVdGlsLmFzSnNvbihyZWdpc3RyYXRpb25SZXF1ZXN0KSkKCiAgICAgICAgICAgIHJldHVybiBUcnVlCiAgICAgICAgZWxpZiAoc3RlcCA9PSAzKToKICAgICAgICAgICAgcHJpb
 nQgIlUyRi4gUHJlcGFyZSBmb3Igc3RlcCAzIgoKICAgICAgICAgICAgcmV0dXJuIFRydWUKICAgICAgICBlbHNlOgogICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICBkZWYgZ2V0RXh0cmFQYXJh
 bWV0ZXJzRm9yU3RlcChzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcywgc3RlcCk6CiAgICAgICAgcmV0dXJuIE5vbmUKCiAgICBkZWYgZ2V0Q291bnRBdXRoZW50aWNhdGlvblN0ZXBzKHNlbGY
 sIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKToKICAgICAgICByZXR1cm4gMgoKICAgIGRlZiBnZXRQYWdlRm9yU3RlcChzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcywgc3RlcCk6CiAgICAgIC
 AgaWYgKHN0ZXAgPT0gMik6CiAgICAgICAgICAgIHJldHVybiAiL2F1dGgvdTJmL2xvZ2luLnhodG1sIgoKICAgICAgICByZXR1cm4gIiIKCiAgICBkZWYgbG9nb3V0KHNlbGYsIGNvbmZpZ3VyYXRpb
 25BdHRyaWJ1dGVzLCByZXF1ZXN0UGFyYW1ldGVycyk6CiAgICAgICAgcmV0dXJuIFRydWUK
oxScriptType: person_authentication
programmingLanguage: python

dn: inum=%(inumOrg)s!0011!92F0.BF9E,ou=scripts,o=%(inumOrg)s,o=gluu
objectClass: top
objectClass: oxCustomScript
description: Super Gluu authentication module
displayName: super_gluu
gluuStatus: false
inum: %(inumOrg)s!0011!92F0.BF9E
oxConfigurationProperty: {"value1":"qr_options","value2":"{ size: 500, mSize: 0.05 }","description":""}
oxConfigurationProperty: {"value1":"label","value2":"Super Gluu","description":""}
oxConfigurationProperty: {"value1":"registration_uri","value2":"https://%(hostname)s/identity/register","description":""}
oxConfigurationProperty: {"value1":"authentication_mode","value2":"two_step","description":""}
oxConfigurationProperty: {"value1":"credentials_file","value2":"/etc/certs/super_gluu_creds.json","description":""}
oxLevel: 15
oxModuleProperty: {"value1":"location_type","value2":"ldap","description":""}
oxModuleProperty: {"value1":"usage_type","value2":"interactive","description":""}
oxRevision: 1
oxScript:: IyBveEF1dGggaXMgYXZhaWxhYmxlIHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoMjAwOCkuIFNlZSBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUIGZvciBmdWxsIHRleHQuC
 iMgQ29weXJpZ2h0IChjKSAyMDE2LCBHbHV1CiMKIyBBdXRob3I6IFl1cml5IE1vdmNoYW4KIwoKaW1wb3J0IHN5cwppbXBvcnQgZGF0ZXRpbWUKaW1wb3J0IHVybGxpYgoKZnJvbSBvcmcueGRpLm1v
 ZGVsLmN1c3RvbS5zY3JpcHQudHlwZS5hdXRoIGltcG9ydCBQZXJzb25BdXRoZW50aWNhdGlvblR5cGUKZnJvbSBvcmcuamJvc3Muc2VhbS5jb250ZXh0cyBpbXBvcnQgQ29udGV4dHMKZnJvbSBvcmc
 uamJvc3Muc2VhbS5zZWN1cml0eSBpbXBvcnQgSWRlbnRpdHkKZnJvbSBvcmcueGRpLm94YXV0aC5zZXJ2aWNlIGltcG9ydCBVc2VyU2VydmljZSwgQXV0aGVudGljYXRpb25TZXJ2aWNlLCBTZXNzaW
 9uU3RhdGVTZXJ2aWNlCmZyb20gb3JnLnhkaS5veGF1dGguc2VydmljZS5maWRvLnUyZiBpbXBvcnQgRGV2aWNlUmVnaXN0cmF0aW9uU2VydmljZQpmcm9tIG9yZy54ZGkudXRpbCBpbXBvcnQgU3Rya
 W5nSGVscGVyCmZyb20gb3JnLnhkaS5veGF1dGgudXRpbCBpbXBvcnQgU2VydmVyVXRpbApmcm9tIG9yZy54ZGkudXRpbC5zZWN1cml0eSBpbXBvcnQgU3RyaW5nRW5jcnlwdGVyCmZyb20gb3JnLnhk
 aS5veGF1dGgubW9kZWwuY29uZmlnIGltcG9ydCBDb25maWd1cmF0aW9uRmFjdG9yeQpmcm9tIGphdmEudXRpbCBpbXBvcnQgQXJyYXlzCmZyb20gb3JnLnhkaS5veGF1dGguc2VydmljZS5uZXQgaW1
 wb3J0IEh0dHBTZXJ2aWNlCmZyb20gb3JnLmFwYWNoZS5odHRwLnBhcmFtcyBpbXBvcnQgQ29yZUNvbm5lY3Rpb25QTmFtZXMKZnJvbSBjb20ubm90bm9vcC5hcG5zIGltcG9ydCBBUE5TCmZyb20gY2
 9tLmdvb2dsZS5hbmRyb2lkLmdjbS5zZXJ2ZXIgaW1wb3J0IFNlbmRlciwgTWVzc2FnZQoKdHJ5OgogICAgaW1wb3J0IGpzb24KZXhjZXB0IEltcG9ydEVycm9yOgogICAgaW1wb3J0IHNpbXBsZWpzb
 24gYXMganNvbgoKY2xhc3MgUGVyc29uQXV0aGVudGljYXRpb24oUGVyc29uQXV0aGVudGljYXRpb25UeXBlKToKICAgIGRlZiBfX2luaXRfXyhzZWxmLCBjdXJyZW50VGltZU1pbGxpcyk6CiAgICAg
 ICAgc2VsZi5jdXJyZW50VGltZU1pbGxpcyA9IGN1cnJlbnRUaW1lTWlsbGlzCgogICAgZGVmIGluaXQoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOgogICAgICAgIHByaW50ICJTdXBlci1
 HbHV1LiBJbml0aWFsaXphdGlvbiIKCiAgICAgICAgaWYgbm90IGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmNvbnRhaW5zS2V5KCJhdXRoZW50aWNhdGlvbl9tb2RlIik6CiAgICAgICAgICAgIHByaW
 50ICJTdXBlci1HbHV1LiBJbml0aWFsaXphdGlvbi4gUHJvcGVydHkgYXV0aGVudGljYXRpb25fbW9kZSBpcyBtYW5kYXRvcnkiCiAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICBzZWxmL
 nJlZ2lzdHJhdGlvblVyaSA9IE5vbmUKICAgICAgICBpZiBjb25maWd1cmF0aW9uQXR0cmlidXRlcy5jb250YWluc0tleSgicmVnaXN0cmF0aW9uX3VyaSIpOgogICAgICAgICAgICBzZWxmLnJlZ2lz
 dHJhdGlvblVyaSA9IGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmdldCgicmVnaXN0cmF0aW9uX3VyaSIpLmdldFZhbHVlMigpCgogICAgICAgIGF1dGhlbnRpY2F0aW9uX21vZGUgPSBjb25maWd1cmF
 0aW9uQXR0cmlidXRlcy5nZXQoImF1dGhlbnRpY2F0aW9uX21vZGUiKS5nZXRWYWx1ZTIoKQogICAgICAgIGlmIFN0cmluZ0hlbHBlci5pc0VtcHR5KGF1dGhlbnRpY2F0aW9uX21vZGUpOgogICAgIC
 AgICAgICBwcmludCAiU3VwZXItR2x1dS4gSW5pdGlhbGl6YXRpb24uIEZhaWxlZCB0byBkZXRlcm1pbmUgYXV0aGVudGljYXRpb25fbW9kZS4gYXV0aGVudGljYXRpb25fbW9kZSBjb25maWd1cmF0a
 W9uIHBhcmFtZXRlciBpcyBlbXB0eSIKICAgICAgICAgICAgcmV0dXJuIEZhbHNlCiAgICAgICAgCiAgICAgICAgc2VsZi5vbmVTdGVwID0gU3RyaW5nSGVscGVyLmVxdWFsc0lnbm9yZUNhc2UoYXV0
 aGVudGljYXRpb25fbW9kZSwgIm9uZV9zdGVwIikKICAgICAgICBzZWxmLnR3b1N0ZXAgPSBTdHJpbmdIZWxwZXIuZXF1YWxzSWdub3JlQ2FzZShhdXRoZW50aWNhdGlvbl9tb2RlLCAidHdvX3N0ZXA
 iKQoKICAgICAgICBpZiBub3QgKHNlbGYub25lU3RlcCBvciBzZWxmLnR3b1N0ZXApOgogICAgICAgICAgICBwcmludCAiU3VwZXItR2x1dS4gSW5pdGlhbGl6YXRpb24uIFZhbGlkIGF1dGhlbnRpY2
 F0aW9uX21vZGUgdmFsdWVzIGFyZSBvbmVfc3RlcCBhbmQgdHdvX3N0ZXAiCiAgICAgICAgICAgIHJldHVybiBGYWxzZQogICAgICAgIAogICAgICAgIHNlbGYuZW5hYmxlZFB1c2hOb3RpZmljYXRpb
 25zID0gc2VsZi5pbml0UHVzaE5vdGlmaWNhdGlvblNlcnZpY2UoY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpCgogICAgICAgIHNlbGYuY3VzdG9tTGFiZWwgPSBOb25lCiAgICAgICAgaWYgY29uZmln
 dXJhdGlvbkF0dHJpYnV0ZXMuY29udGFpbnNLZXkoImxhYmVsIik6CiAgICAgICAgICAgIHNlbGYuY3VzdG9tTGFiZWwgPSBjb25maWd1cmF0aW9uQXR0cmlidXRlcy5nZXQoImxhYmVsIikuZ2V0VmF
 sdWUyKCkKCiAgICAgICAgc2VsZi5jdXN0b21Rck9wdGlvbnMgPSB7fQogICAgICAgIGlmIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmNvbnRhaW5zS2V5KCJxcl9vcHRpb25zIik6CiAgICAgICAgIC
 AgIHNlbGYuY3VzdG9tUXJPcHRpb25zID0gY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuZ2V0KCJxcl9vcHRpb25zIikuZ2V0VmFsdWUyKCkKCiAgICAgICAgcHJpbnQgIlN1cGVyLUdsdXUuIEluaXRpY
 WxpemVkIHN1Y2Nlc3NmdWxseS4gb25lU3RlcDogJyVzJywgdHdvU3RlcDogJyVzJywgcHVzaE5vdGlmaWNhdGlvbnM6ICclcycsIGN1c3RvbUxhYmVsOiAnJXMnIiAlIChzZWxmLm9uZVN0ZXAsIHNl
 bGYudHdvU3RlcCwgc2VsZi5lbmFibGVkUHVzaE5vdGlmaWNhdGlvbnMsIHNlbGYuY3VzdG9tTGFiZWwpCgogICAgICAgIHJldHVybiBUcnVlICAgCgogICAgZGVmIGRlc3Ryb3koc2VsZiwgY29uZml
 ndXJhdGlvbkF0dHJpYnV0ZXMpOgogICAgICAgIHByaW50ICJTdXBlci1HbHV1LiBEZXN0cm95IgogICAgICAgIHByaW50ICJTdXBlci1HbHV1LiBEZXN0cm95ZWQgc3VjY2Vzc2Z1bGx5IgogICAgIC
 AgIHJldHVybiBUcnVlCgogICAgZGVmIGdldEFwaVZlcnNpb24oc2VsZik6CiAgICAgICAgcmV0dXJuIDEKCiAgICBkZWYgaXNWYWxpZEF1dGhlbnRpY2F0aW9uTWV0aG9kKHNlbGYsIHVzYWdlVHlwZ
 SwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOgogICAgICAgIHJldHVybiBUcnVlCgogICAgZGVmIGdldEFsdGVybmF0aXZlQXV0aGVudGljYXRpb25NZXRob2Qoc2VsZiwgdXNhZ2VUeXBlLCBjb25m
 aWd1cmF0aW9uQXR0cmlidXRlcyk6CiAgICAgICAgcmV0dXJuIE5vbmUKCiAgICBkZWYgYXV0aGVudGljYXRlKHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCByZXF1ZXN0UGFyYW1ldGVycyw
 gc3RlcCk6CiAgICAgICAgY3JlZGVudGlhbHMgPSBJZGVudGl0eS5pbnN0YW5jZSgpLmdldENyZWRlbnRpYWxzKCkKICAgICAgICB1c2VyX25hbWUgPSBjcmVkZW50aWFscy5nZXRVc2VybmFtZSgpCg
 ogICAgICAgIGNvbnRleHQgPSBDb250ZXh0cy5nZXRFdmVudENvbnRleHQoKQogICAgICAgIHNlc3Npb25fYXR0cmlidXRlcyA9IGNvbnRleHQuZ2V0KCJzZXNzaW9uQXR0cmlidXRlcyIpCgogICAgI
 CAgIGNsaWVudF9yZWRpcmVjdF91cmkgPSBzZWxmLmdldENsaWVudFJlZGlyZWNVcmkoc2Vzc2lvbl9hdHRyaWJ1dGVzKQogICAgICAgIGlmIGNsaWVudF9yZWRpcmVjdF91cmkgPT0gTm9uZToKICAg
 ICAgICAgICAgcHJpbnQgIlN1cGVyLUdsdXUuIEF1dGhlbnRpY2F0ZS4gcmVkaXJlY3RfdXJpIGlzIG5vdCBzZXQiCiAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICBzZWxmLnNldEV2ZW5
 0Q29udGV4dFBhcmFtZXRlcnMoY29udGV4dCkKCiAgICAgICAgdXNlclNlcnZpY2UgPSBVc2VyU2VydmljZS5pbnN0YW5jZSgpCiAgICAgICAgZGV2aWNlUmVnaXN0cmF0aW9uU2VydmljZSA9IERldm
 ljZVJlZ2lzdHJhdGlvblNlcnZpY2UuaW5zdGFuY2UoKQogICAgICAgIGlmIHN0ZXAgPT0gMToKICAgICAgICAgICAgcHJpbnQgIlN1cGVyLUdsdXUuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxIgogI
 CAgICAgICAgICBpZiBzZWxmLm9uZVN0ZXA6CiAgCiAgICAgICAgICAgICAgICBzZXNzaW9uX2RldmljZV9zdGF0dXMgPSBzZWxmLmdldFNlc3Npb25EZXZpY2VTdGF0dXMoc2Vzc2lvbl9hdHRyaWJ1
 dGVzLCB1c2VyX25hbWUpCiAgICAgICAgICAgICAgICBpZiBzZXNzaW9uX2RldmljZV9zdGF0dXMgPT0gTm9uZToKICAgICAgICAgICAgICAgICAgICByZXR1cm4KCiAgICAgICAgICAgICAgICB1MmZ
 fZGV2aWNlX2lkID0gc2Vzc2lvbl9kZXZpY2Vfc3RhdHVzWydkZXZpY2VfaWQnXQoKICAgICAgICAgICAgICAgIHZhbGlkYXRpb25fcmVzdWx0ID0gc2VsZi52YWxpZGF0ZVNlc3Npb25EZXZpY2VTdG
 F0dXMoY2xpZW50X3JlZGlyZWN0X3VyaSwgc2Vzc2lvbl9kZXZpY2Vfc3RhdHVzKQogICAgICAgICAgICAgICAgaWYgdmFsaWRhdGlvbl9yZXN1bHQ6CiAgICAgICAgICAgICAgICAgICAgcHJpbnQgI
 lN1cGVyLUdsdXUuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxLiBVc2VyIHN1Y2Nlc3NmdWxseSBhdXRoZW50aWNhdGVkIHdpdGggdTJmX2RldmljZSAnJXMnIiAlIHUyZl9kZXZpY2VfaWQKICAgICAg
 ICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICBpZiBub3Qgc2Vzc2lvbl9kZXZpY2Vfc3RhdHV
 zWydvbmVfc3RlcCddOgogICAgICAgICAgICAgICAgICAgIHByaW50ICJTdXBlci1HbHV1LiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gdTJmX2RldmljZSAnJXMnIGlzIG5vdCBvbmUgc3RlcCBkZX
 ZpY2UiICUgdTJmX2RldmljZV9pZAogICAgICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgIyBUaGVyZSBhcmUgdHdvIHN0ZXBzI
 G9ubHkgaW4gZW5yb2xsbWVudCBtb2RlCiAgICAgICAgICAgICAgICBpZiBzZXNzaW9uX2RldmljZV9zdGF0dXNbJ2Vucm9sbCddOgogICAgICAgICAgICAgICAgICAgIHJldHVybiB2YWxpZGF0aW9u
 X3Jlc3VsdAoKICAgICAgICAgICAgICAgIGNvbnRleHQuc2V0KCJzdXBlcl9nbHV1X2NvdW50X2xvZ2luX3N0ZXBzIiwgMSkKCiAgICAgICAgICAgICAgICB1c2VyX2ludW0gPSBzZXNzaW9uX2Rldml
 jZV9zdGF0dXNbJ3VzZXJfaW51bSddCgogICAgICAgICAgICAgICAgdTJmX2RldmljZSA9IGRldmljZVJlZ2lzdHJhdGlvblNlcnZpY2UuZmluZFVzZXJEZXZpY2VSZWdpc3RyYXRpb24odXNlcl9pbn
 VtLCB1MmZfZGV2aWNlX2lkLCAib3hJZCIpCiAgICAgICAgICAgICAgICBpZiB1MmZfZGV2aWNlID09IE5vbmU6CiAgICAgICAgICAgICAgICAgICAgcHJpbnQgIlN1cGVyLUdsdXUuIEF1dGhlbnRpY
 2F0ZSBmb3Igc3RlcCAxLiBGYWlsZWQgdG8gbG9hZCB1MmZfZGV2aWNlICclcyciICUgdTJmX2RldmljZV9pZAogICAgICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgICAg
 IGxvZ2dlZF9pbiA9IHVzZXJTZXJ2aWNlLmF1dGhlbnRpY2F0ZSh1c2VyX25hbWUpCiAgICAgICAgICAgICAgICBpZiBub3QgbG9nZ2VkX2luOgogICAgICAgICAgICAgICAgICAgIHByaW50ICJTdXB
 lci1HbHV1LiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gRmFpbGVkIHRvIGF1dGhlbnRpY2F0ZSB1c2VyICclcyciICUgdXNlcl9uYW1lCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlCg
 ogICAgICAgICAgICAgICAgcHJpbnQgIlN1cGVyLUdsdXUuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxLiBVc2VyICclcycgc3VjY2Vzc2Z1bGx5IGF1dGhlbnRpY2F0ZWQgd2l0aCB1MmZfZGV2aWNlI
 CclcyciICUgKHVzZXJfbmFtZSwgdTJmX2RldmljZV9pZCkKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgcmV0dXJuIFRydWUKICAgICAgICAgICAgZWxpZiBzZWxmLnR3b1N0ZXA6CiAg
 ICAgICAgICAgICAgICBhdXRoZW50aWNhdGVkX3VzZXIgPSBzZWxmLnByb2Nlc3NCYXNpY0F1dGhlbnRpY2F0aW9uKGNyZWRlbnRpYWxzKQogICAgICAgICAgICAgICAgaWYgYXV0aGVudGljYXRlZF9
 1c2VyID09IE5vbmU6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlCiAgICAKICAgICAgICAgICAgICAgIGF1dGhfbWV0aG9kID0gJ2F1dGhlbnRpY2F0ZScKICAgICAgICAgICAgICAgIG
 Vucm9sbG1lbnRfbW9kZSA9IFNlcnZlclV0aWwuZ2V0Rmlyc3RWYWx1ZShyZXF1ZXN0UGFyYW1ldGVycywgImxvZ2luRm9ybTpyZWdpc3RlckJ1dHRvbiIpCiAgICAgICAgICAgICAgICBpZiBTdHJpb
 mdIZWxwZXIuaXNOb3RFbXB0eShlbnJvbGxtZW50X21vZGUpOgogICAgICAgICAgICAgICAgICAgIGF1dGhfbWV0aG9kID0gJ2Vucm9sbCcKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAg
 aWYgYXV0aF9tZXRob2QgPT0gJ2F1dGhlbnRpY2F0ZSc6CiAgICAgICAgICAgICAgICAgICAgdXNlcl9pbnVtID0gdXNlclNlcnZpY2UuZ2V0VXNlckludW0oYXV0aGVudGljYXRlZF91c2VyKQogICA
 gICAgICAgICAgICAgICAgIHUyZl9kZXZpY2VzX2xpc3QgPSBkZXZpY2VSZWdpc3RyYXRpb25TZXJ2aWNlLmZpbmRVc2VyRGV2aWNlUmVnaXN0cmF0aW9ucyh1c2VyX2ludW0sIGNsaWVudF9yZWRpcm
 VjdF91cmksICJveElkIikKICAgICAgICAgICAgICAgICAgICBpZiB1MmZfZGV2aWNlc19saXN0LnNpemUoKSA9PSAwOgogICAgICAgICAgICAgICAgICAgICAgICBhdXRoX21ldGhvZCA9ICdlbnJvb
 GwnCiAgICAgICAgICAgICAgICAgICAgICAgIHByaW50ICJTdXBlci1HbHV1LiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gVGhlcmUgaXMgbm8gVTJGICclcycgdXNlciBkZXZpY2VzIGFzc29jaWF0
 ZWQgd2l0aCBhcHBsaWNhdGlvbiAnJXMnLiBDaGFuZ2luZyBhdXRoX21ldGhvZCB0byAnJXMnIiAlICh1c2VyX25hbWUsIGNsaWVudF9yZWRpcmVjdF91cmksIGF1dGhfbWV0aG9kKQogICAgCiAgICA
 gICAgICAgICAgICBwcmludCAiU3VwZXItR2x1dS4gQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIGF1dGhfbWV0aG9kOiAnJXMnIiAlIGF1dGhfbWV0aG9kCiAgICAgICAgICAgICAgICAKICAgICAgIC
 AgICAgICAgIGNvbnRleHQuc2V0KCJzdXBlcl9nbHV1X2F1dGhfbWV0aG9kIiwgYXV0aF9tZXRob2QpCgogICAgICAgICAgICAgICAgcmV0dXJuIFRydWUKCiAgICAgICAgICAgIHJldHVybiBGYWxzZ
 QogICAgICAgIGVsaWYgc3RlcCA9PSAyOgogICAgICAgICAgICBwcmludCAiU3VwZXItR2x1dS4gQXV0aGVudGljYXRlIGZvciBzdGVwIDIiCiAgICAgICAgICAgIHNlc3Npb25fYXR0cmlidXRlcyA9
 IGNvbnRleHQuZ2V0KCJzZXNzaW9uQXR0cmlidXRlcyIpCgogICAgICAgICAgICBzZXNzaW9uX2RldmljZV9zdGF0dXMgPSBzZWxmLmdldFNlc3Npb25EZXZpY2VTdGF0dXMoc2Vzc2lvbl9hdHRyaWJ
 1dGVzLCB1c2VyX25hbWUpCiAgICAgICAgICAgIGlmIHNlc3Npb25fZGV2aWNlX3N0YXR1cyA9PSBOb25lOgogICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgICAgICAgICB1MmZfZGV2aW
 NlX2lkID0gc2Vzc2lvbl9kZXZpY2Vfc3RhdHVzWydkZXZpY2VfaWQnXQoKICAgICAgICAgICAgIyBUaGVyZSBhcmUgdHdvIHN0ZXBzIG9ubHkgaW4gZW5yb2xsbWVudCBtb2RlCiAgICAgICAgICAgI
 GlmIHNlbGYub25lU3RlcCBhbmQgc2Vzc2lvbl9kZXZpY2Vfc3RhdHVzWydlbnJvbGwnXToKICAgICAgICAgICAgICAgIGF1dGhlbnRpY2F0ZWRfdXNlciA9IHNlbGYucHJvY2Vzc0Jhc2ljQXV0aGVu
 dGljYXRpb24oY3JlZGVudGlhbHMpCiAgICAgICAgICAgICAgICBpZiBhdXRoZW50aWNhdGVkX3VzZXIgPT0gTm9uZToKICAgICAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgICA
 gICAgICB1c2VyX2ludW0gPSB1c2VyU2VydmljZS5nZXRVc2VySW51bShhdXRoZW50aWNhdGVkX3VzZXIpCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIGF0dGFjaF9yZXN1bHQgPSBkZX
 ZpY2VSZWdpc3RyYXRpb25TZXJ2aWNlLmF0dGFjaFVzZXJEZXZpY2VSZWdpc3RyYXRpb24odXNlcl9pbnVtLCB1MmZfZGV2aWNlX2lkKQoKICAgICAgICAgICAgICAgIHByaW50ICJTdXBlci1HbHV1L
 iBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMi4gUmVzdWx0IGFmdGVyIGF0dGFjaGluZyB1MmZfZGV2aWNlICclcycgdG8gdXNlciAnJXMnOiAnJXMnIiAlICh1MmZfZGV2aWNlX2lkLCB1c2VyX25hbWUs
 IGF0dGFjaF9yZXN1bHQpIAoKICAgICAgICAgICAgICAgIHJldHVybiBhdHRhY2hfcmVzdWx0CiAgICAgICAgICAgIGVsaWYgc2VsZi50d29TdGVwOgogICAgICAgICAgICAgICAgaWYgdXNlcl9uYW1
 lID09IE5vbmU6CiAgICAgICAgICAgICAgICAgICAgcHJpbnQgIlN1cGVyLUdsdXUuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAyLiBGYWlsZWQgdG8gZGV0ZXJtaW5lIHVzZXIgbmFtZSIKICAgICAgIC
 AgICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgICAgICAgICB2YWxpZGF0aW9uX3Jlc3VsdCA9IHNlbGYudmFsaWRhdGVTZXNzaW9uRGV2aWNlU3RhdHVzKGNsaWVudF9yZWRpcmVjdF91c
 mksIHNlc3Npb25fZGV2aWNlX3N0YXR1cywgdXNlcl9uYW1lKQogICAgICAgICAgICAgICAgaWYgdmFsaWRhdGlvbl9yZXN1bHQ6CiAgICAgICAgICAgICAgICAgICAgcHJpbnQgIlN1cGVyLUdsdXUu
 IEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAyLiBVc2VyICclcycgc3VjY2Vzc2Z1bGx5IGF1dGhlbnRpY2F0ZWQgd2l0aCB1MmZfZGV2aWNlICclcyciICUgKHVzZXJfbmFtZSwgdTJmX2RldmljZV9pZCk
 KICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIHN1cGVyX2dsdXVfcmVxdWVzdCA9IGpzb2
 4ubG9hZHMoc2Vzc2lvbl9kZXZpY2Vfc3RhdHVzWydzdXBlcl9nbHV1X3JlcXVlc3QnXSkKICAgICAgICAgICAgICAgIGF1dGhfbWV0aG9kID0gc3VwZXJfZ2x1dV9yZXF1ZXN0WydtZXRob2QnXQogI
 CAgICAgICAgICAgICAgaWYgYXV0aF9tZXRob2QgaW4gWydlbnJvbGwnLCAnYXV0aGVudGljYXRlJ106CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHZhbGlkYXRpb25fcmVzdWx0CgogICAgICAg
 ICAgICAgICAgcHJpbnQgIlN1cGVyLUdsdXUuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAyLiBVMkYgYXV0aF9tZXRob2QgaXMgaW52YWxpZCIKCiAgICAgICAgICAgIHJldHVybiBGYWxzZQogICAgICA
 gIGVsc2U6CiAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgIGRlZiBwcmVwYXJlRm9yU3RlcChzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcywgcmVxdWVzdFBhcmFtZXRlcnMsIHN0ZXApOg
 ogICAgICAgIGNvbnRleHQgPSBDb250ZXh0cy5nZXRFdmVudENvbnRleHQoKQogICAgICAgIHNlc3Npb25fYXR0cmlidXRlcyA9IGNvbnRleHQuZ2V0KCJzZXNzaW9uQXR0cmlidXRlcyIpCgogICAgI
 CAgIGNsaWVudF9yZWRpcmVjdF91cmkgPSBzZWxmLmdldENsaWVudFJlZGlyZWNVcmkoc2Vzc2lvbl9hdHRyaWJ1dGVzKQogICAgICAgIGlmIGNsaWVudF9yZWRpcmVjdF91cmkgPT0gTm9uZToKICAg
 ICAgICAgICAgcHJpbnQgIlN1cGVyLUdsdXUuIFByZXBhcmUgZm9yIHN0ZXAuIHJlZGlyZWN0X3VyaSBpcyBub3Qgc2V0IgogICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgc2VsZi5zZXR
 FdmVudENvbnRleHRQYXJhbWV0ZXJzKGNvbnRleHQpCgogICAgICAgIGlmIHN0ZXAgPT0gMToKICAgICAgICAgICAgcHJpbnQgIlN1cGVyLUdsdXUuIFByZXBhcmUgZm9yIHN0ZXAgMSIKICAgICAgIC
 AgICAgaWYgc2VsZi5vbmVTdGVwOgogICAgICAgICAgICAgICAgc2Vzc2lvbl9zdGF0ZSA9IFNlc3Npb25TdGF0ZVNlcnZpY2UuaW5zdGFuY2UoKS5nZXRTZXNzaW9uU3RhdGVGcm9tQ29va2llKCkKI
 CAgICAgICAgICAgICAgIGlmIFN0cmluZ0hlbHBlci5pc0VtcHR5KHNlc3Npb25fc3RhdGUpOgogICAgICAgICAgICAgICAgICAgIHByaW50ICJTdXBlci1HbHV1LiBQcmVwYXJlIGZvciBzdGVwIDIu
 IEZhaWxlZCB0byBkZXRlcm1pbmUgc2Vzc2lvbl9zdGF0ZSIKICAgICAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICBpc3N1ZXIgPSBDb25maWd
 1cmF0aW9uRmFjdG9yeS5pbnN0YW5jZSgpLmdldENvbmZpZ3VyYXRpb24oKS5nZXRJc3N1ZXIoKQogICAgICAgICAgICAgICAgc3VwZXJfZ2x1dV9yZXF1ZXN0X2RpY3Rpb25hcnkgPSB7J2FwcCc6IG
 NsaWVudF9yZWRpcmVjdF91cmksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2lzc3Vlcic6IGlzc3VlciwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnc3Rhd
 GUnOiBzZXNzaW9uX3N0YXRlLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdjcmVhdGVkJzogZGF0ZXRpbWUuZGF0ZXRpbWUubm93KCkuaXNvZm9ybWF0KCl9CgogICAgICAgICAg
 ICAgICAgc2VsZi5hZGRHZW9sb2NhdGlvbkRhdGEoc2Vzc2lvbl9hdHRyaWJ1dGVzLCBzdXBlcl9nbHV1X3JlcXVlc3RfZGljdGlvbmFyeSkKCiAgICAgICAgICAgICAgICBzdXBlcl9nbHV1X3JlcXV
 lc3QgPSBqc29uLmR1bXBzKHN1cGVyX2dsdXVfcmVxdWVzdF9kaWN0aW9uYXJ5LCBzZXBhcmF0b3JzPSgnLCcsJzonKSkKICAgICAgICAgICAgICAgIHByaW50ICJTdXBlci1HbHV1LiBQcmVwYXJlIG
 ZvciBzdGVwIDEuIFByZXBhcmVkIHN1cGVyX2dsdXVfcmVxdWVzdDoiLCBzdXBlcl9nbHV1X3JlcXVlc3QKICAgIAogICAgICAgICAgICAgICAgY29udGV4dC5zZXQoInN1cGVyX2dsdXVfcmVxdWVzd
 CIsIHN1cGVyX2dsdXVfcmVxdWVzdCkKIyAgICAgICAgICAgIGVsaWYgc2VsZi50d29TdGVwOgojICAgICAgICAgICAgICAgIGNvbnRleHQuc2V0KCJkaXNwbGF5X3JlZ2lzdGVyX2FjdGlvbiIsIFRy
 dWUpCgogICAgICAgICAgICByZXR1cm4gVHJ1ZQogICAgICAgIGVsaWYgc3RlcCA9PSAyOgogICAgICAgICAgICBwcmludCAiU3VwZXItR2x1dS4gUHJlcGFyZSBmb3Igc3RlcCAyIgogICAgICAgICA
 gICBpZiBzZWxmLm9uZVN0ZXA6CiAgICAgICAgICAgICAgICByZXR1cm4gVHJ1ZQoKICAgICAgICAgICAgYXV0aGVudGljYXRpb25TZXJ2aWNlID0gQXV0aGVudGljYXRpb25TZXJ2aWNlLmluc3Rhbm
 NlKCkKICAgICAgICAgICAgdXNlciA9IGF1dGhlbnRpY2F0aW9uU2VydmljZS5nZXRBdXRoZW50aWNhdGVkVXNlcigpCiAgICAgICAgICAgIGlmIHVzZXIgPT0gTm9uZToKICAgICAgICAgICAgICAgI
 HByaW50ICJTdXBlci1HbHV1LiBQcmVwYXJlIGZvciBzdGVwIDIuIEZhaWxlZCB0byBkZXRlcm1pbmUgdXNlciBuYW1lIgogICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgICAgICAgICBp
 ZiBzZXNzaW9uX2F0dHJpYnV0ZXMuY29udGFpbnNLZXkoInN1cGVyX2dsdXVfcmVxdWVzdCIpOgogICAgICAgICAgICAgICAgcHJpbnQgIlN1cGVyLUdsdXUuIFByZXBhcmUgZm9yIHN0ZXAgMi4gUmV
 xdWVzdCB3YXMgZ2VuZXJhdGVkIGFscmVhZHkiCiAgICAgICAgICAgICAgICByZXR1cm4gVHJ1ZQogICAgICAgICAgICAKICAgICAgICAgICAgc2Vzc2lvbl9zdGF0ZSA9IFNlc3Npb25TdGF0ZVNlcn
 ZpY2UuaW5zdGFuY2UoKS5nZXRTZXNzaW9uU3RhdGVGcm9tQ29va2llKCkKICAgICAgICAgICAgaWYgU3RyaW5nSGVscGVyLmlzRW1wdHkoc2Vzc2lvbl9zdGF0ZSk6CiAgICAgICAgICAgICAgICBwc
 mludCAiU3VwZXItR2x1dS4gUHJlcGFyZSBmb3Igc3RlcCAyLiBGYWlsZWQgdG8gZGV0ZXJtaW5lIHNlc3Npb25fc3RhdGUiCiAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgICAg
 IGF1dGhfbWV0aG9kID0gc2Vzc2lvbl9hdHRyaWJ1dGVzLmdldCgic3VwZXJfZ2x1dV9hdXRoX21ldGhvZCIpCiAgICAgICAgICAgIGlmIFN0cmluZ0hlbHBlci5pc0VtcHR5KGF1dGhfbWV0aG9kKTo
 KICAgICAgICAgICAgICAgIHByaW50ICJTdXBlci1HbHV1LiBQcmVwYXJlIGZvciBzdGVwIDIuIEZhaWxlZCB0byBkZXRlcm1pbmUgYXV0aF9tZXRob2QiCiAgICAgICAgICAgICAgICByZXR1cm4gRm
 Fsc2UKCiAgICAgICAgICAgIHByaW50ICJTdXBlci1HbHV1LiBQcmVwYXJlIGZvciBzdGVwIDIuIGF1dGhfbWV0aG9kOiAnJXMnIiAlIGF1dGhfbWV0aG9kCiAgICAgICAgICAgIAogICAgICAgICAgI
 CBpc3N1ZXIgPSBDb25maWd1cmF0aW9uRmFjdG9yeS5pbnN0YW5jZSgpLmdldENvbmZpZ3VyYXRpb24oKS5nZXRJc3N1ZXIoKQogICAgICAgICAgICBzdXBlcl9nbHV1X3JlcXVlc3RfZGljdGlvbmFy
 eSA9IHsndXNlcm5hbWUnOiB1c2VyLmdldFVzZXJJZCgpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2FwcCc6IGNsaWVudF9yZWRpcmVjdF91cmksCiAgICAgICAgICAgICAgICAgICA
 gICAgICAgICAgICAnaXNzdWVyJzogaXNzdWVyLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ21ldGhvZCc6IGF1dGhfbWV0aG9kLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIC
 AgJ3N0YXRlJzogc2Vzc2lvbl9zdGF0ZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdjcmVhdGVkJzogZGF0ZXRpbWUuZGF0ZXRpbWUubm93KCkuaXNvZm9ybWF0KCl9CgogICAgICAgI
 CAgICBzZWxmLmFkZEdlb2xvY2F0aW9uRGF0YShzZXNzaW9uX2F0dHJpYnV0ZXMsIHN1cGVyX2dsdXVfcmVxdWVzdF9kaWN0aW9uYXJ5KQoKICAgICAgICAgICAgc3VwZXJfZ2x1dV9yZXF1ZXN0ID0g
 anNvbi5kdW1wcyhzdXBlcl9nbHV1X3JlcXVlc3RfZGljdGlvbmFyeSwgc2VwYXJhdG9ycz0oJywnLCc6JykpCiAgICAgICAgICAgIHByaW50ICJTdXBlci1HbHV1LiBQcmVwYXJlIGZvciBzdGVwIDI
 uIFByZXBhcmVkIHN1cGVyX2dsdXVfcmVxdWVzdDoiLCBzdXBlcl9nbHV1X3JlcXVlc3QKCiAgICAgICAgICAgIGNvbnRleHQuc2V0KCJzdXBlcl9nbHV1X3JlcXVlc3QiLCBzdXBlcl9nbHV1X3JlcX
 Vlc3QpCgogICAgICAgICAgICBpZiBhdXRoX21ldGhvZCBpbiBbJ2F1dGhlbnRpY2F0ZSddOgogICAgICAgICAgICAgICAgc2VsZi5zZW5kUHVzaE5vdGlmaWNhdGlvbihjbGllbnRfcmVkaXJlY3Rfd
 XJpLCB1c2VyLCBzdXBlcl9nbHV1X3JlcXVlc3QpCgogICAgICAgICAgICByZXR1cm4gVHJ1ZQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgIGRlZiBnZXRFeHRyYVBh
 cmFtZXRlcnNGb3JTdGVwKHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCBzdGVwKToKICAgICAgICBpZiBzdGVwID09IDE6CiAgICAgICAgICAgIGlmIHNlbGYub25lU3RlcDogICAgICAgIAo
 gICAgICAgICAgICAgICAgcmV0dXJuIEFycmF5cy5hc0xpc3QoInN1cGVyX2dsdXVfcmVxdWVzdCIpCiAgICAgICAgICAgIGVsaWYgc2VsZi50d29TdGVwOgogICAgICAgICAgICAgICAgcmV0dXJuIE
 FycmF5cy5hc0xpc3QoImRpc3BsYXlfcmVnaXN0ZXJfYWN0aW9uIikKICAgICAgICBlbGlmIHN0ZXAgPT0gMjoKICAgICAgICAgICAgcmV0dXJuIEFycmF5cy5hc0xpc3QoInN1cGVyX2dsdXVfYXV0a
 F9tZXRob2QiLCAic3VwZXJfZ2x1dV9yZXF1ZXN0IikKICAgICAgICAKICAgICAgICByZXR1cm4gTm9uZQoKICAgIGRlZiBnZXRDb3VudEF1dGhlbnRpY2F0aW9uU3RlcHMoc2VsZiwgY29uZmlndXJh
 dGlvbkF0dHJpYnV0ZXMpOgogICAgICAgIGNvbnRleHQgPSBDb250ZXh0cy5nZXRFdmVudENvbnRleHQoKQogICAgICAgIGlmIGNvbnRleHQuaXNTZXQoInN1cGVyX2dsdXVfY291bnRfbG9naW5fc3R
 lcHMiKToKICAgICAgICAgICAgcmV0dXJuIGNvbnRleHQuZ2V0KCJzdXBlcl9nbHV1X2NvdW50X2xvZ2luX3N0ZXBzIikKICAgICAgICBlbHNlOgogICAgICAgICAgICByZXR1cm4gMgoKICAgIGRlZi
 BnZXRQYWdlRm9yU3RlcChzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcywgc3RlcCk6CiAgICAgICAgaWYgc3RlcCA9PSAxOgogICAgICAgICAgICBpZiBzZWxmLm9uZVN0ZXA6ICAgICAgICAKI
 CAgICAgICAgICAgICAgIHJldHVybiAiL2F1dGgvc3VwZXItZ2x1dS9sb2dpbi54aHRtbCIKICAgICAgICBlbGlmIHN0ZXAgPT0gMjoKICAgICAgICAgICAgaWYgc2VsZi5vbmVTdGVwOgogICAgICAg
 ICAgICAgICAgcmV0dXJuICIvbG9naW4ueGh0bWwiCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICByZXR1cm4gIi9hdXRoL3N1cGVyLWdsdXUvbG9naW4ueGh0bWwiCgogICAgICAgIHJ
 ldHVybiAiIgoKICAgIGRlZiBsb2dvdXQoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIHJlcXVlc3RQYXJhbWV0ZXJzKToKICAgICAgICByZXR1cm4gVHJ1ZQoKICAgIGRlZiBwcm9jZXNzQm
 FzaWNBdXRoZW50aWNhdGlvbihzZWxmLCBjcmVkZW50aWFscyk6CiAgICAgICAgdXNlclNlcnZpY2UgPSBVc2VyU2VydmljZS5pbnN0YW5jZSgpCgogICAgICAgIHVzZXJfbmFtZSA9IGNyZWRlbnRpY
 WxzLmdldFVzZXJuYW1lKCkKICAgICAgICB1c2VyX3Bhc3N3b3JkID0gY3JlZGVudGlhbHMuZ2V0UGFzc3dvcmQoKQoKICAgICAgICBsb2dnZWRfaW4gPSBGYWxzZQogICAgICAgIGlmIFN0cmluZ0hl
 bHBlci5pc05vdEVtcHR5U3RyaW5nKHVzZXJfbmFtZSkgYW5kIFN0cmluZ0hlbHBlci5pc05vdEVtcHR5U3RyaW5nKHVzZXJfcGFzc3dvcmQpOgogICAgICAgICAgICBsb2dnZWRfaW4gPSB1c2VyU2V
 ydmljZS5hdXRoZW50aWNhdGUodXNlcl9uYW1lLCB1c2VyX3Bhc3N3b3JkKQoKICAgICAgICBpZiBub3QgbG9nZ2VkX2luOgogICAgICAgICAgICByZXR1cm4gTm9uZQoKICAgICAgICBmaW5kX3VzZX
 JfYnlfdWlkID0gdXNlclNlcnZpY2UuZ2V0VXNlcih1c2VyX25hbWUpCiAgICAgICAgaWYgZmluZF91c2VyX2J5X3VpZCA9PSBOb25lOgogICAgICAgICAgICBwcmludCAiU3VwZXItR2x1dS4gUHJvY
 2VzcyBiYXNpYyBhdXRoZW50aWNhdGlvbi4gRmFpbGVkIHRvIGZpbmQgdXNlciAnJXMnIiAlIHVzZXJfbmFtZQogICAgICAgICAgICByZXR1cm4gTm9uZQogICAgICAgIAogICAgICAgIHJldHVybiBm
 aW5kX3VzZXJfYnlfdWlkCgogICAgZGVmIHZhbGlkYXRlU2Vzc2lvbkRldmljZVN0YXR1cyhzZWxmLCBjbGllbnRfcmVkaXJlY3RfdXJpLCBzZXNzaW9uX2RldmljZV9zdGF0dXMsIHVzZXJfbmFtZSA
 9IE5vbmUpOgogICAgICAgIHVzZXJTZXJ2aWNlID0gVXNlclNlcnZpY2UuaW5zdGFuY2UoKQogICAgICAgIGRldmljZVJlZ2lzdHJhdGlvblNlcnZpY2UgPSBEZXZpY2VSZWdpc3RyYXRpb25TZXJ2aW
 NlLmluc3RhbmNlKCkKCiAgICAgICAgdTJmX2RldmljZV9pZCA9IHNlc3Npb25fZGV2aWNlX3N0YXR1c1snZGV2aWNlX2lkJ10KCiAgICAgICAgdTJmX2RldmljZSA9IE5vbmUKICAgICAgICBpZiBzZ
 XNzaW9uX2RldmljZV9zdGF0dXNbJ2Vucm9sbCddIGFuZCBzZXNzaW9uX2RldmljZV9zdGF0dXNbJ29uZV9zdGVwJ106CiAgICAgICAgICAgIHUyZl9kZXZpY2UgPSBkZXZpY2VSZWdpc3RyYXRpb25T
 ZXJ2aWNlLmZpbmRPbmVTdGVwVXNlckRldmljZVJlZ2lzdHJhdGlvbih1MmZfZGV2aWNlX2lkKQogICAgICAgICAgICBpZiB1MmZfZGV2aWNlID09IE5vbmU6CiAgICAgICAgICAgICAgICBwcmludCA
 iU3VwZXItR2x1dS4gVmFsaWRhdGUgc2Vzc2lvbiBkZXZpY2Ugc3RhdHVzLiBUaGVyZSBpcyBubyBvbmUgc3RlcCB1MmZfZGV2aWNlICclcyciICUgdTJmX2RldmljZV9pZAogICAgICAgICAgICAgIC
 AgcmV0dXJuIEZhbHNlCiAgICAgICAgZWxzZToKICAgICAgICAgICAgIyBWYWxpZGF0ZSBpZiB1c2VyIGhhcyBzcGVjaWZpZWQgZGV2aWNlX2lkIGVucm9sbG1lbnQKICAgICAgICAgICAgdXNlcl9pb
 nVtID0gdXNlclNlcnZpY2UuZ2V0VXNlckludW0odXNlcl9uYW1lKQoKICAgICAgICAgICAgaWYgc2Vzc2lvbl9kZXZpY2Vfc3RhdHVzWydvbmVfc3RlcCddOgogICAgICAgICAgICAgICAgdXNlcl9p
 bnVtID0gc2Vzc2lvbl9kZXZpY2Vfc3RhdHVzWyd1c2VyX2ludW0nXQogICAgCiAgICAgICAgICAgIHUyZl9kZXZpY2UgPSBkZXZpY2VSZWdpc3RyYXRpb25TZXJ2aWNlLmZpbmRVc2VyRGV2aWNlUmV
 naXN0cmF0aW9uKHVzZXJfaW51bSwgdTJmX2RldmljZV9pZCkKICAgICAgICAgICAgaWYgdTJmX2RldmljZSA9PSBOb25lOgogICAgICAgICAgICAgICAgcHJpbnQgIlN1cGVyLUdsdXUuIFZhbGlkYX
 RlIHNlc3Npb24gZGV2aWNlIHN0YXR1cy4gVGhlcmUgaXMgbm8gdTJmX2RldmljZSAnJXMnIGFzc29jaWF0ZWQgd2l0aCB1c2VyICclcyciICUgKHUyZl9kZXZpY2VfaWQsIHVzZXJfaW51bSkKICAgI
 CAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICBpZiBub3QgU3RyaW5nSGVscGVyLmVxdWFsc0lnbm9yZUNhc2UoY2xpZW50X3JlZGlyZWN0X3VyaSwgdTJmX2RldmljZS5hcHBsaWNhdGlv
 bik6CiAgICAgICAgICAgIHByaW50ICJTdXBlci1HbHV1LiBWYWxpZGF0ZSBzZXNzaW9uIGRldmljZSBzdGF0dXMuIHUyZl9kZXZpY2UgJyVzJyBhc3NvY2lhdGVkIHdpdGggb3RoZXIgYXBwbGljYXR
 pb24gJyVzJyIgJSAodTJmX2RldmljZV9pZCwgdTJmX2RldmljZS5hcHBsaWNhdGlvbikKICAgICAgICAgICAgcmV0dXJuIEZhbHNlCiAgICAgICAgCiAgICAgICAgcmV0dXJuIFRydWUKCiAgICBkZW
 YgZ2V0U2Vzc2lvbkRldmljZVN0YXR1cyhzZWxmLCBzZXNzaW9uX2F0dHJpYnV0ZXMsIHVzZXJfbmFtZSk6CiAgICAgICAgcHJpbnQgIlN1cGVyLUdsdXUuIEdldCBzZXNzaW9uIGRldmljZSBzdGF0d
 XMiCgogICAgICAgIGlmIG5vdCBzZXNzaW9uX2F0dHJpYnV0ZXMuY29udGFpbnNLZXkoInN1cGVyX2dsdXVfcmVxdWVzdCIpOgogICAgICAgICAgICBwcmludCAiU3VwZXItR2x1dS4gR2V0IHNlc3Np
 b24gZGV2aWNlIHN0YXR1cy4gVGhlcmUgaXMgbm8gU3VwZXItR2x1dSByZXF1ZXN0IGluIHNlc3Npb24gYXR0cmlidXRlcyIKICAgICAgICAgICAgcmV0dXJuIE5vbmUKCiAgICAgICAgIyBDaGVjayB
 zZXNzaW9uIHN0YXRlIGV4dGVuZGVkCiAgICAgICAgaWYgbm90IHNlc3Npb25fYXR0cmlidXRlcy5jb250YWluc0tleSgic2Vzc2lvbl9jdXN0b21fc3RhdGUiKToKICAgICAgICAgICAgcHJpbnQgIl
 N1cGVyLUdsdXUuIEdldCBzZXNzaW9uIGRldmljZSBzdGF0dXMuIFRoZXJlIGlzIG5vIHNlc3Npb25fY3VzdG9tX3N0YXRlIGluIHNlc3Npb24gYXR0cmlidXRlcyIKICAgICAgICAgICAgcmV0dXJuI
 E5vbmUKCiAgICAgICAgc2Vzc2lvbl9jdXN0b21fc3RhdGUgPSBzZXNzaW9uX2F0dHJpYnV0ZXMuZ2V0KCJzZXNzaW9uX2N1c3RvbV9zdGF0ZSIpCiAgICAgICAgaWYgbm90IFN0cmluZ0hlbHBlci5l
 cXVhbHNJZ25vcmVDYXNlKCJhcHByb3ZlZCIsIHNlc3Npb25fY3VzdG9tX3N0YXRlKToKICAgICAgICAgICAgcHJpbnQgIlN1cGVyLUdsdXUuIEdldCBzZXNzaW9uIGRldmljZSBzdGF0dXMuIFVzZXI
 gJyVzJyBub3QgYXBwcm92ZSBvciBub3QgcGFzcyBVMkYgYXV0aGVudGljYXRpb24uIHNlc3Npb25fY3VzdG9tX3N0YXRlOiAnJXMnIiAlICh1c2VyX25hbWUsIHNlc3Npb25fY3VzdG9tX3N0YXRlKQ
 ogICAgICAgICAgICByZXR1cm4gTm9uZQoKICAgICAgICAjIFRyeSB0byBmaW5kIGRldmljZV9pZCBpbiBzZXNzaW9uIGF0dHJpYnV0ZQogICAgICAgIGlmIG5vdCBzZXNzaW9uX2F0dHJpYnV0ZXMuY
 29udGFpbnNLZXkoIm94cHVzaDJfdTJmX2RldmljZV9pZCIpOgogICAgICAgICAgICBwcmludCAiU3VwZXItR2x1dS4gR2V0IHNlc3Npb24gZGV2aWNlIHN0YXR1cy4gVGhlcmUgaXMgbm8gdTJmX2Rl
 dmljZSBhc3NvY2lhdGVkIHdpdGggdGhpcyByZXF1ZXN0IgogICAgICAgICAgICByZXR1cm4gTm9uZQoKICAgICAgICAjIFRyeSB0byBmaW5kIHVzZXJfaW51bSBpbiBzZXNzaW9uIGF0dHJpYnV0ZQo
 gICAgICAgIGlmIG5vdCBzZXNzaW9uX2F0dHJpYnV0ZXMuY29udGFpbnNLZXkoIm94cHVzaDJfdTJmX2RldmljZV91c2VyX2ludW0iKToKICAgICAgICAgICAgcHJpbnQgIlN1cGVyLUdsdXUuIEdldC
 BzZXNzaW9uIGRldmljZSBzdGF0dXMuIFRoZXJlIGlzIG5vIHVzZXJfaW51bSBhc3NvY2lhdGVkIHdpdGggdGhpcyByZXF1ZXN0IgogICAgICAgICAgICByZXR1cm4gTm9uZQogICAgICAgIAogICAgI
 CAgIGVucm9sbCA9IEZhbHNlCiAgICAgICAgaWYgc2Vzc2lvbl9hdHRyaWJ1dGVzLmNvbnRhaW5zS2V5KCJveHB1c2gyX3UyZl9kZXZpY2VfZW5yb2xsIik6CiAgICAgICAgICAgIGVucm9sbCA9IFN0
 cmluZ0hlbHBlci5lcXVhbHNJZ25vcmVDYXNlKCJ0cnVlIiwgc2Vzc2lvbl9hdHRyaWJ1dGVzLmdldCgib3hwdXNoMl91MmZfZGV2aWNlX2Vucm9sbCIpKQoKICAgICAgICBvbmVfc3RlcCA9IEZhbHN
 lCiAgICAgICAgaWYgc2Vzc2lvbl9hdHRyaWJ1dGVzLmNvbnRhaW5zS2V5KCJveHB1c2gyX3UyZl9kZXZpY2Vfb25lX3N0ZXAiKToKICAgICAgICAgICAgb25lX3N0ZXAgPSBTdHJpbmdIZWxwZXIuZX
 F1YWxzSWdub3JlQ2FzZSgidHJ1ZSIsIHNlc3Npb25fYXR0cmlidXRlcy5nZXQoIm94cHVzaDJfdTJmX2RldmljZV9vbmVfc3RlcCIpKQogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICBzd
 XBlcl9nbHV1X3JlcXVlc3QgPSBzZXNzaW9uX2F0dHJpYnV0ZXMuZ2V0KCJzdXBlcl9nbHV1X3JlcXVlc3QiKQogICAgICAgIHUyZl9kZXZpY2VfaWQgPSBzZXNzaW9uX2F0dHJpYnV0ZXMuZ2V0KCJv
 eHB1c2gyX3UyZl9kZXZpY2VfaWQiKQogICAgICAgIHVzZXJfaW51bSA9IHNlc3Npb25fYXR0cmlidXRlcy5nZXQoIm94cHVzaDJfdTJmX2RldmljZV91c2VyX2ludW0iKQoKICAgICAgICBzZXNzaW9
 uX2RldmljZV9zdGF0dXMgPSB7InN1cGVyX2dsdXVfcmVxdWVzdCI6IHN1cGVyX2dsdXVfcmVxdWVzdCwgImRldmljZV9pZCI6IHUyZl9kZXZpY2VfaWQsICJ1c2VyX2ludW0iIDogdXNlcl9pbnVtLC
 AiZW5yb2xsIiA6IGVucm9sbCwgIm9uZV9zdGVwIiA6IG9uZV9zdGVwfQogICAgICAgIHByaW50ICJTdXBlci1HbHV1LiBHZXQgc2Vzc2lvbiBkZXZpY2Ugc3RhdHVzLiBzZXNzaW9uX2RldmljZV9zd
 GF0dXM6ICclcyciICUgKHNlc3Npb25fZGV2aWNlX3N0YXR1cykKICAgICAgICAKICAgICAgICByZXR1cm4gc2Vzc2lvbl9kZXZpY2Vfc3RhdHVzCgogICAgZGVmIGluaXRQdXNoTm90aWZpY2F0aW9u
 U2VydmljZShzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6CiAgICAgICAgcHJpbnQgIlN1cGVyLUdsdXUuIEluaXRpYWxpemUgbm90aWZpY2F0aW9uIHNlcnZpY2VzIgogICAgICAgIGlmIG5
 vdCBjb25maWd1cmF0aW9uQXR0cmlidXRlcy5jb250YWluc0tleSgiY3JlZGVudGlhbHNfZmlsZSIpOgogICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgc3VwZXJfZ2x1dV9jcmVkc19maW
 xlID0gY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuZ2V0KCJjcmVkZW50aWFsc19maWxlIikuZ2V0VmFsdWUyKCkKCiAgICAgICAgIyBMb2FkIGNyZWRlbnRpYWxzIGZyb20gZmlsZQogICAgICAgIGYgP
 SBvcGVuKHN1cGVyX2dsdXVfY3JlZHNfZmlsZSwgJ3InKQogICAgICAgIHRyeToKICAgICAgICAgICAgY3JlZHMgPSBqc29uLmxvYWRzKGYucmVhZCgpKQogICAgICAgIGV4Y2VwdDoKICAgICAgICAg
 ICAgcHJpbnQgIlN1cGVyLUdsdXUuIEluaXRpYWxpemUgbm90aWZpY2F0aW9uIHNlcnZpY2VzLiBGYWlsZWQgdG8gbG9hZCBjcmVkZW50aWFscyBmcm9tIGZpbGU6Iiwgc3VwZXJfZ2x1dV9jcmVkc19
 maWxlCiAgICAgICAgICAgIHJldHVybiBGYWxzZQogICAgICAgIGZpbmFsbHk6CiAgICAgICAgICAgIGYuY2xvc2UoKQogICAgICAgIAogICAgICAgIHRyeToKICAgICAgICAgICAgYW5kcm9pZF9jcm
 VkcyA9IGNyZWRzWyJhbmRyb2lkIl1bImdjbSJdCiAgICAgICAgICAgIGlvc19jcmVhZHMgPSBjcmVkc1siaW9zIl1bImFwbnMiXQogICAgICAgIGV4Y2VwdDoKICAgICAgICAgICAgcHJpbnQgIlN1c
 GVyLUdsdXUuIEluaXRpYWxpemUgbm90aWZpY2F0aW9uIHNlcnZpY2VzLiBJbnZhbGlkIGNyZWRlbnRpYWxzIGZpbGUgJyVzJyBmb3JtYXQ6IiAlIHN1cGVyX2dsdXVfY3JlZHNfZmlsZQogICAgICAg
 ICAgICByZXR1cm4gRmFsc2UKICAgICAgICAKICAgICAgICBzZWxmLnB1c2hBbmRyb2lkU2VydmljZSA9IE5vbmUKICAgICAgICBzZWxmLnB1c2hBcHBsZVNlcnZpY2UgPSBOb25lCiAgICAgICAgaWY
 gYW5kcm9pZF9jcmVkc1siZW5hYmxlZCJdOgogICAgICAgICAgICBzZWxmLnB1c2hBbmRyb2lkU2VydmljZSA9IFNlbmRlcihhbmRyb2lkX2NyZWRzWyJhcGlfa2V5Il0pIAogICAgICAgICAgICBwcm
 ludCAiU3VwZXItR2x1dS4gSW5pdGlhbGl6ZSBub3RpZmljYXRpb24gc2VydmljZXMuIENyZWF0ZWQgQW5kcm9pZCBub3RpZmljYXRpb24gc2VydmljZSIKICAgICAgICAgICAgCiAgICAgICAgaWYga
 W9zX2NyZWFkc1siZW5hYmxlZCJdOgogICAgICAgICAgICBwMTJfZmlsZV9wYXRoID0gaW9zX2NyZWFkc1sicDEyX2ZpbGVfcGF0aCJdCiAgICAgICAgICAgIHAxMl9wYXNzb3dyZCA9IGlvc19jcmVh
 ZHNbInAxMl9wYXNzd29yZCJdCgogICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICBzdHJpbmdFbmNyeXB0ZXIgPSBTdHJpbmdFbmNyeXB0ZXIuZGVmYXVsdEluc3RhbmNlKCkKICAgICAgICA
 gICAgICAgIHAxMl9wYXNzb3dyZCA9IHN0cmluZ0VuY3J5cHRlci5kZWNyeXB0KHAxMl9wYXNzb3dyZCkKICAgICAgICAgICAgZXhjZXB0OgogICAgICAgICAgICAgICAgIyBJZ25vcmUgZXhjZXB0aW
 9uLiBQYXNzd29yZCBpcyBub3QgZW5jcnlwdGVkCiAgICAgICAgICAgICAgICBwcmludCAiU3VwZXItR2x1dS4gSW5pdGlhbGl6ZSBub3RpZmljYXRpb24gc2VydmljZXMuIEFzc3VtaW5nIHRoYXQgJ
 3AxMl9wYXNzb3dyZCcgcGFzc3dvcmQgaW4gbm90IGVuY3J5cHRlZCIKCiAgICAgICAgICAgIGFwbnNTZXJ2aWNlQnVpbGRlciA9ICBBUE5TLm5ld1NlcnZpY2UoKS53aXRoQ2VydChwMTJfZmlsZV9w
 YXRoLCBwMTJfcGFzc293cmQpCiAgICAgICAgICAgIGlmIGlvc19jcmVhZHNbInByb2R1Y3Rpb24iXToKICAgICAgICAgICAgICAgIHNlbGYucHVzaEFwcGxlU2VydmljZSA9IGFwbnNTZXJ2aWNlQnV
 pbGRlci53aXRoUHJvZHVjdGlvbkRlc3RpbmF0aW9uKCkuYnVpbGQoKQogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgc2VsZi5wdXNoQXBwbGVTZXJ2aWNlID0gYXBuc1NlcnZpY2VCdW
 lsZGVyLndpdGhTYW5kYm94RGVzdGluYXRpb24oKS5idWlsZCgpCgogICAgICAgICAgICBwcmludCAiU3VwZXItR2x1dS4gSW5pdGlhbGl6ZSBub3RpZmljYXRpb24gc2VydmljZXMuIENyZWF0ZWQga
 U9TIG5vdGlmaWNhdGlvbiBzZXJ2aWNlIgoKICAgICAgICBlbmFibGVkID0gc2VsZi5wdXNoQW5kcm9pZFNlcnZpY2UgIT0gTm9uZSBvciBzZWxmLnB1c2hBcHBsZVNlcnZpY2UgIT0gTm9uZQoKICAg
 ICAgICByZXR1cm4gZW5hYmxlZAoKICAgIGRlZiBzZW5kUHVzaE5vdGlmaWNhdGlvbihzZWxmLCBjbGllbnRfcmVkaXJlY3RfdXJpLCB1c2VyLCBzdXBlcl9nbHV1X3JlcXVlc3QpOgogICAgICAgIGl
 mIG5vdCBzZWxmLmVuYWJsZWRQdXNoTm90aWZpY2F0aW9uczoKICAgICAgICAgICAgcmV0dXJuCgogICAgICAgIHVzZXJfbmFtZSA9IHVzZXIuZ2V0VXNlcklkKCkKICAgICAgICBwcmludCAiU3VwZX
 ItR2x1dS4gU2VuZCBwdXNoIG5vdGlmaWNhdGlvbi4gTG9hZGluZyB1c2VyICclcycgZGV2aWNlcyIgJSB1c2VyX25hbWUKCiAgICAgICAgc2VuZF9ub3RpZmljYXRpb24gPSBGYWxzZQogICAgICAgI
 HNlbmRfbm90aWZpY2F0aW9uX3Jlc3VsdCA9IFRydWUKCiAgICAgICAgdXNlclNlcnZpY2UgPSBVc2VyU2VydmljZS5pbnN0YW5jZSgpCiAgICAgICAgZGV2aWNlUmVnaXN0cmF0aW9uU2VydmljZSA9
 IERldmljZVJlZ2lzdHJhdGlvblNlcnZpY2UuaW5zdGFuY2UoKQoKICAgICAgICB1c2VyX2ludW0gPSB1c2VyU2VydmljZS5nZXRVc2VySW51bSh1c2VyX25hbWUpCgogICAgICAgIHUyZl9kZXZpY2V
 zX2xpc3QgPSBkZXZpY2VSZWdpc3RyYXRpb25TZXJ2aWNlLmZpbmRVc2VyRGV2aWNlUmVnaXN0cmF0aW9ucyh1c2VyX2ludW0sIGNsaWVudF9yZWRpcmVjdF91cmksICJveElkIiwgIm94RGV2aWNlRG
 F0YSIpCiAgICAgICAgaWYgdTJmX2RldmljZXNfbGlzdC5zaXplKCkgPiAwOgogICAgICAgICAgICBmb3IgdTJmX2RldmljZSBpbiB1MmZfZGV2aWNlc19saXN0OgogICAgICAgICAgICAgICAgZGV2a
 WNlX2RhdGEgPSB1MmZfZGV2aWNlLmdldERldmljZURhdGEoKQoKICAgICAgICAgICAgICAgICMgRGV2aWNlIGRhdGEgd2hpY2ggU3VwZXItR2x1dSBnZXRzIGR1cmluZyBlbnJvbGxtZW50CiAgICAg
 ICAgICAgICAgICBpZiBkZXZpY2VfZGF0YSA9PSBOb25lOgogICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCgogICAgICAgICAgICAgICAgcGxhdGZvcm0gPSBkZXZpY2VfZGF0YS5nZXRQbGF0Zm9
 ybSgpCiAgICAgICAgICAgICAgICBwdXNoX3Rva2VuID0gZGV2aWNlX2RhdGEuZ2V0UHVzaFRva2VuKCkKICAgICAgICAgICAgICAgIGRlYnVnID0gRmFsc2UKCiAgICAgICAgICAgICAgICBpZiBTdH
 JpbmdIZWxwZXIuZXF1YWxzSWdub3JlQ2FzZShwbGF0Zm9ybSwgImlvcyIpIGFuZCBTdHJpbmdIZWxwZXIuaXNOb3RFbXB0eShwdXNoX3Rva2VuKToKICAgICAgICAgICAgICAgICAgICAjIFNlbmRpb
 mcgbm90aWZpY2F0aW9uIHRvIGlPUyB1c2VyJ3MgZGV2aWNlCiAgICAgICAgICAgICAgICAgICAgaWYgc2VsZi5wdXNoQXBwbGVTZXJ2aWNlID09IE5vbmU6CiAgICAgICAgICAgICAgICAgICAgICAg
 IHByaW50ICJTdXBlci1HbHV1LiBTZW5kIHB1c2ggbm90aWZpY2F0aW9uLiBBcHBsZSBwdXNoIG5vdGlmaWNhdGlvbiBzZXJ2aWNlIGlzIG5vdCBlbmFibGVkIgogICAgICAgICAgICAgICAgICAgIGV
 sc2U6CiAgICAgICAgICAgICAgICAgICAgICAgIHNlbmRfbm90aWZpY2F0aW9uID0gVHJ1ZQogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGUgPSAiU3
 VwZXItR2x1dSIKICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZSA9ICJTdXBlci1HbHV1IGxvZ2luIHJlcXVlc3QgdG86ICVzIiAlIGNsaWVudF9yZWRpcmVjdF91cmkKCiAgICAgICAgICAgI
 CAgICAgICAgICAgIGFkZGl0aW9uYWxfZmllbGRzID0geyAicmVxdWVzdCIgOiBzdXBlcl9nbHV1X3JlcXVlc3QgfQoKICAgICAgICAgICAgICAgICAgICAgICAgbXNnQnVpbGRlciA9IEFQTlMubmV3
 UGF5bG9hZCgpLmFsZXJ0Qm9keShtZXNzYWdlKS5hbGVydFRpdGxlKHRpdGxlKS5zb3VuZCgiZGVmYXVsdCIpCiAgICAgICAgICAgICAgICAgICAgICAgIG1zZ0J1aWxkZXIuY2F0ZWdvcnkoJ0FDVEl
 PTkFCTEUnKS5iYWRnZSgwKQogICAgICAgICAgICAgICAgICAgICAgICBtc2dCdWlsZGVyLmZvck5ld3NzdGFuZCgpCiAgICAgICAgICAgICAgICAgICAgICAgIG1zZ0J1aWxkZXIuY3VzdG9tRmllbG
 RzKGFkZGl0aW9uYWxfZmllbGRzKQogICAgICAgICAgICAgICAgICAgICAgICBwdXNoX21lc3NhZ2UgPSBtc2dCdWlsZGVyLmJ1aWxkKCkKCiAgICAgICAgICAgICAgICAgICAgICAgIHNlbmRfbm90a
 WZpY2F0aW9uX3Jlc3VsdCA9IHNlbGYucHVzaEFwcGxlU2VydmljZS5wdXNoKHB1c2hfdG9rZW4sIHB1c2hfbWVzc2FnZSkKICAgICAgICAgICAgICAgICAgICAgICAgaWYgZGVidWc6CiAgICAgICAg
 ICAgICAgICAgICAgICAgICAgICBwcmludCAiU3VwZXItR2x1dS4gU2VuZCBpT1MgcHVzaCBub3RpZmljYXRpb24uIHRva2VuOiAnJXMnLCBtZXNzYWdlOiAnJXMnLCBzZW5kX25vdGlmaWNhdGlvbl9
 yZXN1bHQ6ICclcyciICUgKHB1c2hfdG9rZW4sIHB1c2hfbWVzc2FnZSwgc2VuZF9ub3RpZmljYXRpb25fcmVzdWx0KQoKICAgICAgICAgICAgICAgIGlmIFN0cmluZ0hlbHBlci5lcXVhbHNJZ25vcm
 VDYXNlKHBsYXRmb3JtLCAiYW5kcm9pZCIpIGFuZCBTdHJpbmdIZWxwZXIuaXNOb3RFbXB0eShwdXNoX3Rva2VuKToKICAgICAgICAgICAgICAgICAgICAjIFNlbmRpbmcgbm90aWZpY2F0aW9uIHRvI
 EFuZHJvaWQgdXNlcidzIGRldmljZQogICAgICAgICAgICAgICAgICAgIGlmIHNlbGYucHVzaEFuZHJvaWRTZXJ2aWNlID09IE5vbmU6CiAgICAgICAgICAgICAgICAgICAgICAgIHByaW50ICJTdXBl
 ci1HbHV1LiBTZW5kIHB1c2ggbm90aWZpY2F0aW9uLiBBbmRyb2lkIHB1c2ggbm90aWZpY2F0aW9uIHNlcnZpY2UgaXMgbm90IGVuYWJsZWQiCiAgICAgICAgICAgICAgICAgICAgZWxzZToKICAgICA
 gICAgICAgICAgICAgICAgICAgc2VuZF9ub3RpZmljYXRpb24gPSBUcnVlCgogICAgICAgICAgICAgICAgICAgICAgICB0aXRsZSA9ICJTdXBlci1HbHV1IgogICAgICAgICAgICAgICAgICAgICAgIC
 Btc2dCdWlsZGVyID0gTWVzc2FnZS5CdWlsZGVyKCkuYWRkRGF0YSgibWVzc2FnZSIsIHN1cGVyX2dsdXVfcmVxdWVzdCkuYWRkRGF0YSgidGl0bGUiLCB0aXRsZSkuY29sbGFwc2VLZXkoInNpbmdsZ
 SIpLmNvbnRlbnRBdmFpbGFibGUoVHJ1ZSkKICAgICAgICAgICAgICAgICAgICAgICAgcHVzaF9tZXNzYWdlID0gbXNnQnVpbGRlci5idWlsZCgpCgogICAgICAgICAgICAgICAgICAgICAgICBzZW5k
 X25vdGlmaWNhdGlvbl9yZXN1bHQgPSBzZWxmLnB1c2hBbmRyb2lkU2VydmljZS5zZW5kKHB1c2hfbWVzc2FnZSwgcHVzaF90b2tlbiwgMykKICAgICAgICAgICAgICAgICAgICAgICAgaWYgZGVidWc
 6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmludCAiU3VwZXItR2x1dS4gU2VuZCBBbmRyb2lkIHB1c2ggbm90aWZpY2F0aW9uLiB0b2tlbjogJyVzJywgbWVzc2FnZTogJyVzJywgc2VuZF
 9ub3RpZmljYXRpb25fcmVzdWx0OiAnJXMnIiAlIChwdXNoX3Rva2VuLCBwdXNoX21lc3NhZ2UsIHNlbmRfbm90aWZpY2F0aW9uX3Jlc3VsdCkKCgogICAgICAgIHByaW50ICJTdXBlci1HbHV1LiBTZ
 W5kIHB1c2ggbm90aWZpY2F0aW9uLiBzZW5kX25vdGlmaWNhdGlvbjogJyVzJywgc2VuZF9ub3RpZmljYXRpb25fcmVzdWx0OiAnJXMnIiAlIChzZW5kX25vdGlmaWNhdGlvbiwgc2VuZF9ub3RpZmlj
 YXRpb25fcmVzdWx0KQoKICAgIGRlZiBnZXRDbGllbnRSZWRpcmVjVXJpKHNlbGYsIHNlc3Npb25fYXR0cmlidXRlcyk6CiAgICAgICAgaWYgbm90IHNlc3Npb25fYXR0cmlidXRlcy5jb250YWluc0t
 leSgicmVkaXJlY3RfdXJpIik6CiAgICAgICAgICAgIHJldHVybiBOb25lCgogICAgICAgIHJldHVybiBzZXNzaW9uX2F0dHJpYnV0ZXMuZ2V0KCJyZWRpcmVjdF91cmkiKQoKICAgIGRlZiBzZXRFdm
 VudENvbnRleHRQYXJhbWV0ZXJzKHNlbGYsIGNvbnRleHQpOgogICAgICAgIGlmIHNlbGYucmVnaXN0cmF0aW9uVXJpICE9IE5vbmU6CiAgICAgICAgICAgIGNvbnRleHQuc2V0KCJleHRlcm5hbF9yZ
 Wdpc3RyYXRpb25fdXJpIiwgc2VsZi5yZWdpc3RyYXRpb25VcmkpCgogICAgICAgIGlmIHNlbGYuY3VzdG9tTGFiZWwgIT0gTm9uZToKICAgICAgICAgICAgY29udGV4dC5zZXQoInN1cGVyX2dsdXVf
 bGFiZWwiLCBzZWxmLmN1c3RvbUxhYmVsKQoKICAgICAgICBjb250ZXh0LnNldCgic3VwZXJfZ2x1dV9xcl9vcHRpb25zIiwgc2VsZi5jdXN0b21Rck9wdGlvbnMpCgogICAgZGVmIGFkZEdlb2xvY2F
 0aW9uRGF0YShzZWxmLCBzZXNzaW9uX2F0dHJpYnV0ZXMsIHN1cGVyX2dsdXVfcmVxdWVzdF9kaWN0aW9uYXJ5KToKICAgICAgICBpZiBzZXNzaW9uX2F0dHJpYnV0ZXMuY29udGFpbnNLZXkoInJlbW
 90ZV9pcCIpOgogICAgICAgICAgICByZW1vdGVfaXAgPSBzZXNzaW9uX2F0dHJpYnV0ZXMuZ2V0KCJyZW1vdGVfaXAiKQogICAgICAgICAgICBpZiBTdHJpbmdIZWxwZXIuaXNOb3RFbXB0eShyZW1vd
 GVfaXApOgogICAgICAgICAgICAgICAgcHJpbnQgIlN1cGVyLUdsdXUuIFByZXBhcmUgZm9yIHN0ZXAgMi4gQWRkaW5nIHJlcV9pcCBhbmQgcmVxX2xvYyB0byBzdXBlcl9nbHV1X3JlcXVlc3QiCiAg
 ICAgICAgICAgICAgICBzdXBlcl9nbHV1X3JlcXVlc3RfZGljdGlvbmFyeVsncmVxX2lwJ10gPSByZW1vdGVfaXAKCiAgICAgICAgICAgICAgICByZW1vdGVfbG9jX2RpYyA9IHNlbGYuZGV0ZXJtaW5
 lR2VvbG9jYXRpb25EYXRhKHJlbW90ZV9pcCkKICAgICAgICAgICAgICAgIGlmIHJlbW90ZV9sb2NfZGljID09IE5vbmU6CiAgICAgICAgICAgICAgICAgICAgcHJpbnQgIlN1cGVyLUdsdXUuIFByZX
 BhcmUgZm9yIHN0ZXAgMi4gRmFpbGVkIHRvIGRldGVybWluZSByZW1vdGUgbG9jYXRpb24gYnkgcmVtb3RlIElQICclcyciICUgcmVtb3RlX2lwCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuCgogI
 CAgICAgICAgICAgICAgcmVtb3RlX2xvYyA9ICIlcywgJXMsICVzIiAlICggcmVtb3RlX2xvY19kaWNbJ2NvdW50cnknXSwgcmVtb3RlX2xvY19kaWNbJ3JlZ2lvbk5hbWUnXSwgcmVtb3RlX2xvY19k
 aWNbJ2NpdHknXSApCiAgICAgICAgICAgICAgICByZW1vdGVfbG9jX2VuY29kZWQgPSB1cmxsaWIucXVvdGUocmVtb3RlX2xvYykKICAgICAgICAgICAgICAgIHN1cGVyX2dsdXVfcmVxdWVzdF9kaWN
 0aW9uYXJ5WydyZXFfbG9jJ10gPSByZW1vdGVfbG9jX2VuY29kZWQKCiAgICBkZWYgZGV0ZXJtaW5lR2VvbG9jYXRpb25EYXRhKHNlbGYsIHJlbW90ZV9pcCk6CiAgICAgICAgcHJpbnQgIlN1cGVyLU
 dsdXUuIERldGVybWluZSByZW1vdGUgbG9jYXRpb24uIHJlbW90ZV9pcDogJyVzJyIgJSByZW1vdGVfaXAKICAgICAgICBodHRwU2VydmljZSA9IEh0dHBTZXJ2aWNlLmluc3RhbmNlKCkKCiAgICAgI
 CAgaHR0cF9jbGllbnQgPSBodHRwU2VydmljZS5nZXRIdHRwc0NsaWVudCgpCiAgICAgICAgaHR0cF9jbGllbnRfcGFyYW1zID0gaHR0cF9jbGllbnQuZ2V0UGFyYW1zKCkKICAgICAgICBodHRwX2Ns
 aWVudF9wYXJhbXMuc2V0SW50UGFyYW1ldGVyKENvcmVDb25uZWN0aW9uUE5hbWVzLkNPTk5FQ1RJT05fVElNRU9VVCwgMTUgKiAxMDAwKQogICAgICAgIAogICAgICAgIGdlb2xvY2F0aW9uX3NlcnZ
 pY2VfdXJsID0gImh0dHA6Ly9pcC1hcGkuY29tL2pzb24vJXM/ZmllbGRzPTQ5MTc3IiAlIHJlbW90ZV9pcAogICAgICAgIGdlb2xvY2F0aW9uX3NlcnZpY2VfaGVhZGVycyA9IHsgIkFjY2VwdCIgOi
 AiYXBwbGljYXRpb24vanNvbiIgfQoKICAgICAgICB0cnk6CiAgICAgICAgICAgIGh0dHBfc2VydmljZV9yZXNwb25zZSA9IGh0dHBTZXJ2aWNlLmV4ZWN1dGVHZXQoaHR0cF9jbGllbnQsIGdlb2xvY
 2F0aW9uX3NlcnZpY2VfdXJsLCAgZ2VvbG9jYXRpb25fc2VydmljZV9oZWFkZXJzKQogICAgICAgICAgICBodHRwX3Jlc3BvbnNlID0gaHR0cF9zZXJ2aWNlX3Jlc3BvbnNlLmdldEh0dHBSZXNwb25z
 ZSgpCiAgICAgICAgZXhjZXB0OgogICAgICAgICAgICBwcmludCAiU3VwZXItR2x1dS4gRGV0ZXJtaW5lIHJlbW90ZSBsb2NhdGlvbi4gRXhjZXB0aW9uOiAiLCBzeXMuZXhjX2luZm8oKVsxXQogICA
 gICAgICAgICByZXR1cm4gTm9uZQoKICAgICAgICB0cnk6CiAgICAgICAgICAgIGlmIG5vdCBodHRwU2VydmljZS5pc1Jlc3BvbnNlU3Rhc3R1c0NvZGVPayhodHRwX3Jlc3BvbnNlKToKICAgICAgIC
 AgICAgICAgIHByaW50ICJTdXBlci1HbHV1LiBEZXRlcm1pbmUgcmVtb3RlIGxvY2F0aW9uLiBHZXQgaW52YWxpZCByZXNwb25zZSBmcm9tIHZhbGlkYXRpb24gc2VydmVyOiAiLCBzdHIoaHR0cF9yZ
 XNwb25zZS5nZXRTdGF0dXNMaW5lKCkuZ2V0U3RhdHVzQ29kZSgpKQogICAgICAgICAgICAgICAgaHR0cFNlcnZpY2UuY29uc3VtZShodHRwX3Jlc3BvbnNlKQogICAgICAgICAgICAgICAgcmV0dXJu
 IE5vbmUKICAgIAogICAgICAgICAgICByZXNwb25zZV9ieXRlcyA9IGh0dHBTZXJ2aWNlLmdldFJlc3BvbnNlQ29udGVudChodHRwX3Jlc3BvbnNlKQogICAgICAgICAgICByZXNwb25zZV9zdHJpbmc
 gPSBodHRwU2VydmljZS5jb252ZXJ0RW50aXR5VG9TdHJpbmcocmVzcG9uc2VfYnl0ZXMpCiAgICAgICAgICAgIGh0dHBTZXJ2aWNlLmNvbnN1bWUoaHR0cF9yZXNwb25zZSkKICAgICAgICBmaW5hbG
 x5OgogICAgICAgICAgICBodHRwX3NlcnZpY2VfcmVzcG9uc2UuY2xvc2VDb25uZWN0aW9uKCkKCiAgICAgICAgaWYgcmVzcG9uc2Vfc3RyaW5nID09IE5vbmU6CiAgICAgICAgICAgIHByaW50ICJTd
 XBlci1HbHV1LiBEZXRlcm1pbmUgcmVtb3RlIGxvY2F0aW9uLiBHZXQgZW1wdHkgcmVzcG9uc2UgZnJvbSBsb2NhdGlvbiBzZXJ2ZXIiCiAgICAgICAgICAgIHJldHVybiBOb25lCiAgICAgICAgCiAg
 ICAgICAgcmVzcG9uc2UgPSBqc29uLmxvYWRzKHJlc3BvbnNlX3N0cmluZykKICAgICAgICAKICAgICAgICBpZiBub3QgU3RyaW5nSGVscGVyLmVxdWFsc0lnbm9yZUNhc2UocmVzcG9uc2VbJ3N0YXR
 1cyddLCAic3VjY2VzcyIpOgogICAgICAgICAgICBwcmludCAiU3VwZXItR2x1dS4gRGV0ZXJtaW5lIHJlbW90ZSBsb2NhdGlvbi4gR2V0IHJlc3BvbnNlIHdpdGggc3RhdHVzOiAnJXMnIiAlIHJlc3
 BvbnNlWydzdGF0dXMnXQogICAgICAgICAgICByZXR1cm4gTm9uZQoKICAgICAgICByZXR1cm4gcmVzcG9uc2UK
oxScriptType: person_authentication
programmingLanguage: python

dn: inum=%(inumOrg)s!0011!A51E.76DA,ou=scripts,o=%(inumOrg)s,o=gluu
objectClass: top
objectClass: oxCustomScript
description: Sample authentication module
displayName: basic
gluuStatus: false
inum: %(inumOrg)s!0011!A51E.76DA
oxLevel: 100
oxModuleProperty: {"value1":"usage_type","value2":"interactive","description":""}
oxModuleProperty: {"value1":"location_type","value2":"ldap","description":""}
oxRevision: 1
oxScript:: IyBveEF1dGggaXMgYXZhaWxhYmxlIHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoMjAwOCkuIFNlZSBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUIGZvciBmdWxsIHRleHQuC
 iMgQ29weXJpZ2h0IChjKSAyMDE2LCBHbHV1CiMKIyBBdXRob3I6IFl1cml5IE1vdmNoYW4KIwoKZnJvbSBvcmcuamJvc3Muc2VhbS5zZWN1cml0eSBpbXBvcnQgSWRlbnRpdHkKZnJvbSBvcmcueGRp
 Lm1vZGVsLmN1c3RvbS5zY3JpcHQudHlwZS5hdXRoIGltcG9ydCBQZXJzb25BdXRoZW50aWNhdGlvblR5cGUKZnJvbSBvcmcueGRpLm94YXV0aC5zZXJ2aWNlIGltcG9ydCBVc2VyU2VydmljZQpmcm9
 tIG9yZy54ZGkudXRpbCBpbXBvcnQgU3RyaW5nSGVscGVyCgppbXBvcnQgamF2YQoKY2xhc3MgUGVyc29uQXV0aGVudGljYXRpb24oUGVyc29uQXV0aGVudGljYXRpb25UeXBlKToKICAgIGRlZiBfX2
 luaXRfXyhzZWxmLCBjdXJyZW50VGltZU1pbGxpcyk6CiAgICAgICAgc2VsZi5jdXJyZW50VGltZU1pbGxpcyA9IGN1cnJlbnRUaW1lTWlsbGlzCgogICAgZGVmIGluaXQoc2VsZiwgY29uZmlndXJhd
 GlvbkF0dHJpYnV0ZXMpOgogICAgICAgIHByaW50ICJCYXNpYy4gSW5pdGlhbGl6YXRpb24iCiAgICAgICAgcHJpbnQgIkJhc2ljLiBJbml0aWFsaXplZCBzdWNjZXNzZnVsbHkiCiAgICAgICAgcmV0
 dXJuIFRydWUgICAKCiAgICBkZWYgZGVzdHJveShzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6CiAgICAgICAgcHJpbnQgIkJhc2ljLiBEZXN0cm95IgogICAgICAgIHByaW50ICJCYXNpYy4
 gRGVzdHJveWVkIHN1Y2Nlc3NmdWxseSIKICAgICAgICByZXR1cm4gVHJ1ZQoKICAgIGRlZiBnZXRBcGlWZXJzaW9uKHNlbGYpOgogICAgICAgIHJldHVybiAxCgogICAgZGVmIGlzVmFsaWRBdXRoZW
 50aWNhdGlvbk1ldGhvZChzZWxmLCB1c2FnZVR5cGUsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKToKICAgICAgICByZXR1cm4gVHJ1ZQoKICAgIGRlZiBnZXRBbHRlcm5hdGl2ZUF1dGhlbnRpY2F0a
 W9uTWV0aG9kKHNlbGYsIHVzYWdlVHlwZSwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOgogICAgICAgIHJldHVybiBOb25lCgogICAgZGVmIGF1dGhlbnRpY2F0ZShzZWxmLCBjb25maWd1cmF0aW9u
 QXR0cmlidXRlcywgcmVxdWVzdFBhcmFtZXRlcnMsIHN0ZXApOgogICAgICAgIGlmIChzdGVwID09IDEpOgogICAgICAgICAgICBwcmludCAiQmFzaWMuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxIgo
 KICAgICAgICAgICAgY3JlZGVudGlhbHMgPSBJZGVudGl0eS5pbnN0YW5jZSgpLmdldENyZWRlbnRpYWxzKCkKICAgICAgICAgICAgdXNlcl9uYW1lID0gY3JlZGVudGlhbHMuZ2V0VXNlcm5hbWUoKQ
 ogICAgICAgICAgICB1c2VyX3Bhc3N3b3JkID0gY3JlZGVudGlhbHMuZ2V0UGFzc3dvcmQoKQoKICAgICAgICAgICAgbG9nZ2VkX2luID0gRmFsc2UKICAgICAgICAgICAgaWYgKFN0cmluZ0hlbHBlc
 i5pc05vdEVtcHR5U3RyaW5nKHVzZXJfbmFtZSkgYW5kIFN0cmluZ0hlbHBlci5pc05vdEVtcHR5U3RyaW5nKHVzZXJfcGFzc3dvcmQpKToKICAgICAgICAgICAgICAgIHVzZXJTZXJ2aWNlID0gVXNl
 clNlcnZpY2UuaW5zdGFuY2UoKQogICAgICAgICAgICAgICAgbG9nZ2VkX2luID0gdXNlclNlcnZpY2UuYXV0aGVudGljYXRlKHVzZXJfbmFtZSwgdXNlcl9wYXNzd29yZCkKCiAgICAgICAgICAgIGl
 mIChub3QgbG9nZ2VkX2luKToKICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgcmV0dXJuIFRydWUKICAgICAgICBlbHNlOgogICAgICAgICAgICByZXR1cm4gRmFsc2UKCi
 AgICBkZWYgcHJlcGFyZUZvclN0ZXAoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIHJlcXVlc3RQYXJhbWV0ZXJzLCBzdGVwKToKICAgICAgICBpZiAoc3RlcCA9PSAxKToKICAgICAgICAgI
 CAgcHJpbnQgIkJhc2ljLiBQcmVwYXJlIGZvciBTdGVwIDEiCiAgICAgICAgICAgIHJldHVybiBUcnVlCiAgICAgICAgZWxzZToKICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgZGVmIGdldEV4
 dHJhUGFyYW1ldGVyc0ZvclN0ZXAoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIHN0ZXApOgogICAgICAgIHJldHVybiBOb25lCgogICAgZGVmIGdldENvdW50QXV0aGVudGljYXRpb25TdGV
 wcyhzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6CiAgICAgICAgcmV0dXJuIDEKCiAgICBkZWYgZ2V0UGFnZUZvclN0ZXAoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIHN0ZXApOg
 ogICAgICAgIHJldHVybiAiIgoKICAgIGRlZiBsb2dvdXQoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIHJlcXVlc3RQYXJhbWV0ZXJzKToKICAgICAgICByZXR1cm4gVHJ1ZQo=
oxScriptType: person_authentication
programmingLanguage: python

dn: inum=%(inumOrg)s!0011!A910.56AB,ou=scripts,o=%(inumOrg)s,o=gluu
objectClass: top
objectClass: oxCustomScript
description: Sample script for SCIM events
displayName: scim_event_handler
gluuStatus: false
inum: %(inumOrg)s!0011!A910.56AB
oxConfigurationProperty: {"value1":"testProp1","value2":"Test value 1","description":""}
oxConfigurationProperty: {"value1":"testProp2","value2":"Test value 2","description":""}
oxLevel: 100
oxModuleProperty: {"value1":"location_type","value2":"ldap","description":""}
oxRevision: 1
oxScript:: IyBveFRydXN0IGlzIGF2YWlsYWJsZSB1bmRlciB0aGUgTUlUIExpY2Vuc2UgKDIwMDgpLiBTZWUgaHR0cDovL29wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL01JVCBmb3IgZnVsbCB0ZXh0L
 g0KIyBDb3B5cmlnaHQgKGMpIDIwMTQsIEdsdXUNCiMNCiMgQXV0aG9yOiBWYWwgUGVjYW9jbw0KIw0KZnJvbSBvcmcueGRpLm1vZGVsLmN1c3RvbS5zY3JpcHQudHlwZS5zY2ltIGltcG9ydCBTY2lt
 VHlwZQ0KZnJvbSBvcmcueGRpLnV0aWwgaW1wb3J0IFN0cmluZ0hlbHBlciwgQXJyYXlIZWxwZXINCmZyb20gamF2YS51dGlsIGltcG9ydCBBcnJheXMsIEFycmF5TGlzdA0KZnJvbSBvcmcuZ2x1dS5
 veHRydXN0LmxkYXAuc2VydmljZSBpbXBvcnQgSVBlcnNvblNlcnZpY2UsIFBlcnNvblNlcnZpY2UNCmZyb20gb3JnLmdsdXUub3h0cnVzdC5tb2RlbCBpbXBvcnQgR2x1dUN1c3RvbVBlcnNvbg0KDQ
 ppbXBvcnQgamF2YQ0KDQpjbGFzcyBTY2ltRXZlbnRIYW5kbGVyKFNjaW1UeXBlKToNCg0KICAgIGRlZiBfX2luaXRfXyhzZWxmLCBjdXJyZW50VGltZU1pbGxpcyk6DQogICAgICAgIHNlbGYuY3Vyc
 mVudFRpbWVNaWxsaXMgPSBjdXJyZW50VGltZU1pbGxpcw0KDQogICAgZGVmIGluaXQoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOg0KICAgICAgICBwcmludCAiU2NpbUV2ZW50SGFuZGxl
 ciAoaW5pdCk6IEluaXRpYWxpemVkIHN1Y2Nlc3NmdWxseSINCiAgICAgICAgcmV0dXJuIFRydWUgICANCg0KICAgIGRlZiBkZXN0cm95KHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKToNCiA
 gICAgICAgcHJpbnQgIlNjaW1FdmVudEhhbmRsZXIgKGRlc3Ryb3kpOiBEZXN0cm95ZWQgc3VjY2Vzc2Z1bGx5Ig0KICAgICAgICByZXR1cm4gVHJ1ZSAgIA0KDQogICAgZGVmIGdldEFwaVZlcnNpb2
 4oc2VsZik6DQogICAgICAgIHJldHVybiAxDQoNCiAgICBkZWYgY3JlYXRlVXNlcihzZWxmLCB1c2VyLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6DQoNCiAgICAgICAgcHJpbnQgIlNjaW1FdmVud
 EhhbmRsZXIgKGNyZWF0ZVVzZXIpOiBDdXJyZW50IGlkID0gIiArIHVzZXIuZ2V0VWlkKCkNCg0KICAgICAgICB0ZXN0UHJvcDEgPSBjb25maWd1cmF0aW9uQXR0cmlidXRlcy5nZXQoInRlc3RQcm9w
 MSIpLmdldFZhbHVlMigpDQogICAgICAgIHRlc3RQcm9wMiA9IGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmdldCgidGVzdFByb3AyIikuZ2V0VmFsdWUyKCkNCg0KICAgICAgICBwcmludCAiU2NpbUV
 2ZW50SGFuZGxlciAoY3JlYXRlVXNlcik6IHRlc3RQcm9wMSA9ICIgKyB0ZXN0UHJvcDENCiAgICAgICAgcHJpbnQgIlNjaW1FdmVudEhhbmRsZXIgKGNyZWF0ZVVzZXIpOiB0ZXN0UHJvcDIgPSAiIC
 sgdGVzdFByb3AyDQoNCiAgICAgICAgcmV0dXJuIFRydWUNCg0KICAgIGRlZiB1cGRhdGVVc2VyKHNlbGYsIHVzZXIsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKToNCiAgICAgICAgcGVyc29uU2Vyd
 mljZSA9IFBlcnNvblNlcnZpY2UuaW5zdGFuY2UoKQ0KICAgICAgICBvbGRVc2VyID0gcGVyc29uU2VydmljZS5nZXRQZXJzb25CeVVpZCh1c2VyLmdldFVpZCgpKQ0KICAgICAgICBwcmludCAiU2Np
 bUV2ZW50SGFuZGxlciAodXBkYXRlVXNlcik6IE9sZCBkaXNwbGF5TmFtZSA9ICIgKyBvbGRVc2VyIC5nZXREaXNwbGF5TmFtZSgpDQogICAgICAgIHByaW50ICJTY2ltRXZlbnRIYW5kbGVyICh1cGR
 hdGVVc2VyKTogTmV3IGRpc3BsYXlOYW1lID0gIiArIHVzZXIuZ2V0RGlzcGxheU5hbWUoKQ0KICAgICAgICByZXR1cm4gVHJ1ZQ0KDQogICAgZGVmIGRlbGV0ZVVzZXIoc2VsZiwgdXNlciwgY29uZm
 lndXJhdGlvbkF0dHJpYnV0ZXMpOg0KICAgICAgICBwcmludCAiU2NpbUV2ZW50SGFuZGxlciAoZGVsZXRlVXNlcik6IEN1cnJlbnQgaWQgPSAiICsgdXNlci5nZXRVaWQoKQ0KICAgICAgICByZXR1c
 m4gVHJ1ZQ0KDQogICAgZGVmIGNyZWF0ZUdyb3VwKHNlbGYsIGdyb3VwLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6DQogICAgICAgIHByaW50ICJTY2ltRXZlbnRIYW5kbGVyIChjcmVhdGVHcm91
 cCk6IEN1cnJlbnQgZGlzcGxheU5hbWUgPSAiICsgZ3JvdXAuZ2V0RGlzcGxheU5hbWUoKQ0KICAgICAgICByZXR1cm4gVHJ1ZQ0KDQogICAgZGVmIHVwZGF0ZUdyb3VwKHNlbGYsIGdyb3VwLCBjb25
 maWd1cmF0aW9uQXR0cmlidXRlcyk6DQogICAgICAgIHByaW50ICJTY2ltRXZlbnRIYW5kbGVyICh1cGRhdGVHcm91cCk6IEN1cnJlbnQgZGlzcGxheU5hbWUgPSAiICsgZ3JvdXAuZ2V0RGlzcGxheU
 5hbWUoKQ0KICAgICAgICByZXR1cm4gVHJ1ZQ0KDQogICAgZGVmIGRlbGV0ZUdyb3VwKHNlbGYsIGdyb3VwLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6DQogICAgICAgIHByaW50ICJTY2ltRXZlb
 nRIYW5kbGVyIChkZWxldGVHcm91cCk6IEN1cnJlbnQgZGlzcGxheU5hbWUgPSAiICsgZ3JvdXAuZ2V0RGlzcGxheU5hbWUoKQ0KICAgICAgICByZXR1cm4gVHJ1ZQ0K
oxScriptType: scim
programmingLanguage: python

dn: inum=%(inumOrg)s!0011!D40C.1CA3,ou=scripts,o=%(inumOrg)s,o=gluu
objectClass: top
objectClass: oxCustomScript
description: Inbound SAML via Asimba authentication module
displayName: asimba
gluuStatus: false
inum: %(inumOrg)s!0011!D40C.1CA3
oxConfigurationProperty: {"value1":"asimba_saml_certificate_file","value2":"/etc/certs/saml.pem","description":""}
oxConfigurationProperty: {"value1":"asimba_entity_id","value2":"https://%(hostname)s/saml","description":""}
oxConfigurationProperty: {"value1":"saml_deployment_type","value2":"enroll","description":""}
oxConfigurationProperty: {"value1":"saml_name_identifier_format","value2":"urn:oasis:names:tc:SAML:2.0:nameid-format:persistent","description":""}
oxConfigurationProperty: {"value1":"saml_use_authn_context","value2":"true","description":""}
oxConfigurationProperty: {"value1":"saml_idp_sso_target_url","value2":"https://%(hostname)s/asimba/profiles/saml2/sso/web","description":""}
oxConfigurationProperty: {"value1":"user_object_classes","value2":"inetOrgPerson, eduPerson, ox-E22231E020EC4F2C0001805B74E4","description":""}
oxConfigurationProperty: {"value1":"saml_idp_attributes_list","value2":"urn:oid:0.9.2342.19200300.100.1.1, urn:oid:0.9.2342.19200300.100.1.3","descripti
 on":""}
oxConfigurationProperty: {"value1":"saml_local_attributes_list","value2":"uid, mail","description":""}
oxConfigurationProperty: {"value1":"enforce_uniqueness_attr_list","value2":"uid, mail","description":""}
oxLevel: 50
oxModuleProperty: {"value1":"usage_type","value2":"interactive","description":""}
oxModuleProperty: {"value1":"location_type","value2":"ldap","description":""}
oxRevision: 1
oxScript:: IyBveEF1dGggaXMgYXZhaWxhYmxlIHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoMjAwOCkuIFNlZSBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUIGZvciBmdWxsIHRleHQuC
 iMgQ29weXJpZ2h0IChjKSAyMDE2LCBHbHV1CiMKIyBBdXRob3I6IFl1cml5IE1vdmNoYW4KIwoKZnJvbSBvcmcuamJvc3Muc2VhbS5jb250ZXh0cyBpbXBvcnQgQ29udGV4dCwgQ29udGV4dHMKZnJv
 bSBvcmcuamJvc3Muc2VhbS5zZWN1cml0eSBpbXBvcnQgSWRlbnRpdHkKZnJvbSBvcmcuamJvc3Muc2VhbSBpbXBvcnQgQ29tcG9uZW50CmZyb20gamF2YXguZmFjZXMuY29udGV4dCBpbXBvcnQgRmF
 jZXNDb250ZXh0CmZyb20gb3JnLmpib3NzLnNlYW0uZmFjZXMgaW1wb3J0IEZhY2VzTWVzc2FnZXMKZnJvbSBvcmcuamJvc3Muc2VhbS5pbnRlcm5hdGlvbmFsIGltcG9ydCBTdGF0dXNNZXNzYWdlCm
 Zyb20gb3JnLnhkaS5tb2RlbC5jdXN0b20uc2NyaXB0LnR5cGUuYXV0aCBpbXBvcnQgUGVyc29uQXV0aGVudGljYXRpb25UeXBlCmZyb20gb3JnLnhkaS5veGF1dGguc2VydmljZSBpbXBvcnQgVXNlc
 lNlcnZpY2UsIENsaWVudFNlcnZpY2UsIEF1dGhlbnRpY2F0aW9uU2VydmljZSwgQXR0cmlidXRlU2VydmljZQpmcm9tIG9yZy54ZGkub3hhdXRoLnNlcnZpY2UubmV0IGltcG9ydCBIdHRwU2Vydmlj
 ZQpmcm9tIG9yZy54ZGkudXRpbCBpbXBvcnQgU3RyaW5nSGVscGVyLCBBcnJheUhlbHBlciwgVXRpbApmcm9tIG9yZy5nbHV1LnNhbWwgaW1wb3J0IFNhbWxDb25maWd1cmF0aW9uLCBBdXRoUmVxdWV
 zdCwgUmVzcG9uc2UKZnJvbSBqYXZhLnV0aWwgaW1wb3J0IEFycmF5cywgQXJyYXlMaXN0LCBIYXNoTWFwLCBJZGVudGl0eUhhc2hNYXAKZnJvbSBvcmcueGRpLm94YXV0aC5tb2RlbC5jb21tb24gaW
 1wb3J0IFVzZXIKZnJvbSBvcmcueGRpLmxkYXAubW9kZWwgaW1wb3J0IEN1c3RvbUF0dHJpYnV0ZQpmcm9tIGphdmEubGFuZyBpbXBvcnQgU3RyaW5nLCBTdHJpbmdCdWlsZGVyCgpmcm9tIGphcnJhe
 SBpbXBvcnQgYXJyYXkKaW1wb3J0IGphdmEKCnRyeToKICAgIGltcG9ydCBqc29uCmV4Y2VwdCBJbXBvcnRFcnJvcjoKICAgIGltcG9ydCBzaW1wbGVqc29uIGFzIGpzb24KCmNsYXNzIFBlcnNvbkF1
 dGhlbnRpY2F0aW9uKFBlcnNvbkF1dGhlbnRpY2F0aW9uVHlwZSk6CiAgICBkZWYgX19pbml0X18oc2VsZiwgY3VycmVudFRpbWVNaWxsaXMpOgogICAgICAgIHNlbGYuY3VycmVudFRpbWVNaWxsaXM
 gPSBjdXJyZW50VGltZU1pbGxpcwoKICAgIGRlZiBpbml0KHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKToKICAgICAgICBwcmludCAiU2FtbC4gSW5pdGlhbGl6YXRpb24iCgogICAgICAgIG
 FzaW1iYV9zYW1sX2NlcnRpZmljYXRlX2ZpbGUgPSBjb25maWd1cmF0aW9uQXR0cmlidXRlcy5nZXQoImFzaW1iYV9zYW1sX2NlcnRpZmljYXRlX2ZpbGUiKS5nZXRWYWx1ZTIoKQogICAgICAgIHNhb
 WxfaWRwX3Nzb190YXJnZXRfdXJsID0gY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuZ2V0KCJzYW1sX2lkcF9zc29fdGFyZ2V0X3VybCIpLmdldFZhbHVlMigpCiAgICAgICAgYXNpbWJhX2VudGl0eV9p
 ZCA9IGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmdldCgiYXNpbWJhX2VudGl0eV9pZCIpLmdldFZhbHVlMigpCiAgICAgICAgc2FtbF91c2VfYXV0aG5fY29udGV4dCA9IFN0cmluZ0hlbHBlci50b0J
 vb2xlYW4oY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuZ2V0KCJzYW1sX3VzZV9hdXRobl9jb250ZXh0IikuZ2V0VmFsdWUyKCksIFRydWUpCiAgICAgICAgaWYgKHNhbWxfdXNlX2F1dGhuX2NvbnRleH
 QpOgogICAgICAgICAgICBzYW1sX25hbWVfaWRlbnRpZmllcl9mb3JtYXQgPSBjb25maWd1cmF0aW9uQXR0cmlidXRlcy5nZXQoInNhbWxfbmFtZV9pZGVudGlmaWVyX2Zvcm1hdCIpLmdldFZhbHVlM
 igpCiAgICAgICAgZWxzZToKICAgICAgICAgICAgc2FtbF9uYW1lX2lkZW50aWZpZXJfZm9ybWF0ID0gTm9uZQoKICAgICAgICBhc2ltYmFfc2FtbF9jZXJ0aWZpY2F0ZSA9IHNlbGYubG9hZENlcml0
 aWZpY2F0ZShhc2ltYmFfc2FtbF9jZXJ0aWZpY2F0ZV9maWxlKQogICAgICAgIGlmIChTdHJpbmdIZWxwZXIuaXNFbXB0eShhc2ltYmFfc2FtbF9jZXJ0aWZpY2F0ZSkpOgogICAgICAgICAgICBwcml
 udCAiU2FtbC4gSW5pdGlhbGl6YXRpb24uIEZpbGUgd2l0aCB4NTA5IGNlcnRpZmljYXRlIHNob3VsZCBiZSBub3QgZW1wdHkiCiAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICBzYW1sQ2
 9uZmlndXJhdGlvbiA9IFNhbWxDb25maWd1cmF0aW9uKCkKCiAgICAgICAgIyBTZXQgdGhlIGlzc3VlciBvZiB0aGUgYXV0aGVudGljYXRpb24gcmVxdWVzdC4gVGhpcyB3b3VsZCB1c3VhbGx5IGJlI
 HRoZSBVUkwgb2YgdGhlIGlzc3Vpbmcgd2ViIGFwcGxpY2F0aW9uCiAgICAgICAgc2FtbENvbmZpZ3VyYXRpb24uc2V0SXNzdWVyKGFzaW1iYV9lbnRpdHlfaWQpCgogICAgICAgICMgVGVsbHMgdGhl
 IElkUCB0byByZXR1cm4gYSBwZXJzaXN0ZW50IGlkZW50aWZpZXIgZm9yIHRoZSB1c2VyCiAgICAgICAgc2FtbENvbmZpZ3VyYXRpb24uc2V0TmFtZUlkZW50aWZpZXJGb3JtYXQoc2FtbF9uYW1lX2l
 kZW50aWZpZXJfZm9ybWF0KQogIAogICAgICAgICMgVGhlIFVSTCBhdCB0aGUgSWRlbnRpdHkgUHJvdmlkZXIgd2hlcmUgdG8gdGhlIGF1dGhlbnRpY2F0aW9uIHJlcXVlc3Qgc2hvdWxkIGJlIHNlbn
 QKICAgICAgICBzYW1sQ29uZmlndXJhdGlvbi5zZXRJZHBTc29UYXJnZXRVcmwoc2FtbF9pZHBfc3NvX3RhcmdldF91cmwpCgogICAgICAgICMgRW5hYmxlZGlhYmxlIFJlcXVlc3RlZEF1dGhuQ29ud
 GV4dAogICAgICAgIHNhbWxDb25maWd1cmF0aW9uLnNldFVzZVJlcXVlc3RlZEF1dGhuQ29udGV4dChzYW1sX3VzZV9hdXRobl9jb250ZXh0KQogICAgICAgIAogICAgICAgICMgTG9hZCB4NTA5IGNl
 cnRpZmljYXRlCiAgICAgICAgc2FtbENvbmZpZ3VyYXRpb24ubG9hZENlcnRpZmljYXRlRnJvbVN0cmluZyhhc2ltYmFfc2FtbF9jZXJ0aWZpY2F0ZSkKICAgICAgICAKICAgICAgICBzZWxmLnNhbWx
 Db25maWd1cmF0aW9uID0gc2FtbENvbmZpZ3VyYXRpb24KCiAgICAgICAgc2VsZi5nZW5lcmF0ZU5hbWVJZCA9IEZhbHNlCiAgICAgICAgaWYgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuY29udGFpbn
 NLZXkoInNhbWxfZ2VuZXJhdGVfbmFtZV9pZCIpOgogICAgICAgICAgICBzZWxmLmdlbmVyYXRlTmFtZUlkID0gU3RyaW5nSGVscGVyLnRvQm9vbGVhbihjb25maWd1cmF0aW9uQXR0cmlidXRlcy5nZ
 XQoInNhbWxfZ2VuZXJhdGVfbmFtZV9pZCIpLmdldFZhbHVlMigpLCBGYWxzZSkKICAgICAgICBwcmludCAiU2FtbC4gSW5pdGlhbGl6YXRpb24uIFRoZSBwcm9wZXJ0eSBzYW1sX2dlbmVyYXRlX25h
 bWVfaWQgaXMgJXMiICUgc2VsZi5nZW5lcmF0ZU5hbWVJZAoKICAgICAgICBzZWxmLnVwZGF0ZVVzZXIgPSBGYWxzZQogICAgICAgIGlmIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmNvbnRhaW5zS2V
 5KCJzYW1sX3VwZGF0ZV91c2VyIik6CiAgICAgICAgICAgIHNlbGYudXBkYXRlVXNlciA9IFN0cmluZ0hlbHBlci50b0Jvb2xlYW4oY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuZ2V0KCJzYW1sX3VwZG
 F0ZV91c2VyIikuZ2V0VmFsdWUyKCksIEZhbHNlKQoKICAgICAgICBwcmludCAiU2FtbC4gSW5pdGlhbGl6YXRpb24uIFRoZSBwcm9wZXJ0eSBzYW1sX3VwZGF0ZV91c2VyIGlzICVzIiAlIHNlbGYud
 XBkYXRlVXNlcgoKICAgICAgICBzZWxmLnVzZXJPYmplY3RDbGFzc2VzID0gTm9uZQogICAgICAgIGlmIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmNvbnRhaW5zS2V5KCJ1c2VyX29iamVjdF9jbGFz
 c2VzIik6CiAgICAgICAgICAgIHNlbGYudXNlck9iamVjdENsYXNzZXMgPSBzZWxmLnByZXBhcmVVc2VyT2JqZWN0Q2xhc3Nlcyhjb25maWd1cmF0aW9uQXR0cmlidXRlcykKCiAgICAgICAgc2VsZi5
 1c2VyRW5mb3JjZUF0dHJpYnV0ZXNVbmlxdWVuZXNzID0gTm9uZQogICAgICAgIGlmIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmNvbnRhaW5zS2V5KCJlbmZvcmNlX3VuaXF1ZW5lc3NfYXR0cl9saX
 N0Iik6CiAgICAgICAgICAgIHNlbGYudXNlckVuZm9yY2VBdHRyaWJ1dGVzVW5pcXVlbmVzcyA9IHNlbGYucHJlcGFyZVVzZXJFbmZvcmNlVW5pcXVlbmVzc0F0dHJpYnV0ZXMoY29uZmlndXJhdGlvb
 kF0dHJpYnV0ZXMpCgogICAgICAgIHNlbGYuYXR0cmlidXRlc01hcHBpbmcgPSBOb25lCiAgICAgICAgaWYgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuY29udGFpbnNLZXkoInNhbWxfaWRwX2F0dHJp
 YnV0ZXNfbWFwcGluZyIpOgogICAgICAgICAgICBzYW1sX2lkcF9hdHRyaWJ1dGVzX21hcHBpbmcgPSBjb25maWd1cmF0aW9uQXR0cmlidXRlcy5nZXQoInNhbWxfaWRwX2F0dHJpYnV0ZXNfbWFwcGl
 uZyIpLmdldFZhbHVlMigpCiAgICAgICAgICAgIGlmIChTdHJpbmdIZWxwZXIuaXNFbXB0eShzYW1sX2lkcF9hdHRyaWJ1dGVzX21hcHBpbmcpKToKICAgICAgICAgICAgICAgIHByaW50ICJTYW1sLi
 BJbml0aWFsaXphdGlvbi4gVGhlIHByb3BlcnR5IHNhbWxfaWRwX2F0dHJpYnV0ZXNfbWFwcGluZyBpcyBlbXB0eSIKICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgc2VsZ
 i5hdHRyaWJ1dGVzTWFwcGluZyA9IHNlbGYucHJlcGFyZUF0dHJpYnV0ZXNNYXBwaW5nKHNhbWxfaWRwX2F0dHJpYnV0ZXNfbWFwcGluZykKICAgICAgICAgICAgaWYgKHNlbGYuYXR0cmlidXRlc01h
 cHBpbmcgPT0gTm9uZSk6CiAgICAgICAgICAgICAgICBwcmludCAiU2FtbC4gSW5pdGlhbGl6YXRpb24uIFRoZSBhdHRyaWJ1dGVzIG1hcHBpbmcgaXNuJ3QgdmFsaWQiCiAgICAgICAgICAgICAgICB
 yZXR1cm4gRmFsc2UKCiAgICAgICAgc2VsZi5zYW1sRXh0ZW5zaW9uTW9kdWxlID0gTm9uZQogICAgICAgIGlmIChjb25maWd1cmF0aW9uQXR0cmlidXRlcy5jb250YWluc0tleSgic2FtbF9leHRlbn
 Npb25fbW9kdWxlIikpOgogICAgICAgICAgICBzYW1sX2V4dGVuc2lvbl9tb2R1bGVfbmFtZSA9IGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmdldCgic2FtbF9leHRlbnNpb25fbW9kdWxlIikuZ2V0V
 mFsdWUyKCkKICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgc2VsZi5zYW1sRXh0ZW5zaW9uTW9kdWxlID0gX19pbXBvcnRfXyhzYW1sX2V4dGVuc2lvbl9tb2R1bGVfbmFtZSkKICAgICAg
 ICAgICAgICAgIHNhbWxfZXh0ZW5zaW9uX21vZHVsZV9pbml0X3Jlc3VsdCA9IHNlbGYuc2FtbEV4dGVuc2lvbk1vZHVsZS5pbml0KGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKQogICAgICAgICAgICA
 gICAgaWYgKG5vdCBzYW1sX2V4dGVuc2lvbl9tb2R1bGVfaW5pdF9yZXN1bHQpOgogICAgICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQogICAgICAgICAgICBleGNlcHQgSW1wb3J0RXJyb3IsIG
 V4OgogICAgICAgICAgICAgICAgcHJpbnQgIlNhbWwuIEluaXRpYWxpemF0aW9uLiBGYWlsZWQgdG8gbG9hZCBzYW1sX2V4dGVuc2lvbl9tb2R1bGU6ICclcyciICUgc2FtbF9leHRlbnNpb25fbW9kd
 WxlX25hbWUKICAgICAgICAgICAgICAgIHByaW50ICJTYW1sLiBJbml0aWFsaXphdGlvbi4gVW5leHBlY3RlZCBlcnJvcjoiLCBleAogICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlCiAgICAgICAg
 ICAgIAogICAgICAgIHNlbGYuZGVidWdFbnJvbGxtZW50ID0gRmFsc2UKCiAgICAgICAgcHJpbnQgIlNhbWwuIEluaXRpYWxpemVkIHN1Y2Nlc3NmdWxseSIKICAgICAgICByZXR1cm4gVHJ1ZSAgIAo
 KICAgIGRlZiBkZXN0cm95KHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKToKICAgICAgICBwcmludCAiU2FtbC4gRGVzdHJveSIKICAgICAgICBwcmludCAiU2FtbC4gRGVzdHJveWVkIHN1Y2
 Nlc3NmdWxseSIKICAgICAgICByZXR1cm4gVHJ1ZQoKICAgIGRlZiBnZXRBcGlWZXJzaW9uKHNlbGYpOgogICAgICAgIHJldHVybiAxCgogICAgZGVmIGlzVmFsaWRBdXRoZW50aWNhdGlvbk1ldGhvZ
 ChzZWxmLCB1c2FnZVR5cGUsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKToKICAgICAgICByZXR1cm4gVHJ1ZQoKICAgIGRlZiBnZXRBbHRlcm5hdGl2ZUF1dGhlbnRpY2F0aW9uTWV0aG9kKHNlbGYs
 IHVzYWdlVHlwZSwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOgogICAgICAgIHJldHVybiBOb25lCgogICAgZGVmIGF1dGhlbnRpY2F0ZShzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcywgcmV
 xdWVzdFBhcmFtZXRlcnMsIHN0ZXApOgogICAgICAgIGNvbnRleHQgPSBDb250ZXh0cy5nZXRFdmVudENvbnRleHQoKQogICAgICAgIGF1dGhlbnRpY2F0aW9uU2VydmljZSA9IEF1dGhlbnRpY2F0aW
 9uU2VydmljZS5pbnN0YW5jZSgpCiAgICAgICAgdXNlclNlcnZpY2UgPSBVc2VyU2VydmljZS5pbnN0YW5jZSgpCgogICAgICAgIHNhbWxfbWFwX3VzZXIgPSBGYWxzZQogICAgICAgIHNhbWxfZW5yb
 2xsX3VzZXIgPSBGYWxzZQogICAgICAgIHNhbWxfZW5yb2xsX2FsbF91c2VyX2F0dHIgPSBGYWxzZQogICAgICAgICMgVXNlIHNhbWxfZGVwbG95bWVudF90eXBlIG9ubHkgaWYgdGhlcmUgaXMgbm8g
 YXR0cmlidXRlcyBtYXBwaW5nCiAgICAgICAgaWYgKGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmNvbnRhaW5zS2V5KCJzYW1sX2RlcGxveW1lbnRfdHlwZSIpKToKICAgICAgICAgICAgc2FtbF9kZXB
 sb3ltZW50X3R5cGUgPSBTdHJpbmdIZWxwZXIudG9Mb3dlckNhc2UoY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuZ2V0KCJzYW1sX2RlcGxveW1lbnRfdHlwZSIpLmdldFZhbHVlMigpKQogICAgICAgIC
 AgICAKICAgICAgICAgICAgaWYgKFN0cmluZ0hlbHBlci5lcXVhbHNJZ25vcmVDYXNlKHNhbWxfZGVwbG95bWVudF90eXBlLCAibWFwIikpOgogICAgICAgICAgICAgICAgc2FtbF9tYXBfdXNlciA9I
 FRydWUKCiAgICAgICAgICAgIGlmIChTdHJpbmdIZWxwZXIuZXF1YWxzSWdub3JlQ2FzZShzYW1sX2RlcGxveW1lbnRfdHlwZSwgImVucm9sbCIpKToKICAgICAgICAgICAgICAgIHNhbWxfZW5yb2xs
 X3VzZXIgPSBUcnVlCgogICAgICAgICAgICBpZiAoU3RyaW5nSGVscGVyLmVxdWFsc0lnbm9yZUNhc2Uoc2FtbF9kZXBsb3ltZW50X3R5cGUsICJlbnJvbGxfYWxsX2F0dHIiKSk6CiAgICAgICAgICA
 gICAgICBzYW1sX2Vucm9sbF9hbGxfdXNlcl9hdHRyID0gVHJ1ZQoKICAgICAgICBzYW1sX2FsbG93X2Jhc2ljX2xvZ2luID0gRmFsc2UKICAgICAgICBpZiAoY29uZmlndXJhdGlvbkF0dHJpYnV0ZX
 MuY29udGFpbnNLZXkoInNhbWxfYWxsb3dfYmFzaWNfbG9naW4iKSk6CiAgICAgICAgICAgIHNhbWxfYWxsb3dfYmFzaWNfbG9naW4gPSBTdHJpbmdIZWxwZXIudG9Cb29sZWFuKGNvbmZpZ3VyYXRpb
 25BdHRyaWJ1dGVzLmdldCgic2FtbF9hbGxvd19iYXNpY19sb2dpbiIpLmdldFZhbHVlMigpLCBGYWxzZSkKCiAgICAgICAgdXNlX2Jhc2ljX2F1dGggPSBGYWxzZQogICAgICAgIGlmIChzYW1sX2Fs
 bG93X2Jhc2ljX2xvZ2luKToKICAgICAgICAgICAgIyBEZXRlY3QgaWYgdXNlciB1c2VkIGJhc2ljIGF1dGhuZXRpY2F0aW9uIG1ldGhvZAogICAgICAgICAgICBjcmVkZW50aWFscyA9IElkZW50aXR
 5Lmluc3RhbmNlKCkuZ2V0Q3JlZGVudGlhbHMoKQoKICAgICAgICAgICAgdXNlcl9uYW1lID0gY3JlZGVudGlhbHMuZ2V0VXNlcm5hbWUoKQogICAgICAgICAgICB1c2VyX3Bhc3N3b3JkID0gY3JlZG
 VudGlhbHMuZ2V0UGFzc3dvcmQoKQogICAgICAgICAgICBpZiAoU3RyaW5nSGVscGVyLmlzTm90RW1wdHkodXNlcl9uYW1lKSBhbmQgU3RyaW5nSGVscGVyLmlzTm90RW1wdHkodXNlcl9wYXNzd29yZ
 CkpOgogICAgICAgICAgICAgICAgdXNlX2Jhc2ljX2F1dGggPSBUcnVlCgogICAgICAgIGlmICgoc3RlcCA9PSAxKSBhbmQgc2FtbF9hbGxvd19iYXNpY19sb2dpbiBhbmQgdXNlX2Jhc2ljX2F1dGgp
 OgogICAgICAgICAgICBwcmludCAiU2FtbC4gQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIEJhc2ljIGF1dGhlbnRpY2F0aW9uIgoKICAgICAgICAgICAgY29udGV4dC5zZXQoInNhbWxfY291bnRfbG9
 naW5fc3RlcHMiLCAxKQoKICAgICAgICAgICAgY3JlZGVudGlhbHMgPSBJZGVudGl0eS5pbnN0YW5jZSgpLmdldENyZWRlbnRpYWxzKCkKICAgICAgICAgICAgdXNlcl9uYW1lID0gY3JlZGVudGlhbH
 MuZ2V0VXNlcm5hbWUoKQogICAgICAgICAgICB1c2VyX3Bhc3N3b3JkID0gY3JlZGVudGlhbHMuZ2V0UGFzc3dvcmQoKQoKICAgICAgICAgICAgbG9nZ2VkX2luID0gRmFsc2UKICAgICAgICAgICAga
 WYgKFN0cmluZ0hlbHBlci5pc05vdEVtcHR5U3RyaW5nKHVzZXJfbmFtZSkgYW5kIFN0cmluZ0hlbHBlci5pc05vdEVtcHR5U3RyaW5nKHVzZXJfcGFzc3dvcmQpKToKICAgICAgICAgICAgICAgIHVz
 ZXJTZXJ2aWNlID0gVXNlclNlcnZpY2UuaW5zdGFuY2UoKQogICAgICAgICAgICAgICAgbG9nZ2VkX2luID0gdXNlclNlcnZpY2UuYXV0aGVudGljYXRlKHVzZXJfbmFtZSwgdXNlcl9wYXNzd29yZCk
 KCiAgICAgICAgICAgIGlmIChub3QgbG9nZ2VkX2luKToKICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgcmV0dXJuIFRydWUKCiAgICAgICAgaWYgKHN0ZXAgPT0gMSk6Ci
 AgICAgICAgICAgIHByaW50ICJTYW1sLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMSIKCiAgICAgICAgICAgIGN1cnJlbnRTYW1sQ29uZmlndXJhdGlvbiA9IHNlbGYuZ2V0Q3VycmVudFNhbWxDb25ma
 Wd1cmF0aW9uKHNlbGYuc2FtbENvbmZpZ3VyYXRpb24sIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCByZXF1ZXN0UGFyYW1ldGVycykKICAgICAgICAgICAgaWYgKGN1cnJlbnRTYW1sQ29uZmlndXJh
 dGlvbiA9PSBOb25lKToKICAgICAgICAgICAgICAgIHByaW50ICJTYW1sLiBQcmVwYXJlIGZvciBzdGVwIDEuIENsaWVudCBzYW1sIGNvbmZpZ3VyYXRpb24gaXMgaW52YWxpZCIKICAgICAgICAgICA
 gICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgc2FtbF9yZXNwb25zZV9hcnJheSA9IHJlcXVlc3RQYXJhbWV0ZXJzLmdldCgiU0FNTFJlc3BvbnNlIikKICAgICAgICAgICAgaWYgQXJyYXlIZW
 xwZXIuaXNFbXB0eShzYW1sX3Jlc3BvbnNlX2FycmF5KToKICAgICAgICAgICAgICAgIHByaW50ICJTYW1sLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gc2FtbF9yZXNwb25zZSBpcyBlbXB0eSIKI
 CAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgc2FtbF9yZXNwb25zZSA9IHNhbWxfcmVzcG9uc2VfYXJyYXlbMF0KCiAgICAgICAgICAgIHByaW50ICJTYW1sLiBBdXRoZW50
 aWNhdGUgZm9yIHN0ZXAgMS4gc2FtbF9yZXNwb25zZTogJyVzJyIgJSBzYW1sX3Jlc3BvbnNlCgogICAgICAgICAgICBzYW1sUmVzcG9uc2UgPSBSZXNwb25zZShjdXJyZW50U2FtbENvbmZpZ3VyYXR
 pb24pCiAgICAgICAgICAgIHNhbWxSZXNwb25zZS5sb2FkWG1sRnJvbUJhc2U2NChzYW1sX3Jlc3BvbnNlKQogICAgICAgICAgICAKICAgICAgICAgICAgc2FtbF92YWxpZGF0ZV9yZXNwb25zZSA9IF
 RydWUKICAgICAgICAgICAgaWYgKGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmNvbnRhaW5zS2V5KCJzYW1sX3ZhbGlkYXRlX3Jlc3BvbnNlIikpOgogICAgICAgICAgICAgICAgc2FtbF92YWxpZGF0Z
 V9yZXNwb25zZSA9IFN0cmluZ0hlbHBlci50b0Jvb2xlYW4oY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuZ2V0KCJzYW1sX3ZhbGlkYXRlX3Jlc3BvbnNlIikuZ2V0VmFsdWUyKCksIEZhbHNlKQoKICAg
 ICAgICAgICAgaWYgKHNhbWxfdmFsaWRhdGVfcmVzcG9uc2UpOgogICAgICAgICAgICAgICAgaWYgKG5vdCBzYW1sUmVzcG9uc2UuaXNWYWxpZCgpKToKICAgICAgICAgICAgICAgICAgICBwcmludCA
 iU2FtbC4gQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIHNhbWxfcmVzcG9uc2UgaXNuJ3QgdmFsaWQiCgogICAgICAgICAgICBzYW1sX3Jlc3BvbnNlX2F0dHJpYnV0ZXMgPSBzYW1sUmVzcG9uc2UuZ2
 V0QXR0cmlidXRlcygpCiAgICAgICAgICAgIHByaW50ICJTYW1sLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gYXR0cmlidXRlczogJyVzJyIgJSBzYW1sX3Jlc3BvbnNlX2F0dHJpYnV0ZXMKICAgI
 CAgICAgICAgCiAgICAgICAgICAgIGlmIChzYW1sX21hcF91c2VyKToKICAgICAgICAgICAgICAgIHNhbWxfdXNlcl91aWQgPSBzZWxmLmdldFNhbWxOYW1lSWQoc2FtbFJlc3BvbnNlKQogICAgICAg
 ICAgICAgICAgaWYgc2FtbF91c2VyX3VpZCA9PSBOb25lOgogICAgICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgICAgICMgVXNlIG1hcHBpbmcgdG8gbG9jYWwgSURQIHV
 zZXIKICAgICAgICAgICAgICAgIHByaW50ICJTYW1sLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gQXR0ZW1wdGluZyB0byBmaW5kIHVzZXIgYnkgb3hFeHRlcm5hbFVpZDogc2FtbDogJyVzJyIgJS
 BzYW1sX3VzZXJfdWlkCgogICAgICAgICAgICAgICAgIyBDaGVjayBpZiB0aGUgaXMgdXNlciB3aXRoIHNwZWNpZmllZCBzYW1sX3VzZXJfdWlkCiAgICAgICAgICAgICAgICBmaW5kX3VzZXJfYnlfd
 WlkID0gdXNlclNlcnZpY2UuZ2V0VXNlckJ5QXR0cmlidXRlKCJveEV4dGVybmFsVWlkIiwgInNhbWw6JXMiICUgc2FtbF91c2VyX3VpZCkKCiAgICAgICAgICAgICAgICBpZiAoZmluZF91c2VyX2J5
 X3VpZCA9PSBOb25lKToKICAgICAgICAgICAgICAgICAgICBwcmludCAiU2FtbC4gQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIEZhaWxlZCB0byBmaW5kIHVzZXIiCiAgICAgICAgICAgICAgICAgICA
 gcHJpbnQgIlNhbWwuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxLiBTZXR0aW5nIGNvdW50IHN0ZXBzIHRvIDIiCiAgICAgICAgICAgICAgICAgICAgY29udGV4dC5zZXQoInNhbWxfY291bnRfbG9naW
 5fc3RlcHMiLCAyKQogICAgICAgICAgICAgICAgICAgIGNvbnRleHQuc2V0KCJzYW1sX3VzZXJfdWlkIiwgc2FtbF91c2VyX3VpZCkKICAgICAgICAgICAgICAgICAgICByZXR1cm4gVHJ1ZQoKICAgI
 CAgICAgICAgICAgIGZvdW5kX3VzZXJfbmFtZSA9IGZpbmRfdXNlcl9ieV91aWQuZ2V0VXNlcklkKCkKICAgICAgICAgICAgICAgIHByaW50ICJTYW1sLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4g
 Zm91bmRfdXNlcl9uYW1lOiAnJXMnIiAlIGZvdW5kX3VzZXJfbmFtZQogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB1c2VyX2F1dGhlbnRpY2F0ZWQgPSBhdXRoZW50aWNhdGlvblNlcnZ
 pY2UuYXV0aGVudGljYXRlKGZvdW5kX3VzZXJfbmFtZSkKICAgICAgICAgICAgICAgIGlmICh1c2VyX2F1dGhlbnRpY2F0ZWQgPT0gRmFsc2UpOgogICAgICAgICAgICAgICAgICAgIHByaW50ICJTYW
 1sLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gRmFpbGVkIHRvIGF1dGhlbnRpY2F0ZSB1c2VyIgogICAgICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQogICAgICAgICAgICAKICAgICAgICAgI
 CAgICAgIHByaW50ICJTYW1sLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gU2V0dGluZyBjb3VudCBzdGVwcyB0byAxIgogICAgICAgICAgICAgICAgY29udGV4dC5zZXQoInNhbWxfY291bnRfbG9n
 aW5fc3RlcHMiLCAxKQoKICAgICAgICAgICAgICAgIHBvc3RfbG9naW5fcmVzdWx0ID0gc2VsZi5zYW1sRXh0ZW5zaW9uUG9zdExvZ2luKGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCBmaW5kX3VzZXJ
 fYnlfdWlkKQogICAgICAgICAgICAgICAgcHJpbnQgIlNhbWwuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxLiBwb3N0X2xvZ2luX3Jlc3VsdDogJyVzJyIgJSBwb3N0X2xvZ2luX3Jlc3VsdAoKICAgIC
 AgICAgICAgICAgIHJldHVybiBwb3N0X2xvZ2luX3Jlc3VsdAogICAgICAgICAgICBlbGlmIChzYW1sX2Vucm9sbF91c2VyKToKICAgICAgICAgICAgICAgICMgQ29udmVydCBTQU1MIHJlc3BvbnNlI
 HRvIHVzZXIgZW50cnkKICAgICAgICAgICAgICAgIG5ld1VzZXIgPSBzZWxmLmdldE1hcHBlZFVzZXIoY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIHJlcXVlc3RQYXJhbWV0ZXJzLCBzYW1sX3Jlc3Bv
 bnNlX2F0dHJpYnV0ZXMpCgogICAgICAgICAgICAgICAgc2FtbF91c2VyX3VpZCA9IHNlbGYuZ2V0TmFtZUlkKHNhbWxSZXNwb25zZSwgbmV3VXNlcikKICAgICAgICAgICAgICAgIGlmIHNhbWxfdXN
 lcl91aWQgPT0gTm9uZToKICAgICAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgICAgICAgICBzZWxmLnNldERlZmF1bHRVaWQobmV3VXNlciwgc2FtbF91c2VyX3VpZCkKICAgIC
 AgICAgICAgICAgIG5ld1VzZXIuc2V0QXR0cmlidXRlKCJveEV4dGVybmFsVWlkIiwgInNhbWw6JXMiICUgc2FtbF91c2VyX3VpZCkKCiAgICAgICAgICAgICAgICAjIFVzZSBhdXRvIGVucm9sbG1lb
 nQgdG8gbG9jYWwgSURQCiAgICAgICAgICAgICAgICBwcmludCAiU2FtbC4gQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIEF0dGVtcHRpbmcgdG8gZmluZCB1c2VyIGJ5IG94RXh0ZXJuYWxVaWQ6IHNh
 bWw6ICclcyciICUgc2FtbF91c2VyX3VpZAoKICAgICAgICAgICAgICAgICMgQ2hlY2sgaWYgdGhlcmUgaXMgdXNlciB3aXRoIHNwZWNpZmllZCBzYW1sX3VzZXJfdWlkCiAgICAgICAgICAgICAgICB
 maW5kX3VzZXJfYnlfdWlkID0gdXNlclNlcnZpY2UuZ2V0VXNlckJ5QXR0cmlidXRlKCJveEV4dGVybmFsVWlkIiwgInNhbWw6JXMiICUgc2FtbF91c2VyX3VpZCkKICAgICAgICAgICAgICAgIGlmIG
 ZpbmRfdXNlcl9ieV91aWQgPT0gTm9uZToKICAgICAgICAgICAgICAgICAgICAjIEF1dG8gdXNlciBlbnJvbGxtZW50CiAgICAgICAgICAgICAgICAgICAgcHJpbnQgIlNhbWwuIEF1dGhlbnRpY2F0Z
 SBmb3Igc3RlcCAxLiBUaGVyZSBpcyBubyB1c2VyIGluIExEQVAuIEFkZGluZyB1c2VyIHRvIGxvY2FsIExEQVAiCgogICAgICAgICAgICAgICAgICAgIHByaW50ICJTYW1sLiBBdXRoZW50aWNhdGUg
 Zm9yIHN0ZXAgMS4gQXR0ZW1wdGluZyB0byBhZGQgdXNlciAnJXMnIHdpdGggbmV4dCBhdHRyaWJ1dGVzOiAnJXMnIiAlIChzYW1sX3VzZXJfdWlkLCBuZXdVc2VyLmdldEN1c3RvbUF0dHJpYnV0ZXM
 oKSkKICAgICAgICAgICAgICAgICAgICB1c2VyX3VuaXF1ZSA9IHNlbGYuY2hlY2tVc2VyVW5pcXVlbmVzcyhuZXdVc2VyKQogICAgICAgICAgICAgICAgICAgIGlmIG5vdCB1c2VyX3VuaXF1ZToKIC
 AgICAgICAgICAgICAgICAgICAgICAgcHJpbnQgIlNhbWwuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxLiBGYWlsZWQgdG8gYWRkIHVzZXI6ICclcycuIFVzZXIgbm90IHVuaXF1ZSIgJSBuZXdVc2VyL
 mdldFVzZXJJZCgpCiAgICAgICAgICAgICAgICAgICAgICAgIGZhY2VzTWVzc2FnZXMgPSBGYWNlc01lc3NhZ2VzLmluc3RhbmNlKCkKICAgICAgICAgICAgICAgICAgICAgICAgZmFjZXNNZXNzYWdl
 cy5hZGQoU3RhdHVzTWVzc2FnZS5TZXZlcml0eS5FUlJPUiwgIkZhaWxlZCB0byBlbnJvbGwuIFVzZXIgd2l0aCBzYW1lIGtleSBhdHRyaWJ1dGVzIGV4aXN0IGFscmVhZHkiKQogICAgICAgICAgICA
 gICAgICAgICAgICBGYWNlc0NvbnRleHQuZ2V0Q3VycmVudEluc3RhbmNlKCkuZ2V0RXh0ZXJuYWxDb250ZXh0KCkuZ2V0Rmxhc2goKS5zZXRLZWVwTWVzc2FnZXMoVHJ1ZSkKICAgICAgICAgICAgIC
 AgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgICAgICAgICAgICAgICAgIGZpbmRfdXNlcl9ieV91aWQgPSB1c2VyU2VydmljZS5hZGRVc2VyKG5ld1VzZXIsIFRydWUpCiAgICAgICAgICAgICAgI
 CAgICAgcHJpbnQgIlNhbWwuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxLiBBZGRlZCBuZXcgdXNlciB3aXRoIFVJRDogJyVzJyIgJSBmaW5kX3VzZXJfYnlfdWlkLmdldFVzZXJJZCgpCiAgICAgICAg
 ICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgIGlmIHNlbGYudXBkYXRlVXNlcjoKICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQgIlNhbWwuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCA
 xLiBBdHRlbXB0aW5nIHRvIHVwZGF0ZSB1c2VyICclcycgd2l0aCBuZXh0IGF0dHJpYnV0ZXM6ICclcyciICUgKHNhbWxfdXNlcl91aWQsIG5ld1VzZXIuZ2V0Q3VzdG9tQXR0cmlidXRlcygpKQogIC
 AgICAgICAgICAgICAgICAgICAgICBmaW5kX3VzZXJfYnlfdWlkLnNldEN1c3RvbUF0dHJpYnV0ZXMobmV3VXNlci5nZXRDdXN0b21BdHRyaWJ1dGVzKCkpCiAgICAgICAgICAgICAgICAgICAgICAgI
 HVzZXJTZXJ2aWNlLnVwZGF0ZVVzZXIoZmluZF91c2VyX2J5X3VpZCkKICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQgIlNhbWwuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxLiBVcGRhdGVkIHVz
 ZXIgd2l0aCBVSUQ6ICclcyciICUgc2FtbF91c2VyX3VpZAoKICAgICAgICAgICAgICAgIGZvdW5kX3VzZXJfbmFtZSA9IGZpbmRfdXNlcl9ieV91aWQuZ2V0VXNlcklkKCkKICAgICAgICAgICAgICA
 gIHByaW50ICJTYW1sLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gZm91bmRfdXNlcl9uYW1lOiAnJXMnIiAlIGZvdW5kX3VzZXJfbmFtZQoKICAgICAgICAgICAgICAgIHVzZXJfYXV0aGVudGljYX
 RlZCA9IGF1dGhlbnRpY2F0aW9uU2VydmljZS5hdXRoZW50aWNhdGUoZm91bmRfdXNlcl9uYW1lKQogICAgICAgICAgICAgICAgaWYgKHVzZXJfYXV0aGVudGljYXRlZCA9PSBGYWxzZSk6CiAgICAgI
 CAgICAgICAgICAgICAgcHJpbnQgIlNhbWwuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxLiBGYWlsZWQgdG8gYXV0aGVudGljYXRlIHVzZXI6ICclcyciICUgZm91bmRfdXNlcl9uYW1lCiAgICAgICAg
 ICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgICAgICAgICAgICAgcHJpbnQgIlNhbWwuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxLiBTZXR0aW5nIGNvdW50IHN0ZXBzIHRvIDEiCiAgICAgICA
 gICAgICAgICBjb250ZXh0LnNldCgic2FtbF9jb3VudF9sb2dpbl9zdGVwcyIsIDEpCgogICAgICAgICAgICAgICAgcG9zdF9sb2dpbl9yZXN1bHQgPSBzZWxmLnNhbWxFeHRlbnNpb25Qb3N0TG9naW
 4oY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIGZpbmRfdXNlcl9ieV91aWQpCiAgICAgICAgICAgICAgICBwcmludCAiU2FtbC4gQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIHBvc3RfbG9naW5fcmVzd
 Wx0OiAnJXMnIiAlIHBvc3RfbG9naW5fcmVzdWx0CgogICAgICAgICAgICAgICAgcmV0dXJuIHBvc3RfbG9naW5fcmVzdWx0CiAgICAgICAgICAgIGVsaWYgKHNhbWxfZW5yb2xsX2FsbF91c2VyX2F0
 dHIpOgogICAgICAgICAgICAgICAgIyBDb252ZXJ0IFNBTUwgcmVzcG9uc2UgdG8gdXNlciBlbnRyeQogICAgICAgICAgICAgICAgbmV3VXNlciA9IHNlbGYuZ2V0TWFwcGVkQWxsQXR0cmlidXRlc1V
 zZXIoc2FtbF9yZXNwb25zZV9hdHRyaWJ1dGVzKQoKICAgICAgICAgICAgICAgIHNhbWxfdXNlcl91aWQgPSBzZWxmLmdldE5hbWVJZChzYW1sUmVzcG9uc2UsIG5ld1VzZXIpCiAgICAgICAgICAgIC
 AgICBpZiBzYW1sX3VzZXJfdWlkID09IE5vbmU6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgICAgICAgICAgICAgc2VsZi5zZXREZWZhdWx0VWlkKG5ld1VzZXIsIHNhbWxfd
 XNlcl91aWQpCiAgICAgICAgICAgICAgICBuZXdVc2VyLnNldEF0dHJpYnV0ZSgib3hFeHRlcm5hbFVpZCIsICJzYW1sOiVzIiAlICBzYW1sX3VzZXJfdWlkKQoKICAgICAgICAgICAgICAgIHByaW50
 ICJTYW1sLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gQXR0ZW1wdGluZyB0byBmaW5kIHVzZXIgYnkgb3hFeHRlcm5hbFVpZDogc2FtbDolcyIgJSBzYW1sX3VzZXJfdWlkCgogICAgICAgICAgICA
 gICAgIyBDaGVjayBpZiB0aGVyZSBpcyB1c2VyIHdpdGggc3BlY2lmaWVkIHNhbWxfdXNlcl91aWQKICAgICAgICAgICAgICAgIGZpbmRfdXNlcl9ieV91aWQgPSB1c2VyU2VydmljZS5nZXRVc2VyQn
 lBdHRyaWJ1dGUoIm94RXh0ZXJuYWxVaWQiLCAic2FtbDolcyIgJSAgc2FtbF91c2VyX3VpZCkKICAgICAgICAgICAgICAgIGlmIChmaW5kX3VzZXJfYnlfdWlkID09IE5vbmUpOgogICAgICAgICAgI
 CAgICAgICAgICMgQXV0byB1c2VyIGVucm9sbG1lbnQKICAgICAgICAgICAgICAgICAgICBwcmludCAiU2FtbC4gQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIFRoZXJlIGlzIG5vIHVzZXIgaW4gTERB
 UC4gQWRkaW5nIHVzZXIgdG8gbG9jYWwgTERBUCIKCiAgICAgICAgICAgICAgICAgICAgcHJpbnQgIlNhbWwuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxLiBBdHRlbXB0aW5nIHRvIGFkZCB1c2VyICc
 lcycgd2l0aCBuZXh0IGF0dHJpYnV0ZXM6ICclcyciICUgKHNhbWxfdXNlcl91aWQsIG5ld1VzZXIuZ2V0Q3VzdG9tQXR0cmlidXRlcygpKQogICAgICAgICAgICAgICAgICAgIHVzZXJfdW5pcXVlID
 0gc2VsZi5jaGVja1VzZXJVbmlxdWVuZXNzKG5ld1VzZXIpCiAgICAgICAgICAgICAgICAgICAgaWYgbm90IHVzZXJfdW5pcXVlOgogICAgICAgICAgICAgICAgICAgICAgICBwcmludCAiU2FtbC4gQ
 XV0aGVudGljYXRlIGZvciBzdGVwIDEuIEZhaWxlZCB0byBhZGQgdXNlcjogJyVzJy4gVXNlciBub3QgdW5pcXVlIiAlIG5ld1VzZXIuZ2V0VXNlcklkKCkKICAgICAgICAgICAgICAgICAgICAgICAg
 ZmFjZXNNZXNzYWdlcyA9IEZhY2VzTWVzc2FnZXMuaW5zdGFuY2UoKQogICAgICAgICAgICAgICAgICAgICAgICBmYWNlc01lc3NhZ2VzLmFkZChTdGF0dXNNZXNzYWdlLlNldmVyaXR5LkVSUk9SLCA
 iRmFpbGVkIHRvIGVucm9sbC4gVXNlciB3aXRoIHNhbWUga2V5IGF0dHJpYnV0ZXMgZXhpc3QgYWxyZWFkeSIpCiAgICAgICAgICAgICAgICAgICAgICAgIEZhY2VzQ29udGV4dC5nZXRDdXJyZW50SW
 5zdGFuY2UoKS5nZXRFeHRlcm5hbENvbnRleHQoKS5nZXRGbGFzaCgpLnNldEtlZXBNZXNzYWdlcyhUcnVlKQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgICAgI
 CAgICAgICAgZmluZF91c2VyX2J5X3VpZCA9IHVzZXJTZXJ2aWNlLmFkZFVzZXIobmV3VXNlciwgVHJ1ZSkKICAgICAgICAgICAgICAgICAgICBwcmludCAiU2FtbC4gQXV0aGVudGljYXRlIGZvciBz
 dGVwIDEuIEFkZGVkIG5ldyB1c2VyIHdpdGggVUlEOiAnJXMnIiAlIGZpbmRfdXNlcl9ieV91aWQuZ2V0VXNlcklkKCkKICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgaWY
 gc2VsZi51cGRhdGVVc2VyOgogICAgICAgICAgICAgICAgICAgICAgICBwcmludCAiU2FtbC4gQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIEF0dGVtcHRpbmcgdG8gdXBkYXRlIHVzZXIgJyVzJyB3aX
 RoIG5leHQgYXR0cmlidXRlczogJyVzJyIgJSAoc2FtbF91c2VyX3VpZCwgbmV3VXNlci5nZXRDdXN0b21BdHRyaWJ1dGVzKCkpCiAgICAgICAgICAgICAgICAgICAgICAgIGZpbmRfdXNlcl9ieV91a
 WQuc2V0Q3VzdG9tQXR0cmlidXRlcyhuZXdVc2VyLmdldEN1c3RvbUF0dHJpYnV0ZXMoKSkKICAgICAgICAgICAgICAgICAgICAgICAgdXNlclNlcnZpY2UudXBkYXRlVXNlcihmaW5kX3VzZXJfYnlf
 dWlkKQogICAgICAgICAgICAgICAgICAgICAgICBwcmludCAiU2FtbC4gQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIFVwZGF0ZWQgdXNlciB3aXRoIFVJRDogJyVzJyIgJSBzYW1sX3VzZXJfdWlkCgo
 gICAgICAgICAgICAgICAgZm91bmRfdXNlcl9uYW1lID0gZmluZF91c2VyX2J5X3VpZC5nZXRVc2VySWQoKQogICAgICAgICAgICAgICAgcHJpbnQgIlNhbWwuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcC
 AxLiBmb3VuZF91c2VyX25hbWU6ICclcyciICUgZm91bmRfdXNlcl9uYW1lCgogICAgICAgICAgICAgICAgdXNlcl9hdXRoZW50aWNhdGVkID0gYXV0aGVudGljYXRpb25TZXJ2aWNlLmF1dGhlbnRpY
 2F0ZShmb3VuZF91c2VyX25hbWUpCiAgICAgICAgICAgICAgICBpZiAodXNlcl9hdXRoZW50aWNhdGVkID09IEZhbHNlKToKICAgICAgICAgICAgICAgICAgICBwcmludCAiU2FtbC4gQXV0aGVudGlj
 YXRlIGZvciBzdGVwIDEuIEZhaWxlZCB0byBhdXRoZW50aWNhdGUgdXNlciIKICAgICAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgICAgICAgICBwcmludCAiU2FtbC4gQXV0aGV
 udGljYXRlIGZvciBzdGVwIDEuIFNldHRpbmcgY291bnQgc3RlcHMgdG8gMSIKICAgICAgICAgICAgICAgIGNvbnRleHQuc2V0KCJzYW1sX2NvdW50X2xvZ2luX3N0ZXBzIiwgMSkKCiAgICAgICAgIC
 AgICAgICBwb3N0X2xvZ2luX3Jlc3VsdCA9IHNlbGYuc2FtbEV4dGVuc2lvblBvc3RMb2dpbihjb25maWd1cmF0aW9uQXR0cmlidXRlcywgZmluZF91c2VyX2J5X3VpZCkKICAgICAgICAgICAgICAgI
 HByaW50ICJTYW1sLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gcG9zdF9sb2dpbl9yZXN1bHQ6ICclcyciICUgcG9zdF9sb2dpbl9yZXN1bHQKCiAgICAgICAgICAgICAgICByZXR1cm4gcG9zdF9s
 b2dpbl9yZXN1bHQKICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgIGlmIHNhbWxfdXNlcl91aWQgPT0gTm9uZToKICAgICAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICA
 gICAgICAgICAjIENoZWNrIGlmIHRoZSBpcyB1c2VyIHdpdGggc3BlY2lmaWVkIHNhbWxfdXNlcl91aWQKICAgICAgICAgICAgICAgIHByaW50ICJTYW1sLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS
 4gQXR0ZW1wdGluZyB0byBmaW5kIHVzZXIgYnkgdWlkOiAnJXMnIiAlIHNhbWxfdXNlcl91aWQKCiAgICAgICAgICAgICAgICBmaW5kX3VzZXJfYnlfdWlkID0gdXNlclNlcnZpY2UuZ2V0VXNlcihzY
 W1sX3VzZXJfdWlkKQogICAgICAgICAgICAgICAgaWYgKGZpbmRfdXNlcl9ieV91aWQgPT0gTm9uZSk6CiAgICAgICAgICAgICAgICAgICAgcHJpbnQgIlNhbWwuIEF1dGhlbnRpY2F0ZSBmb3Igc3Rl
 cCAxLiBGYWlsZWQgdG8gZmluZCB1c2VyIgogICAgICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgICAgIGZvdW5kX3VzZXJfbmFtZSA9IGZpbmRfdXNlcl9ieV91aWQuZ2V
 0VXNlcklkKCkKICAgICAgICAgICAgICAgIHByaW50ICJTYW1sLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gZm91bmRfdXNlcl9uYW1lOiAnJXMnIiAlIGZvdW5kX3VzZXJfbmFtZQoKICAgICAgIC
 AgICAgICAgIHVzZXJfYXV0aGVudGljYXRlZCA9IGF1dGhlbnRpY2F0aW9uU2VydmljZS5hdXRoZW50aWNhdGUoZm91bmRfdXNlcl9uYW1lKQogICAgICAgICAgICAgICAgaWYgKHVzZXJfYXV0aGVud
 GljYXRlZCA9PSBGYWxzZSk6CiAgICAgICAgICAgICAgICAgICAgcHJpbnQgIlNhbWwuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxLiBGYWlsZWQgdG8gYXV0aGVudGljYXRlIHVzZXIiCiAgICAgICAg
 ICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgICAgICAgICAgICAgcHJpbnQgIlNhbWwuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxLiBTZXR0aW5nIGNvdW50IHN0ZXBzIHRvIDEiCiAgICAgICA
 gICAgICAgICBjb250ZXh0LnNldCgic2FtbF9jb3VudF9sb2dpbl9zdGVwcyIsIDEpCgogICAgICAgICAgICAgICAgcG9zdF9sb2dpbl9yZXN1bHQgPSBzZWxmLnNhbWxFeHRlbnNpb25Qb3N0TG9naW
 4oY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIGZpbmRfdXNlcl9ieV91aWQpCiAgICAgICAgICAgICAgICBwcmludCAiU2FtbC4gQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIHBvc3RfbG9naW5fcmVzd
 Wx0OiAnJXMnIiAlIHBvc3RfbG9naW5fcmVzdWx0CgogICAgICAgICAgICAgICAgcmV0dXJuIHBvc3RfbG9naW5fcmVzdWx0CiAgICAgICAgZWxpZiAoc3RlcCA9PSAyKToKICAgICAgICAgICAgcHJp
 bnQgIlNhbWwuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAyIgoKICAgICAgICAgICAgc2Vzc2lvbkF0dHJpYnV0ZXMgPSBjb250ZXh0LmdldCgic2Vzc2lvbkF0dHJpYnV0ZXMiKQogICAgICAgICAgICB
 pZiAoc2Vzc2lvbkF0dHJpYnV0ZXMgPT0gTm9uZSkgb3Igbm90IHNlc3Npb25BdHRyaWJ1dGVzLmNvbnRhaW5zS2V5KCJzYW1sX3VzZXJfdWlkIik6CiAgICAgICAgICAgICAgICBwcmludCAiU2FtbC
 4gQXV0aGVudGljYXRlIGZvciBzdGVwIDIuIHNhbWxfdXNlcl91aWQgaXMgZW1wdHkiCiAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgICAgIHNhbWxfdXNlcl91aWQgPSBzZXNza
 W9uQXR0cmlidXRlcy5nZXQoInNhbWxfdXNlcl91aWQiKQogICAgICAgICAgICBwYXNzZWRfc3RlcDEgPSBTdHJpbmdIZWxwZXIuaXNOb3RFbXB0eVN0cmluZyhzYW1sX3VzZXJfdWlkKQogICAgICAg
 ICAgICBpZiAobm90IHBhc3NlZF9zdGVwMSk6CiAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgICAgIGNyZWRlbnRpYWxzID0gSWRlbnRpdHkuaW5zdGFuY2UoKS5nZXRDcmVkZW5
 0aWFscygpCiAgICAgICAgICAgIHVzZXJfbmFtZSA9IGNyZWRlbnRpYWxzLmdldFVzZXJuYW1lKCkKICAgICAgICAgICAgdXNlcl9wYXNzd29yZCA9IGNyZWRlbnRpYWxzLmdldFBhc3N3b3JkKCkKCi
 AgICAgICAgICAgIGxvZ2dlZF9pbiA9IEZhbHNlCiAgICAgICAgICAgIGlmIChTdHJpbmdIZWxwZXIuaXNOb3RFbXB0eVN0cmluZyh1c2VyX25hbWUpIGFuZCBTdHJpbmdIZWxwZXIuaXNOb3RFbXB0e
 VN0cmluZyh1c2VyX3Bhc3N3b3JkKSk6CiAgICAgICAgICAgICAgICBsb2dnZWRfaW4gPSB1c2VyU2VydmljZS5hdXRoZW50aWNhdGUodXNlcl9uYW1lLCB1c2VyX3Bhc3N3b3JkKQoKICAgICAgICAg
 ICAgaWYgKG5vdCBsb2dnZWRfaW4pOgogICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgICAgICAgICAjIENoZWNrIGlmIHRoZXJlIGlzIHVzZXIgd2hpY2ggaGFzIHNhbWxfdXNlcl91aWQ
 KICAgICAgICAgICAgIyBBdm9pZCBtYXBwaW5nIFNhbWwgYWNjb3VudCB0byBtb3JlIHRoYW4gb25lIElEUCBhY2NvdW50CiAgICAgICAgICAgIGZpbmRfdXNlcl9ieV91aWQgPSB1c2VyU2VydmljZS
 5nZXRVc2VyQnlBdHRyaWJ1dGUoIm94RXh0ZXJuYWxVaWQiLCAic2FtbDolcyIgJSBzYW1sX3VzZXJfdWlkKQoKICAgICAgICAgICAgaWYgKGZpbmRfdXNlcl9ieV91aWQgPT0gTm9uZSk6CiAgICAgI
 CAgICAgICAgICAjIEFkZCBzYW1sX3VzZXJfdWlkIHRvIHVzZXIgb25lIGlkIFVJRHMKICAgICAgICAgICAgICAgIGZpbmRfdXNlcl9ieV91aWQgPSB1c2VyU2VydmljZS5hZGRVc2VyQXR0cmlidXRl
 KHVzZXJfbmFtZSwgIm94RXh0ZXJuYWxVaWQiLCAic2FtbDolcyIgJSBzYW1sX3VzZXJfdWlkKQogICAgICAgICAgICAgICAgaWYgKGZpbmRfdXNlcl9ieV91aWQgPT0gTm9uZSk6CiAgICAgICAgICA
 gICAgICAgICAgcHJpbnQgIlNhbWwuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAyLiBGYWlsZWQgdG8gdXBkYXRlIGN1cnJlbnQgdXNlciIKICAgICAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKCi
 AgICAgICAgICAgICAgICBwb3N0X2xvZ2luX3Jlc3VsdCA9IHNlbGYuc2FtbEV4dGVuc2lvblBvc3RMb2dpbihjb25maWd1cmF0aW9uQXR0cmlidXRlcywgZmluZF91c2VyX2J5X3VpZCkKICAgICAgI
 CAgICAgICAgIHByaW50ICJTYW1sLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMi4gcG9zdF9sb2dpbl9yZXN1bHQ6ICclcyciICUgcG9zdF9sb2dpbl9yZXN1bHQKCiAgICAgICAgICAgICAgICByZXR1
 cm4gcG9zdF9sb2dpbl9yZXN1bHQKICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgIGZvdW5kX3VzZXJfbmFtZSA9IGZpbmRfdXNlcl9ieV91aWQuZ2V0VXNlcklkKCkKICAgICAgICAgICA
 gICAgIHByaW50ICJTYW1sLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMi4gZm91bmRfdXNlcl9uYW1lOiAnJXMnIiAlIGZvdW5kX3VzZXJfbmFtZQogICAgCiAgICAgICAgICAgICAgICBpZiBTdHJpbm
 dIZWxwZXIuZXF1YWxzKHVzZXJfbmFtZSwgZm91bmRfdXNlcl9uYW1lKToKICAgICAgICAgICAgICAgICAgICBwb3N0X2xvZ2luX3Jlc3VsdCA9IHNlbGYuc2FtbEV4dGVuc2lvblBvc3RMb2dpbihjb
 25maWd1cmF0aW9uQXR0cmlidXRlcywgZmluZF91c2VyX2J5X3VpZCkKICAgICAgICAgICAgICAgICAgICBwcmludCAiU2FtbC4gQXV0aGVudGljYXRlIGZvciBzdGVwIDIuIHBvc3RfbG9naW5fcmVz
 dWx0OiAnJXMnIiAlIHBvc3RfbG9naW5fcmVzdWx0CiAgICAKICAgICAgICAgICAgICAgICAgICByZXR1cm4gcG9zdF9sb2dpbl9yZXN1bHQKICAgICAgICAKICAgICAgICAgICAgcmV0dXJuIEZhbHN
 lCiAgICAgICAgZWxzZToKICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgZGVmIHByZXBhcmVGb3JTdGVwKHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCByZXF1ZXN0UGFyYW1ldGVycy
 wgc3RlcCk6CiAgICAgICAgY29udGV4dCA9IENvbnRleHRzLmdldEV2ZW50Q29udGV4dCgpCiAgICAgICAgYXV0aGVudGljYXRpb25TZXJ2aWNlID0gQXV0aGVudGljYXRpb25TZXJ2aWNlLmluc3Rhb
 mNlKCkKCiAgICAgICAgaWYgKHN0ZXAgPT0gMSk6CiAgICAgICAgICAgIHByaW50ICJTYW1sLiBQcmVwYXJlIGZvciBzdGVwIDEiCiAgICAgICAgICAgIAogICAgICAgICAgICBodHRwU2VydmljZSA9
 IEh0dHBTZXJ2aWNlLmluc3RhbmNlKCkKICAgICAgICAgICAgcmVxdWVzdCA9IEZhY2VzQ29udGV4dC5nZXRDdXJyZW50SW5zdGFuY2UoKS5nZXRFeHRlcm5hbENvbnRleHQoKS5nZXRSZXF1ZXN0KCk
 KICAgICAgICAgICAgYXNzZXJ0aW9uQ29uc3VtZXJTZXJ2aWNlVXJsID0gaHR0cFNlcnZpY2UuY29uc3RydWN0U2VydmVyVXJsKHJlcXVlc3QpICsgIi9wb3N0bG9naW4iCiAgICAgICAgICAgIHByaW
 50ICJTYW1sLiBQcmVwYXJlIGZvciBzdGVwIDEuIFByZXBhcmVkIGFzc2VydGlvbkNvbnN1bWVyU2VydmljZVVybDogJyVzJyIgJSBhc3NlcnRpb25Db25zdW1lclNlcnZpY2VVcmwKICAgICAgICAgI
 CAgCiAgICAgICAgICAgIGN1cnJlbnRTYW1sQ29uZmlndXJhdGlvbiA9IHNlbGYuZ2V0Q3VycmVudFNhbWxDb25maWd1cmF0aW9uKHNlbGYuc2FtbENvbmZpZ3VyYXRpb24sIGNvbmZpZ3VyYXRpb25B
 dHRyaWJ1dGVzLCByZXF1ZXN0UGFyYW1ldGVycykKICAgICAgICAgICAgaWYgKGN1cnJlbnRTYW1sQ29uZmlndXJhdGlvbiA9PSBOb25lKToKICAgICAgICAgICAgICAgIHByaW50ICJTYW1sLiBQcmV
 wYXJlIGZvciBzdGVwIDEuIENsaWVudCBzYW1sIGNvbmZpZ3VyYXRpb24gaXMgaW52YWxpZCIKICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgIyBHZW5lcmF0ZSBhbiBBdX
 RoUmVxdWVzdCBhbmQgc2VuZCBpdCB0byB0aGUgaWRlbnRpdHkgcHJvdmlkZXIKICAgICAgICAgICAgc2FtbEF1dGhSZXF1ZXN0ID0gQXV0aFJlcXVlc3QoY3VycmVudFNhbWxDb25maWd1cmF0aW9uK
 QogICAgICAgICAgICBleHRlcm5hbF9hdXRoX3JlcXVlc3RfdXJpID0gY3VycmVudFNhbWxDb25maWd1cmF0aW9uLmdldElkcFNzb1RhcmdldFVybCgpICsgIj9TQU1MUmVxdWVzdD0iICsgc2FtbEF1
 dGhSZXF1ZXN0LmdldFJlcXVlc3QoVHJ1ZSwgYXNzZXJ0aW9uQ29uc3VtZXJTZXJ2aWNlVXJsKQoKICAgICAgICAgICAgcHJpbnQgIlNhbWwuIFByZXBhcmUgZm9yIHN0ZXAgMS4gZXh0ZXJuYWxfYXV
 0aF9yZXF1ZXN0X3VyaTogJyVzJyIgJSBleHRlcm5hbF9hdXRoX3JlcXVlc3RfdXJpCiAgICAgICAgICAgIAogICAgICAgICAgICBjb250ZXh0LnNldCgiZXh0ZXJuYWxfYXV0aF9yZXF1ZXN0X3VyaS
 IsIGV4dGVybmFsX2F1dGhfcmVxdWVzdF91cmkpCgogICAgICAgICAgICByZXR1cm4gVHJ1ZQogICAgICAgIGVsaWYgKHN0ZXAgPT0gMik6CiAgICAgICAgICAgIHByaW50ICJTYW1sLiBQcmVwYXJlI
 GZvciBzdGVwIDIiCgogICAgICAgICAgICByZXR1cm4gVHJ1ZQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgIGRlZiBnZXRFeHRyYVBhcmFtZXRlcnNGb3JTdGVwKHNl
 bGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCBzdGVwKToKICAgICAgICBpZiAoc3RlcCA9PSAyKToKICAgICAgICAgICAgcmV0dXJuIEFycmF5cy5hc0xpc3QoInNhbWxfdXNlcl91aWQiKQoKICA
 gICAgICByZXR1cm4gTm9uZQoKICAgIGRlZiBnZXRDb3VudEF1dGhlbnRpY2F0aW9uU3RlcHMoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOgogICAgICAgIGNvbnRleHQgPSBDb250ZXh0cy
 5nZXRFdmVudENvbnRleHQoKQogICAgICAgIGlmIChjb250ZXh0LmlzU2V0KCJzYW1sX2NvdW50X2xvZ2luX3N0ZXBzIikpOgogICAgICAgICAgICByZXR1cm4gY29udGV4dC5nZXQoInNhbWxfY291b
 nRfbG9naW5fc3RlcHMiKQogICAgICAgIAogICAgICAgIHJldHVybiAyCgogICAgZGVmIGdldFBhZ2VGb3JTdGVwKHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCBzdGVwKToKICAgICAgICBp
 ZiAoc3RlcCA9PSAxKToKICAgICAgICAgICAgc2FtbF9hbGxvd19iYXNpY19sb2dpbiA9IEZhbHNlCiAgICAgICAgICAgIGlmIChjb25maWd1cmF0aW9uQXR0cmlidXRlcy5jb250YWluc0tleSgic2F
 tbF9hbGxvd19iYXNpY19sb2dpbiIpKToKICAgICAgICAgICAgICAgIHNhbWxfYWxsb3dfYmFzaWNfbG9naW4gPSBTdHJpbmdIZWxwZXIudG9Cb29sZWFuKGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLm
 dldCgic2FtbF9hbGxvd19iYXNpY19sb2dpbiIpLmdldFZhbHVlMigpLCBGYWxzZSkKCiAgICAgICAgICAgIGlmIChzYW1sX2FsbG93X2Jhc2ljX2xvZ2luKToKICAgICAgICAgICAgICAgIHJldHVyb
 iAiL2xvZ2luLnhodG1sIgogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgcmV0dXJuICIvYXV0aC9zYW1sL3NhbWxsb2dpbi54aHRtbCIKCiAgICAgICAgcmV0dXJuICIvYXV0aC9zYW1s
 L3NhbWxwb3N0bG9naW4ueGh0bWwiCgogICAgZGVmIGxvZ291dChzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcywgcmVxdWVzdFBhcmFtZXRlcnMpOgogICAgICAgIHJldHVybiBUcnVlCgogICA
 gZGVmIGlzUGFzc2VkU3RlcDEoKToKICAgICAgICBjcmVkZW50aWFscyA9IElkZW50aXR5Lmluc3RhbmNlKCkuZ2V0Q3JlZGVudGlhbHMoKQogICAgICAgIHVzZXJfbmFtZSA9IGNyZWRlbnRpYWxzLm
 dldFVzZXJuYW1lKCkKICAgICAgICBwYXNzZWRfc3RlcDEgPSBTdHJpbmdIZWxwZXIuaXNOb3RFbXB0eVN0cmluZyh1c2VyX25hbWUpCgogICAgICAgIHJldHVybiBwYXNzZWRfc3RlcDEKCiAgICBkZ
 WYgbG9hZENlcml0aWZpY2F0ZShzZWxmLCBhc2ltYmFfc2FtbF9jZXJ0aWZpY2F0ZV9maWxlKToKICAgICAgICBhc2ltYmFfc2FtbF9jZXJ0aWZpY2F0ZSA9IE5vbmUKCiAgICAgICAgIyBMb2FkIGNl
 cnRpZmljYXRlIGZyb20gZmlsZQogICAgICAgIGYgPSBvcGVuKGFzaW1iYV9zYW1sX2NlcnRpZmljYXRlX2ZpbGUsICdyJykKICAgICAgICB0cnk6CiAgICAgICAgICAgIGFzaW1iYV9zYW1sX2NlcnR
 pZmljYXRlID0gZi5yZWFkKCkKICAgICAgICBleGNlcHQ6CiAgICAgICAgICAgIHByaW50ICJGYWlsZWQgdG8gbG9hZCBjZXJ0aWZpY2F0ZSBmcm9tIGZpbGU6ICclcyciICUgYXNpbWJhX3NhbWxfY2
 VydGlmaWNhdGVfZmlsZQogICAgICAgICAgICByZXR1cm4gTm9uZQogICAgICAgIGZpbmFsbHk6CiAgICAgICAgICAgIGYuY2xvc2UoKQogICAgICAgIAogICAgICAgIHJldHVybiBhc2ltYmFfc2Ftb
 F9jZXJ0aWZpY2F0ZQoKICAgIGRlZiBnZXRDbGllbnRDb25maWd1cmF0aW9uKHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCByZXF1ZXN0UGFyYW1ldGVycyk6CiAgICAgICAgIyBHZXQgY2xp
 ZW50IGNvbmZpZ3VyYXRpb24KICAgICAgICBpZiAoY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuY29udGFpbnNLZXkoInNhbWxfY2xpZW50X2NvbmZpZ3VyYXRpb25fYXR0cmlidXRlIikpOgogICAgICA
 gICAgICBzYW1sX2NsaWVudF9jb25maWd1cmF0aW9uX2F0dHJpYnV0ZSA9IGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmdldCgic2FtbF9jbGllbnRfY29uZmlndXJhdGlvbl9hdHRyaWJ1dGUiKS5nZX
 RWYWx1ZTIoKQogICAgICAgICAgICBwcmludCAiU2FtbC4gR2V0Q2xpZW50Q29uZmlndXJhdGlvbi4gVXNpbmcgY2xpZW50IGF0dHJpYnV0ZTogJyVzJyIgJSBzYW1sX2NsaWVudF9jb25maWd1cmF0a
 W9uX2F0dHJpYnV0ZQoKICAgICAgICAgICAgaWYgKHJlcXVlc3RQYXJhbWV0ZXJzID09IE5vbmUpOgogICAgICAgICAgICAgICAgcmV0dXJuIE5vbmUKCiAgICAgICAgICAgIGNsaWVudF9pZCA9IE5v
 bmUKICAgICAgICAgICAgY2xpZW50X2lkX2FycmF5ID0gcmVxdWVzdFBhcmFtZXRlcnMuZ2V0KCJjbGllbnRfaWQiKQogICAgICAgICAgICBpZiAoQXJyYXlIZWxwZXIuaXNOb3RFbXB0eShjbGllbnR
 faWRfYXJyYXkpIGFuZCBTdHJpbmdIZWxwZXIuaXNOb3RFbXB0eVN0cmluZyhjbGllbnRfaWRfYXJyYXlbMF0pKToKICAgICAgICAgICAgICAgIGNsaWVudF9pZCA9IGNsaWVudF9pZF9hcnJheVswXQ
 oKICAgICAgICAgICAgaWYgKGNsaWVudF9pZCA9PSBOb25lKToKICAgICAgICAgICAgICAgIGV2ZW50Q29udGV4dCA9IENvbnRleHRzLmdldEV2ZW50Q29udGV4dCgpCiAgICAgICAgICAgICAgICBpZ
 iAoZXZlbnRDb250ZXh0LmlzU2V0KCJzZXNzaW9uQXR0cmlidXRlcyIpKToKICAgICAgICAgICAgICAgICAgICBjbGllbnRfaWQgPSBldmVudENvbnRleHQuZ2V0KCJzZXNzaW9uQXR0cmlidXRlcyIp
 LmdldCgiY2xpZW50X2lkIikKCiAgICAgICAgICAgIGlmIChjbGllbnRfaWQgPT0gTm9uZSk6CiAgICAgICAgICAgICAgICBwcmludCAiU2FtbC4gR2V0Q2xpZW50Q29uZmlndXJhdGlvbi4gY2xpZW5
 0X2lkIGlzIGVtcHR5IgogICAgICAgICAgICAgICAgcmV0dXJuIE5vbmUKCiAgICAgICAgICAgIGNsaWVudFNlcnZpY2UgPSBDbGllbnRTZXJ2aWNlLmluc3RhbmNlKCkKICAgICAgICAgICAgY2xpZW
 50ID0gY2xpZW50U2VydmljZS5nZXRDbGllbnQoY2xpZW50X2lkKQogICAgICAgICAgICBpZiAoY2xpZW50ID09IE5vbmUpOgogICAgICAgICAgICAgICAgcHJpbnQgIlNhbWwuIEdldENsaWVudENvb
 mZpZ3VyYXRpb24uIEZhaWxlZCB0byBmaW5kIGNsaWVudCAnJXMnIGluIGxvY2FsIExEQVAiICUgY2xpZW50X2lkCiAgICAgICAgICAgICAgICByZXR1cm4gTm9uZQoKICAgICAgICAgICAgc2FtbF9j
 bGllbnRfY29uZmlndXJhdGlvbiA9IGNsaWVudFNlcnZpY2UuZ2V0Q3VzdG9tQXR0cmlidXRlKGNsaWVudCwgc2FtbF9jbGllbnRfY29uZmlndXJhdGlvbl9hdHRyaWJ1dGUpCiAgICAgICAgICAgIGl
 mICgoc2FtbF9jbGllbnRfY29uZmlndXJhdGlvbiA9PSBOb25lKSBvciBTdHJpbmdIZWxwZXIuaXNFbXB0eShzYW1sX2NsaWVudF9jb25maWd1cmF0aW9uLmdldFZhbHVlKCkpKToKICAgICAgICAgIC
 AgICAgIHByaW50ICJTYW1sLiBHZXRDbGllbnRDb25maWd1cmF0aW9uLiBDbGllbnQgJyVzJyBhdHRyaWJ1dGUgJyVzJyBpcyBlbXB0eSIgJSAoIGNsaWVudF9pZCwgc2FtbF9jbGllbnRfY29uZmlnd
 XJhdGlvbl9hdHRyaWJ1dGUgKQogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgcHJpbnQgIlNhbWwuIEdldENsaWVudENvbmZpZ3VyYXRpb24uIENsaWVudCAnJXMnIGF0dHJpYnV0ZSAn
 JXMnIGlzICclcyciICUgKCBjbGllbnRfaWQsIHNhbWxfY2xpZW50X2NvbmZpZ3VyYXRpb25fYXR0cmlidXRlLCBzYW1sX2NsaWVudF9jb25maWd1cmF0aW9uICkKICAgICAgICAgICAgICAgIHJldHV
 ybiBzYW1sX2NsaWVudF9jb25maWd1cmF0aW9uCgogICAgICAgIHJldHVybiBOb25lCgogICAgZGVmIGdldEN1cnJlbnRTYW1sQ29uZmlndXJhdGlvbihzZWxmLCBjdXJyZW50U2FtbENvbmZpZ3VyYX
 Rpb24sIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCByZXF1ZXN0UGFyYW1ldGVycyk6CiAgICAgICAgc2FtbF9jbGllbnRfY29uZmlndXJhdGlvbiA9IHNlbGYuZ2V0Q2xpZW50Q29uZmlndXJhdGlvb
 ihjb25maWd1cmF0aW9uQXR0cmlidXRlcywgcmVxdWVzdFBhcmFtZXRlcnMpCiAgICAgICAgaWYgKHNhbWxfY2xpZW50X2NvbmZpZ3VyYXRpb24gPT0gTm9uZSk6CiAgICAgICAgICAgIHJldHVybiBj
 dXJyZW50U2FtbENvbmZpZ3VyYXRpb24KICAgICAgICAKICAgICAgICBzYW1sX2NsaWVudF9jb25maWd1cmF0aW9uX3ZhbHVlID0ganNvbi5sb2FkcyhzYW1sX2NsaWVudF9jb25maWd1cmF0aW9uLmd
 ldFZhbHVlKCkpCgogICAgICAgIGNsaWVudF9hc2ltYmFfc2FtbF9jZXJ0aWZpY2F0ZSA9IE5vbmUgICAgICAKICAgICAgICBjbGllbnRfYXNpbWJhX3NhbWxfY2VydGlmaWNhdGVfZmlsZSA9IHNhbW
 xfY2xpZW50X2NvbmZpZ3VyYXRpb25fdmFsdWVbImFzaW1iYV9zYW1sX2NlcnRpZmljYXRlX2ZpbGUiXQogICAgICAgIGlmIChTdHJpbmdIZWxwZXIuaXNOb3RFbXB0eShjbGllbnRfYXNpbWJhX3Nhb
 WxfY2VydGlmaWNhdGVfZmlsZSkpOgogICAgICAgICAgICBjbGllbnRfYXNpbWJhX3NhbWxfY2VydGlmaWNhdGUgPSBzZWxmLmxvYWRDZXJpdGlmaWNhdGUoY2xpZW50X2FzaW1iYV9zYW1sX2NlcnRp
 ZmljYXRlX2ZpbGUpCiAgICAgICAgICAgIGlmIChTdHJpbmdIZWxwZXIuaXNFbXB0eShjbGllbnRfYXNpbWJhX3NhbWxfY2VydGlmaWNhdGUpKToKICAgICAgICAgICAgICAgIHByaW50ICJTYW1sLiB
 CdWlsZENsaWVudFNhbWxDb25maWd1cmF0aW9uLiBGaWxlIHdpdGggeDUwOSBjZXJ0aWZpY2F0ZSBzaG91bGQgYmUgbm90IGVtcHR5LiBVc2luZyBkZWZhdWx0IGNvbmZpZ3VyYXRpb24iCiAgICAgIC
 AgICAgICAgICByZXR1cm4gY3VycmVudFNhbWxDb25maWd1cmF0aW9uCgogICAgICAgIGNsaWVudFNhbWxDb25maWd1cmF0aW9uID0gY3VycmVudFNhbWxDb25maWd1cmF0aW9uLmNsb25lKCkKICAgI
 CAgICAKICAgICAgICBpZiAoY2xpZW50X2FzaW1iYV9zYW1sX2NlcnRpZmljYXRlICE9IE5vbmUpOgogICAgICAgICAgICBjbGllbnRTYW1sQ29uZmlndXJhdGlvbi5sb2FkQ2VydGlmaWNhdGVGcm9t
 U3RyaW5nKGNsaWVudF9hc2ltYmFfc2FtbF9jZXJ0aWZpY2F0ZSkKCiAgICAgICAgY2xpZW50X2FzaW1iYV9lbnRpdHlfaWQgPSBzYW1sX2NsaWVudF9jb25maWd1cmF0aW9uX3ZhbHVlWyJhc2ltYmF
 fZW50aXR5X2lkIl0KICAgICAgICBjbGllbnRTYW1sQ29uZmlndXJhdGlvbi5zZXRJc3N1ZXIoY2xpZW50X2FzaW1iYV9lbnRpdHlfaWQpCiAgICAgICAgCiAgICAgICAgc2FtbF91c2VfYXV0aG5fY2
 9udGV4dCA9IHNhbWxfY2xpZW50X2NvbmZpZ3VyYXRpb25fdmFsdWVbInNhbWxfdXNlX2F1dGhuX2NvbnRleHQiXQogICAgICAgIGNsaWVudF91c2Vfc2FtbF91c2VfYXV0aG5fY29udGV4dCA9IFN0c
 mluZ0hlbHBlci50b0Jvb2xlYW4oc2FtbF91c2VfYXV0aG5fY29udGV4dCwgVHJ1ZSkKICAgICAgICBjbGllbnRTYW1sQ29uZmlndXJhdGlvbi5zZXRVc2VSZXF1ZXN0ZWRBdXRobkNvbnRleHQoY2xp
 ZW50X3VzZV9zYW1sX3VzZV9hdXRobl9jb250ZXh0KQoKICAgICAgICByZXR1cm4gY2xpZW50U2FtbENvbmZpZ3VyYXRpb24KCiAgICBkZWYgcHJlcGFyZUF0dHJpYnV0ZXNNYXBwaW5nKHNlbGYsIHN
 hbWxfaWRwX2F0dHJpYnV0ZXNfbWFwcGluZyk6CiAgICAgICAgc2FtbF9pZHBfYXR0cmlidXRlc19tYXBwaW5nX2pzb24gPSBqc29uLmxvYWRzKHNhbWxfaWRwX2F0dHJpYnV0ZXNfbWFwcGluZykKIC
 AgICAgICAKICAgICAgICBpZiBsZW4oc2FtbF9pZHBfYXR0cmlidXRlc19tYXBwaW5nX2pzb24pID09IDA6CiAgICAgICAgICAgIHByaW50ICJTYW1sLiBQcmVwYXJlQXR0cmlidXRlc01hcHBpbmcuI
 FRoZXJlIGlzIG5vIGF0dHJpYnV0ZXMgbWFwcGluZyBzcGVjaWZpZWQgaW4gc2FtbF9pZHBfYXR0cmlidXRlc19tYXBwaW5nIHByb3BlcnR5IgogICAgICAgICAgICByZXR1cm4gTm9uZQoKICAgICAg
 ICBhdHRyaWJ1dGVNYXBwaW5nID0gSWRlbnRpdHlIYXNoTWFwKCkKICAgICAgICBmb3IgbG9jYWxfYXR0cmlidXRlX25hbWUgaW4gc2FtbF9pZHBfYXR0cmlidXRlc19tYXBwaW5nX2pzb246CiAgICA
 gICAgICAgIGxvY2FsQXR0cmlidXRlID0gU3RyaW5nSGVscGVyLnRvTG93ZXJDYXNlKGxvY2FsX2F0dHJpYnV0ZV9uYW1lKQogICAgICAgICAgICBmb3IgaWRwX2F0dHJpYnV0ZV9uYW1lIGluIHNhbW
 xfaWRwX2F0dHJpYnV0ZXNfbWFwcGluZ19qc29uW2xvY2FsX2F0dHJpYnV0ZV9uYW1lXToKICAgICAgICAgICAgICAgIGlkcEF0dHJpYnV0ZSA9IFN0cmluZ0hlbHBlci50b0xvd2VyQ2FzZShpZHBfY
 XR0cmlidXRlX25hbWUpCiAgICAgICAgICAgICAgICBhdHRyaWJ1dGVNYXBwaW5nLnB1dChpZHBBdHRyaWJ1dGUsIGxvY2FsQXR0cmlidXRlKQogICAgICAgIAogICAgICAgIHJldHVybiBhdHRyaWJ1
 dGVNYXBwaW5nCgogICAgZGVmIHByZXBhcmVVc2VyT2JqZWN0Q2xhc3NlcyhzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6CiAgICAgICAgdXNlcl9vYmplY3RfY2xhc3NlcyA9IGNvbmZpZ3V
 yYXRpb25BdHRyaWJ1dGVzLmdldCgidXNlcl9vYmplY3RfY2xhc3NlcyIpLmdldFZhbHVlMigpCgogICAgICAgIHVzZXJfb2JqZWN0X2NsYXNzZXNfbGlzdF9hcnJheSA9IFN0cmluZ0hlbHBlci5zcG
 xpdCh1c2VyX29iamVjdF9jbGFzc2VzLCAiLCIpCiAgICAgICAgaWYgKEFycmF5SGVscGVyLmlzRW1wdHkodXNlcl9vYmplY3RfY2xhc3Nlc19saXN0X2FycmF5KSk6CiAgICAgICAgICAgIHJldHVyb
 iBOb25lCiAgICAgICAgCiAgICAgICAgcmV0dXJuIHVzZXJfb2JqZWN0X2NsYXNzZXNfbGlzdF9hcnJheQoKICAgIGRlZiBwcmVwYXJlVXNlckVuZm9yY2VVbmlxdWVuZXNzQXR0cmlidXRlcyhzZWxm
 LCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6CiAgICAgICAgZW5mb3JjZV91bmlxdWVuZXNzX2F0dHJfbGlzdCA9IGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmdldCgiZW5mb3JjZV91bmlxdWVuZXN
 zX2F0dHJfbGlzdCIpLmdldFZhbHVlMigpCgogICAgICAgIGVuZm9yY2VfdW5pcXVlbmVzc19hdHRyX2xpc3RfYXJyYXkgPSBTdHJpbmdIZWxwZXIuc3BsaXQoZW5mb3JjZV91bmlxdWVuZXNzX2F0dH
 JfbGlzdCwgIiwiKQogICAgICAgIGlmIChBcnJheUhlbHBlci5pc0VtcHR5KGVuZm9yY2VfdW5pcXVlbmVzc19hdHRyX2xpc3RfYXJyYXkpKToKICAgICAgICAgICAgcmV0dXJuIE5vbmUKICAgICAgI
 CAKICAgICAgICByZXR1cm4gZW5mb3JjZV91bmlxdWVuZXNzX2F0dHJfbGlzdF9hcnJheQoKICAgIGRlZiBwcmVwYXJlQ3VycmVudEF0dHJpYnV0ZXNNYXBwaW5nKHNlbGYsIGN1cnJlbnRBdHRyaWJ1
 dGVzTWFwcGluZywgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIHJlcXVlc3RQYXJhbWV0ZXJzKToKICAgICAgICBzYW1sX2NsaWVudF9jb25maWd1cmF0aW9uID0gc2VsZi5nZXRDbGllbnRDb25maWd
 1cmF0aW9uKGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCByZXF1ZXN0UGFyYW1ldGVycykKICAgICAgICBpZiAoc2FtbF9jbGllbnRfY29uZmlndXJhdGlvbiA9PSBOb25lKToKICAgICAgICAgICAgcm
 V0dXJuIGN1cnJlbnRBdHRyaWJ1dGVzTWFwcGluZwoKICAgICAgICBzYW1sX2NsaWVudF9jb25maWd1cmF0aW9uX3ZhbHVlID0ganNvbi5sb2FkcyhzYW1sX2NsaWVudF9jb25maWd1cmF0aW9uLmdld
 FZhbHVlKCkpCgogICAgICAgIGNsaWVudEF0dHJpYnV0ZXNNYXBwaW5nID0gc2VsZi5wcmVwYXJlQXR0cmlidXRlc01hcHBpbmcoc2FtbF9jbGllbnRfY29uZmlndXJhdGlvbl92YWx1ZVsic2FtbF9p
 ZHBfYXR0cmlidXRlc19tYXBwaW5nIl0pCiAgICAgICAgaWYgKGNsaWVudEF0dHJpYnV0ZXNNYXBwaW5nID09IE5vbmUpOgogICAgICAgICAgICBwcmludCAiU2FtbC4gUHJlcGFyZUN1cnJlbnRBdHR
 yaWJ1dGVzTWFwcGluZy4gQ2xpZW50IGF0dHJpYnV0ZXMgbWFwcGluZyBpcyBpbnZhbGlkLiBVc2luZyBkZWZhdWx0IG9uZSIKICAgICAgICAgICAgcmV0dXJuIGN1cnJlbnRBdHRyaWJ1dGVzTWFwcG
 luZwoKICAgICAgICByZXR1cm4gY2xpZW50QXR0cmlidXRlc01hcHBpbmcKCiAgICBkZWYgc2FtbEV4dGVuc2lvblBvc3RMb2dpbihzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcywgdXNlcik6C
 iAgICAgICAgaWYgKHNlbGYuc2FtbEV4dGVuc2lvbk1vZHVsZSA9PSBOb25lKToKICAgICAgICAgICAgcmV0dXJuIFRydWUKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBvc3RfbG9naW5fcmVzdWx0
 ID0gc2VsZi5zYW1sRXh0ZW5zaW9uTW9kdWxlLnBvc3RMb2dpbihjb25maWd1cmF0aW9uQXR0cmlidXRlcywgdXNlcikKICAgICAgICAgICAgcHJpbnQgIlNhbWwuIEV4dGVuc2lvblBvc3Rsb2dpbiB
 yZXN1bHQ6ICclcyciICUgcG9zdF9sb2dpbl9yZXN1bHQKCiAgICAgICAgICAgIHJldHVybiBwb3N0X2xvZ2luX3Jlc3VsdAogICAgICAgIGV4Y2VwdCBFeGNlcHRpb24sIGV4OgogICAgICAgICAgIC
 BwcmludCAiU2FtbC4gRXh0ZW5zaW9uUG9zdGxvZ2luLiBGYWlsZWQgdG8gZXhlY3V0ZSBwb3N0TG9naW4gbWV0aG9kIgogICAgICAgICAgICBwcmludCAiU2FtbC4gRXh0ZW5zaW9uUG9zdGxvZ2luL
 iBVbmV4cGVjdGVkIGVycm9yOiIsIGV4CiAgICAgICAgICAgIHJldHVybiBGYWxzZQogICAgICAgIGV4Y2VwdCBqYXZhLmxhbmcuVGhyb3dhYmxlLCBleDoKICAgICAgICAgICAgcHJpbnQgIlNhbWwu
 IEV4dGVuc2lvblBvc3Rsb2dpbi4gRmFpbGVkIHRvIGV4ZWN1dGUgcG9zdExvZ2luIG1ldGhvZCIKICAgICAgICAgICAgZXgucHJpbnRTdGFja1RyYWNlKCkgCiAgICAgICAgICAgIHJldHVybiBGYWx
 zZQoKICAgIGRlZiBjaGVja1VzZXJVbmlxdWVuZXNzKHNlbGYsIHVzZXIpOgogICAgICAgIGlmIChzZWxmLnVzZXJFbmZvcmNlQXR0cmlidXRlc1VuaXF1ZW5lc3MgPT0gTm9uZSk6CiAgICAgICAgIC
 AgIHJldHVybiBUcnVlCgogICAgICAgIHVzZXJTZXJ2aWNlID0gVXNlclNlcnZpY2UuaW5zdGFuY2UoKQoKICAgICAgICAjIFByZXBhcmUgdXNlciBvYmplY3QgdG8gc2VhcmNoIGJ5IHBhdHRlcm4KI
 CAgICAgICB1c2VyQmFzZURuID0gdXNlclNlcnZpY2UuZ2V0RG5Gb3JVc2VyKE5vbmUpIAoKICAgICAgICB1c2VyVG9TZWFyY2ggPSBVc2VyKCkKICAgICAgICB1c2VyVG9TZWFyY2guc2V0RG4odXNl
 ckJhc2VEbikKCiAgICAgICAgZm9yIHVzZXJBdHRyaWJ1dGVOYW1lIGluIHNlbGYudXNlckVuZm9yY2VBdHRyaWJ1dGVzVW5pcXVlbmVzczoKICAgICAgICAgICAgYXR0cmlidXRlX3ZhbHVlc19saXN
 0ID0gdXNlci5nZXRBdHRyaWJ1dGVWYWx1ZXModXNlckF0dHJpYnV0ZU5hbWUpCiAgICAgICAgICAgIGlmIChhdHRyaWJ1dGVfdmFsdWVzX2xpc3QgIT0gTm9uZSkgYW5kIChhdHRyaWJ1dGVfdmFsdW
 VzX2xpc3Quc2l6ZSgpID4gMCk6CiAgICAgICAgICAgICAgICB1c2VyVG9TZWFyY2guc2V0QXR0cmlidXRlKHVzZXJBdHRyaWJ1dGVOYW1lLCBhdHRyaWJ1dGVfdmFsdWVzX2xpc3QpCgogICAgICAgI
 GxkYXBFbnRyeU1hbmFnZXIgPSBDb21wb25lbnQuZ2V0SW5zdGFuY2UoImxkYXBFbnRyeU1hbmFnZXIiKQoKICAgICAgICAjIFRPRE86IFJlcGxhY2Ugd2l0aCB1c2VyU2VydmljZS5maW5kRW50cmll
 cyBpbiBDRSAyLjQuNQogICAgICAgIHVzZXJzID0gbGRhcEVudHJ5TWFuYWdlci5maW5kRW50cmllcyh1c2VyVG9TZWFyY2gsIDEsIDEpCiAgICAgICAgaWYgdXNlcnMuc2l6ZSgpID4gMDoKICAgICA
 gICAgICAgcmV0dXJuIEZhbHNlCgogICAgICAgIHJldHVybiBUcnVlCgogICAgZGVmIGdldE1hcHBlZFVzZXIoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIHJlcXVlc3RQYXJhbWV0ZXJzLC
 BzYW1sX3Jlc3BvbnNlX2F0dHJpYnV0ZXMpOgogICAgICAgICMgQ29udmVydCBTYW1sIHJlc3VsdCBhdHRyaWJ1dGVzIGtleXMgdG8gbG92ZXIgY2FzZQogICAgICAgIHNhbWxfcmVzcG9uc2Vfbm9yb
 WFsaXplZF9hdHRyaWJ1dGVzID0gSGFzaE1hcCgpCiAgICAgICAgZm9yIHNhbWxfcmVzcG9uc2VfYXR0cmlidXRlX2VudHJ5IGluIHNhbWxfcmVzcG9uc2VfYXR0cmlidXRlcy5lbnRyeVNldCgpOgog
 ICAgICAgICAgICBzYW1sX3Jlc3BvbnNlX25vcm1hbGl6ZWRfYXR0cmlidXRlcy5wdXQoU3RyaW5nSGVscGVyLnRvTG93ZXJDYXNlKHNhbWxfcmVzcG9uc2VfYXR0cmlidXRlX2VudHJ5LmdldEtleSg
 pKSwgc2FtbF9yZXNwb25zZV9hdHRyaWJ1dGVfZW50cnkuZ2V0VmFsdWUoKSkKICAgICAgICAKICAgICAgICBjdXJyZW50QXR0cmlidXRlc01hcHBpbmcgPSBzZWxmLnByZXBhcmVDdXJyZW50QXR0cm
 lidXRlc01hcHBpbmcoc2VsZi5hdHRyaWJ1dGVzTWFwcGluZywgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIHJlcXVlc3RQYXJhbWV0ZXJzKQogICAgICAgIHByaW50ICJTYW1sLiBHZXQgbWFwcGVkI
 HVzZXIuIFVzaW5nIG5leHQgYXR0cmlidXRlcyBtYXBwaW5nICclcyciICUgY3VycmVudEF0dHJpYnV0ZXNNYXBwaW5nCgogICAgICAgIG5ld1VzZXIgPSBVc2VyKCkKCiAgICAgICAgIyBTZXQgY3Vz
 dG9tIG9iamVjdCBjbGFzc2VzCiAgICAgICAgaWYgc2VsZi51c2VyT2JqZWN0Q2xhc3NlcyAhPSBOb25lOgogICAgICAgICAgICBwcmludCAiU2FtbC4gR2V0IG1hcHBlZCB1c2VyLiBVc2VyIGN1c3R
 vbSBvYmplY3RDbGFzc2VzIHRvIGFkZCBwZXJzb25zOiAnJXMnIiAlIFV0aWwuYXJyYXkyQXJyYXlMaXN0KHNlbGYudXNlck9iamVjdENsYXNzZXMpCiAgICAgICAgICAgIG5ld1VzZXIuc2V0Q3VzdG
 9tT2JqZWN0Q2xhc3NlcyhzZWxmLnVzZXJPYmplY3RDbGFzc2VzKQoKICAgICAgICBmb3IgYXR0cmlidXRlc01hcHBpbmdFbnRyeSBpbiBjdXJyZW50QXR0cmlidXRlc01hcHBpbmcuZW50cnlTZXQoK
 ToKICAgICAgICAgICAgaWRwQXR0cmlidXRlID0gYXR0cmlidXRlc01hcHBpbmdFbnRyeS5nZXRLZXkoKQogICAgICAgICAgICBsb2NhbEF0dHJpYnV0ZSA9IGF0dHJpYnV0ZXNNYXBwaW5nRW50cnku
 Z2V0VmFsdWUoKQoKICAgICAgICAgICAgaWYgc2VsZi5kZWJ1Z0Vucm9sbG1lbnQ6CiAgICAgICAgICAgICAgICBwcmludCAiU2FtbC4gR2V0IG1hcHBlZCB1c2VyLiBUcnlpbmcgdG8gbWFwICclcyc
 gaW50byAnJXMnIiAlIChpZHBBdHRyaWJ1dGUsIGxvY2FsQXR0cmlidXRlKQoKICAgICAgICAgICAgbG9jYWxBdHRyaWJ1dGVWYWx1ZSA9IHNhbWxfcmVzcG9uc2Vfbm9ybWFsaXplZF9hdHRyaWJ1dG
 VzLmdldChpZHBBdHRyaWJ1dGUpCiAgICAgICAgICAgIGlmIChsb2NhbEF0dHJpYnV0ZVZhbHVlICE9IE5vbmUpOgogICAgICAgICAgICAgICAgaWYgc2VsZi5kZWJ1Z0Vucm9sbG1lbnQ6CiAgICAgI
 CAgICAgICAgICAgICAgcHJpbnQgIlNhbWwuIEdldCBtYXBwZWQgdXNlci4gU2V0dGluZyBhdHRyaWJ1dGUgJyVzJyB2YWx1ZSAnJXMnIiAlIChsb2NhbEF0dHJpYnV0ZSwgbG9jYWxBdHRyaWJ1dGVW
 YWx1ZSkKCiAgICAgICAgICAgICAgICBuZXdVc2VyLnNldEF0dHJpYnV0ZShsb2NhbEF0dHJpYnV0ZSwgbG9jYWxBdHRyaWJ1dGVWYWx1ZSkKCiAgICAgICAgcmV0dXJuIG5ld1VzZXIKCiAgICBkZWY
 gZ2V0TWFwcGVkQWxsQXR0cmlidXRlc1VzZXIoc2VsZiwgc2FtbF9yZXNwb25zZV9hdHRyaWJ1dGVzKToKICAgICAgICB1c2VyID0gVXNlcigpCgogICAgICAgICMgU2V0IGN1c3RvbSBvYmplY3QgY2
 xhc3NlcwogICAgICAgIGlmIHNlbGYudXNlck9iamVjdENsYXNzZXMgIT0gTm9uZToKICAgICAgICAgICAgcHJpbnQgIlNhbWwuIEdldCBtYXBwZWQgYWxsIGF0dHJpYnV0ZXMgdXNlci4gVXNlciBjd
 XN0b20gb2JqZWN0Q2xhc3NlcyB0byBhZGQgcGVyc29uczogJyVzJyIgJSBVdGlsLmFycmF5MkFycmF5TGlzdChzZWxmLnVzZXJPYmplY3RDbGFzc2VzKQogICAgICAgICAgICB1c2VyLnNldEN1c3Rv
 bU9iamVjdENsYXNzZXMoc2VsZi51c2VyT2JqZWN0Q2xhc3NlcykKCiAgICAgICAgIyBQcmVwYXJlIG1hcCB0byBkbyBxdWljayBtYXBwaW5nIAogICAgICAgIGF0dHJpYnV0ZVNlcnZpY2UgPSBBdHR
 yaWJ1dGVTZXJ2aWNlLmluc3RhbmNlKCkKICAgICAgICBsZGFwQXR0cmlidXRlcyA9IGF0dHJpYnV0ZVNlcnZpY2UuZ2V0QWxsQXR0cmlidXRlcygpCiAgICAgICAgc2FtbFVyaVRvQXR0cmlidXRlc0
 1hcCA9IEhhc2hNYXAoKQogICAgICAgIGZvciBsZGFwQXR0cmlidXRlIGluIGxkYXBBdHRyaWJ1dGVzOgogICAgICAgICAgICBzYW1sMlVyaSA9IGxkYXBBdHRyaWJ1dGUuZ2V0U2FtbDJVcmkoKQogI
 CAgICAgICAgICBpZiAoc2FtbDJVcmkgPT0gTm9uZSk6CiAgICAgICAgICAgICAgICBzYW1sMlVyaSA9IGF0dHJpYnV0ZVNlcnZpY2UuZ2V0RGVmYXVsdFNhbWwyVXJpKGxkYXBBdHRyaWJ1dGUuZ2V0
 TmFtZSgpKQogICAgICAgICAgICBzYW1sVXJpVG9BdHRyaWJ1dGVzTWFwLnB1dChzYW1sMlVyaSwgbGRhcEF0dHJpYnV0ZS5nZXROYW1lKCkpCgogICAgICAgIGN1c3RvbUF0dHJpYnV0ZXMgPSBBcnJ
 heUxpc3QoKQogICAgICAgIGZvciBrZXkgaW4gc2FtbF9yZXNwb25zZV9hdHRyaWJ1dGVzLmtleVNldCgpOgogICAgICAgICAgICBsZGFwQXR0cmlidXRlTmFtZSA9IHNhbWxVcmlUb0F0dHJpYnV0ZX
 NNYXAuZ2V0KGtleSkKICAgICAgICAgICAgaWYgbGRhcEF0dHJpYnV0ZU5hbWUgPT0gTm9uZToKICAgICAgICAgICAgICAgIHByaW50ICJTYW1sLiBHZXQgbWFwcGVkIGFsbCBhdHRyaWJ1dGVzIHVzZ
 XIuIFNraXBwaW5nIHNhbWwgYXR0cmlidXRlOiAnJXMnIiAlICBrZXkKICAgICAgICAgICAgICAgIGNvbnRpbnVlCgogICAgICAgICAgICBpZiBTdHJpbmdIZWxwZXIuZXF1YWxzSWdub3JlQ2FzZShs
 ZGFwQXR0cmlidXRlTmFtZSwgInVpZCIpOgogICAgICAgICAgICAgICAgY29udGludWUKCiAgICAgICAgICAgIGF0dHJpYnV0ZSA9IEN1c3RvbUF0dHJpYnV0ZShsZGFwQXR0cmlidXRlTmFtZSkKICA
 gICAgICAgICAgYXR0cmlidXRlLnNldFZhbHVlcyhzYW1sX3Jlc3BvbnNlX2F0dHJpYnV0ZXMuZ2V0KGtleSkpCiAgICAgICAgICAgIGN1c3RvbUF0dHJpYnV0ZXMuYWRkKGF0dHJpYnV0ZSkKICAgIC
 AgICAKICAgICAgICB1c2VyLnNldEN1c3RvbUF0dHJpYnV0ZXMoY3VzdG9tQXR0cmlidXRlcykKCiAgICAgICAgcmV0dXJuIHVzZXIKCiAgICBkZWYgZ2V0TmFtZUlkKHNlbGYsIHNhbWxSZXNwb25zZ
 SwgbmV3VXNlcik6CiAgICAgICAgaWYgc2VsZi5nZW5lcmF0ZU5hbWVJZDoKICAgICAgICAgICAgc2FtbF91c2VyX3VpZCA9IHNlbGYuZ2VuZXJhdGVOYW1lVWlkKG5ld1VzZXIpCiAgICAgICAgZWxz
 ZToKICAgICAgICAgICAgc2FtbF91c2VyX3VpZCA9IHNlbGYuZ2V0U2FtbE5hbWVJZChzYW1sUmVzcG9uc2UpCgogICAgICAgIHJldHVybiBzYW1sX3VzZXJfdWlkCgogICAgZGVmIGdldFNhbWxOYW1
 lSWQoc2VsZiwgc2FtbFJlc3BvbnNlKToKICAgICAgICBzYW1sX3Jlc3BvbnNlX25hbWVfaWQgPSBzYW1sUmVzcG9uc2UuZ2V0TmFtZUlkKCkKICAgICAgICBpZiAoU3RyaW5nSGVscGVyLmlzRW1wdH
 koc2FtbF9yZXNwb25zZV9uYW1lX2lkKSk6CiAgICAgICAgICAgIHByaW50ICJTYW1sLiBHZXQgU2FtbCByZXNwb25zZS4gc2FtbF9yZXNwb25zZV9uYW1lX2lkIGlzIGludmFsaWQiCiAgICAgICAgI
 CAgIHJldHVybiBOb25lCgogICAgICAgIHByaW50ICJTYW1sLiBHZXQgU2FtbCByZXNwb25zZS4gc2FtbF9yZXNwb25zZV9uYW1lX2lkOiAnJXMnIiAlIHNhbWxfcmVzcG9uc2VfbmFtZV9pZAoKICAg
 ICAgICAjIFVzZSBwZXJzaXN0ZW50IElkIGFzIHNhbWxfdXNlcl91aWQKICAgICAgICByZXR1cm4gc2FtbF9yZXNwb25zZV9uYW1lX2lkCgogICAgZGVmIGdlbmVyYXRlTmFtZVVpZChzZWxmLCB1c2V
 yKToKICAgICAgICBpZiAoc2VsZi51c2VyRW5mb3JjZUF0dHJpYnV0ZXNVbmlxdWVuZXNzID09IE5vbmUpOgogICAgICAgICAgICBwcmludCAiU2FtbC4gQnVpbGQgbG9jYWwgZXh0ZXJuYWwgdWlkLi
 BVc2VyIGVuZm9yY2UgYXR0cmlidXRlcyB1bmlxdWVuZXNzIG5vdCBzcGVjaWZpZWQiCiAgICAgICAgICAgIHJldHVybiBOb25lCiAgICAgICAgCiAgICAgICAgc2IgPSBTdHJpbmdCdWlsZGVyKCkKI
 CAgICAgICBmaXJzdCA9IFRydWUKICAgICAgICBmb3IgdXNlckF0dHJpYnV0ZU5hbWUgaW4gc2VsZi51c2VyRW5mb3JjZUF0dHJpYnV0ZXNVbmlxdWVuZXNzOgogICAgICAgICAgICBpZiBub3QgZmly
 c3Q6CiAgICAgICAgICAgICAgICBzYi5hcHBlbmQoIiEiKQogICAgICAgICAgICBmaXJzdCA9IEZhbHNlCiAgICAgICAgICAgIGF0dHJpYnV0ZV92YWx1ZXNfbGlzdCA9IHVzZXIuZ2V0QXR0cmlidXR
 lVmFsdWVzKHVzZXJBdHRyaWJ1dGVOYW1lKQogICAgICAgICAgICBpZiAoYXR0cmlidXRlX3ZhbHVlc19saXN0ICE9IE5vbmUpIGFuZCAoYXR0cmlidXRlX3ZhbHVlc19saXN0LnNpemUoKSA+IDApOg
 ogICAgICAgICAgICAgICAgZmlyc3RfYXR0cmlidXRlX3ZhbHVlID0gYXR0cmlidXRlX3ZhbHVlc19saXN0LmdldCgwKQogICAgICAgICAgICAgICAgc2IuYXBwZW5kKGZpcnN0X2F0dHJpYnV0ZV92Y
 Wx1ZSkKCiAgICAgICAgcmV0dXJuIHNiLnRvU3RyaW5nKCkKCiAgICBkZWYgc2V0RGVmYXVsdFVpZChzZWxmLCB1c2VyLCBzYW1sX3VzZXJfdWlkKToKICAgICAgICBpZiBTdHJpbmdIZWxwZXIuaXNF
 bXB0eSh1c2VyLmdldFVzZXJJZCgpKToKICAgICAgICAgICAgdXNlci5zZXRVc2VySWQoc2FtbF91c2VyX3VpZCkK
oxScriptType: person_authentication
programmingLanguage: python

dn: inum=%(inumOrg)s!0011!DAA9.B788,ou=scripts,o=%(inumOrg)s,o=gluu
objectClass: top
objectClass: oxCustomScript
description: Sample Client Registration script
displayName: client_registration
gluuStatus: false
inum: %(inumOrg)s!0011!DAA9.B788
oxLevel: 100
oxModuleProperty: {"value1":"location_type","value2":"ldap","description":""}
oxRevision: 1
oxScript:: IyBveEF1dGggaXMgYXZhaWxhYmxlIHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoMjAwOCkuIFNlZSBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUIGZvciBmdWxsIHRleHQuC
 iMgQ29weXJpZ2h0IChjKSAyMDE2LCBHbHV1CiMKIyBBdXRob3I6IFl1cml5IE1vdmNoYW4KIwoKZnJvbSBvcmcueGRpLm1vZGVsLmN1c3RvbS5zY3JpcHQudHlwZS5jbGllbnQgaW1wb3J0IENsaWVu
 dFJlZ2lzdHJhdGlvblR5cGUKZnJvbSBvcmcueGRpLnV0aWwgaW1wb3J0IFN0cmluZ0hlbHBlciwgQXJyYXlIZWxwZXIKZnJvbSBvcmcueGRpLm94YXV0aC5zZXJ2aWNlIGltcG9ydCBTY29wZVNlcnZ
 pY2UKZnJvbSBqYXZhLnV0aWwgaW1wb3J0IEFycmF5cywgQXJyYXlMaXN0CgppbXBvcnQgamF2YQoKY2xhc3MgQ2xpZW50UmVnaXN0cmF0aW9uKENsaWVudFJlZ2lzdHJhdGlvblR5cGUpOgogICAgZG
 VmIF9faW5pdF9fKHNlbGYsIGN1cnJlbnRUaW1lTWlsbGlzKToKICAgICAgICBzZWxmLmN1cnJlbnRUaW1lTWlsbGlzID0gY3VycmVudFRpbWVNaWxsaXMKCiAgICBkZWYgaW5pdChzZWxmLCBjb25ma
 Wd1cmF0aW9uQXR0cmlidXRlcyk6CiAgICAgICAgcHJpbnQgIkNsaWVudCByZWdpc3RyYXRpb24uIEluaXRpYWxpemF0aW9uIgoKICAgICAgICBzZWxmLnNjb3BlU2VydmljZSA9IFNjb3BlU2Vydmlj
 ZS5pbnN0YW5jZSgpCgogICAgICAgIHByaW50ICJDbGllbnQgcmVnaXN0cmF0aW9uLiBJbml0aWFsaXplZCBzdWNjZXNzZnVsbHkiCgogICAgICAgIHJldHVybiBUcnVlICAgCgogICAgZGVmIGRlc3R
 yb3koc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOgogICAgICAgIHByaW50ICJDbGllbnQgcmVnaXN0cmF0aW9uLiBEZXN0cm95IgogICAgICAgIHByaW50ICJDbGllbnQgcmVnaXN0cmF0aW
 9uLiBEZXN0cm95ZWQgc3VjY2Vzc2Z1bGx5IgogICAgICAgIHJldHVybiBUcnVlICAgCgogICAgIyBVcGRhdGUgY2xpZW50IGVudHJ5IGJlZm9yZSBwZXJzaXN0ZW50IGl0CiAgICAjICAgcmVnaXN0Z
 XJSZXF1ZXN0IGlzIG9yZy54ZGkub3hhdXRoLmNsaWVudC5SZWdpc3RlclJlcXVlc3QKICAgICMgICBjbGllbnQgaXMgb3JnLnhkaS5veGF1dGgubW9kZWwucmVnaXN0cmF0aW9uLkNsaWVudAogICAg
 IyAgIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzIGlzIGphdmEudXRpbC5NYXA8U3RyaW5nLCBTaW1wbGVDdXN0b21Qcm9wZXJ0eT4KICAgIGRlZiB1cGRhdGVDbGllbnQoc2VsZiwgcmVnaXN0ZXJSZXF
 1ZXN0LCBjbGllbnQsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKToKICAgICAgICBwcmludCAiQ2xpZW50IHJlZ2lzdHJhdGlvbi4gVXBkYXRlQ2xpZW50IG1ldGhvZCIKCiAgICAgICAgcmVkaXJlY3
 RVcmlzID0gY2xpZW50LmdldFJlZGlyZWN0VXJpcygpCiAgICAgICAgcHJpbnQgIkNsaWVudCByZWdpc3RyYXRpb24uIFJlZGlyZWN0IFVyaXM6IiwgcmVkaXJlY3RVcmlzCgogICAgICAgIGFkZEFkZ
 HJlc3NTY29wZSA9IEZhbHNlCiAgICAgICAgZm9yIHJlZGlyZWN0VXJpIGluIHJlZGlyZWN0VXJpczoKICAgICAgICAgICAgaWYgKFN0cmluZ0hlbHBlci5lcXVhbHNJZ25vcmVDYXNlKHJlZGlyZWN0
 VXJpLCAiaHR0cHM6Ly9jbGllbnQuZXhhbXBsZS5jb20vZXhhbXBsZTEiKSk6CiAgICAgICAgICAgICAgICBhZGRBZGRyZXNzU2NvcGUgPSBUcnVlCiAgICAgICAgICAgICAgICBicmVhawogICAgICA
 gIAogICAgICAgIHByaW50ICJDbGllbnQgcmVnaXN0cmF0aW9uLiBJcyBhZGQgYWRkcmVzcyBzY29wZToiLCBhZGRBZGRyZXNzU2NvcGUKCiAgICAgICAgaWYgKGFkZEFkZHJlc3NTY29wZSk6CiAgIC
 AgICAgICAgIGN1cnJlbnRTY29wZXMgPSBjbGllbnQuZ2V0U2NvcGVzKCkKICAgICAgICAgICAgcHJpbnQgIkNsaWVudCByZWdpc3RyYXRpb24uIEN1cnJlbnQgc2NvcGVzOiIsIGN1cnJlbnRTY29wZ
 XMKICAgICAgICAgICAgCiAgICAgICAgICAgIGFkZHJlc3NTY29wZSA9IHNlbGYuc2NvcGVTZXJ2aWNlLmdldFNjb3BlQnlEaXNwbGF5TmFtZSgiYWRkcmVzcyIpCiAgICAgICAgICAgIG5ld1Njb3Bl
 cyA9IEFycmF5SGVscGVyLmFkZEl0ZW1Ub1N0cmluZ0FycmF5KGN1cnJlbnRTY29wZXMsIGFkZHJlc3NTY29wZS5nZXREbigpKQogICAgCiAgICAgICAgICAgIHByaW50ICJDbGllbnQgcmVnaXN0cmF
 0aW9uLiBSZXN1bHQgc2NvcGVzOiIsIG5ld1Njb3BlcwogICAgICAgICAgICBjbGllbnQuc2V0U2NvcGVzKG5ld1Njb3BlcykKCiAgICAgICAgcmV0dXJuIFRydWUKCiAgICBkZWYgZ2V0QXBpVmVyc2
 lvbihzZWxmKToKICAgICAgICByZXR1cm4gMQo=
oxScriptType: client_registration
programmingLanguage: python

dn: inum=%(inumOrg)s!0011!09A0.93D6,ou=scripts,o=%(inumOrg)s,o=gluu
objectClass: top
objectClass: oxCustomScript
description: Twilio SMS authentication module
displayName: twilio_sms
gluuStatus: false
inum: %(inumOrg)s!0011!09A0.93D6
oxConfigurationProperty: {"value1":"_sidtwilio","value2":"Twilio account","description":""}
oxConfigurationProperty: {"value1":"twilio_token","value2":"Twilio API secret","description":""}
oxConfigurationProperty: {"value1":"from_number","value2":"Phone number fomatting","description":""}
oxLevel: 60
oxModuleProperty: {"value1":"usage_type","value2":"interactive","description":""}
oxModuleProperty: {"value1":"location_type","value2":"ldap","description":""}
oxRevision: 1
oxScript:: IyBveEF1dGggaXMgYXZhaWxhYmxlIHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoMjAwOCkuIFNlZSBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUIGZvciBmdWxsIHRleHQuD
 QojIENvcHlyaWdodCAoYykgMjAxNiwgR2x1dQ0KIw0KIyBBdXRob3I6IE1pY2hhZWwgU2Nod2FydHoNCiMNCg0KZnJvbSBvcmcuamJvc3Muc2VhbS5zZWN1cml0eSBpbXBvcnQgSWRlbnRpdHkNCmZy
 b20gb3JnLnhkaS5tb2RlbC5jdXN0b20uc2NyaXB0LnR5cGUuYXV0aCBpbXBvcnQgUGVyc29uQXV0aGVudGljYXRpb25UeXBlDQpmcm9tIG9yZy54ZGkub3hhdXRoLnNlcnZpY2UgaW1wb3J0IFVzZXJ
 TZXJ2aWNlLCBBdXRoZW50aWNhdGlvblNlcnZpY2UsIFNlc3Npb25TdGF0ZVNlcnZpY2UNCmZyb20gb3JnLnhkaS51dGlsIGltcG9ydCBTdHJpbmdIZWxwZXINCmZyb20gb3JnLmpib3NzLnNlYW0uY2
 9udGV4dHMgaW1wb3J0IENvbnRleHQsIENvbnRleHRzDQpmcm9tIG9yZy54ZGkub3hhdXRoLnV0aWwgaW1wb3J0IFNlcnZlclV0aWwNCmZyb20gb3JnLnhkaS51dGlsIGltcG9ydCBTdHJpbmdIZWxwZ
 XIgDQpmcm9tIG9yZy54ZGkudXRpbCBpbXBvcnQgQXJyYXlIZWxwZXIgDQpmcm9tIGphdmEudXRpbCBpbXBvcnQgQXJyYXlzDQoNCmltcG9ydCBjb20udHdpbGlvLnNkay5Ud2lsaW9SZXN0Q2xpZW50
 IGFzIFR3aWxpb1Jlc3RDbGllbnQNCmltcG9ydCBjb20udHdpbGlvLnNkay5Ud2lsaW9SZXN0RXhjZXB0aW9uIGFzIFR3aWxpb1Jlc3RFeGNlcHRpb24NCmltcG9ydCBjb20udHdpbGlvLnNkay5yZXN
 vdXJjZS5mYWN0b3J5Lk1lc3NhZ2VGYWN0b3J5IGFzIE1lc3NhZ2VGYWN0b3J5DQppbXBvcnQgY29tLnR3aWxpby5zZGsucmVzb3VyY2UuaW5zdGFuY2UuTWVzc2FnZSBhcyBNZXNzYWdlDQppbXBvcn
 Qgb3JnLmFwYWNoZS5odHRwLk5hbWVWYWx1ZVBhaXIgYXMgTmFtZVZhbHVlUGFpcg0KaW1wb3J0IG9yZy5hcGFjaGUuaHR0cC5tZXNzYWdlLkJhc2ljTmFtZVZhbHVlUGFpciBhcyBCYXNpY05hbWVWY
 Wx1ZVBhaXINCmltcG9ydCBqYXZhLnV0aWwuQXJyYXlMaXN0IGFzIEFycmF5TGlzdA0KaW1wb3J0IGphdmEudXRpbC5BcnJheXMuYXNMaXN0IGFzIExpc3QNCg0KaW1wb3J0IGphdmENCmltcG9ydCBy
 YW5kb20NCmltcG9ydCBqYXJyYXkNCg0KY2xhc3MgUGVyc29uQXV0aGVudGljYXRpb24oUGVyc29uQXV0aGVudGljYXRpb25UeXBlKToNCiAgICBkZWYgX19pbml0X18oc2VsZiwgY3VycmVudFRpbWV
 NaWxsaXMpOg0KICAgICAgICAgIHNlbGYuY3VycmVudFRpbWVNaWxsaXMgPSBjdXJyZW50VGltZU1pbGxpcw0KDQogICAgZGVmIGluaXQoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOg0KIC
 AgICAgICBwcmludCAiVHdpbGlvIFNNUy4gSW5pdGlhbGl6YXRpb24iDQoNCiAgICAgICAgc2VsZi5BQ0NPVU5UX1NJRCA9IE5vbmUgICAgDQogICAgICAgIHNlbGYuQVVUSF9UT0tFTiA9IE5vbmUgI
 CAgDQogICAgICAgIHNlbGYuRlJPTV9OVU1CRVIgPSBOb25lDQogICAgICAgIA0KICAgICAgICAjIEdldCBDdXN0b20gUHJvcGVydGllcw0KICAgICAgICB0cnk6DQogICAgICAgICAgICBzZWxmLkFD
 Q09VTlRfU0lEID0gY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuZ2V0KCJ0d2lsaW9fc2lkIikuZ2V0VmFsdWUyKCkNCiAgICAgICAgZXhjZXB0Og0KICAgICAgICAgICAgcHJpbnQgJ1R3aWxpb1NNUyw
 gTWlzc2luZyByZXF1aXJlZCBjb25maWd1cmF0aW9uIGF0dHJpYnV0ZSAidHdpbGlvX3NpZCInDQoNCiAgICAgICAgdHJ5Og0KICAgICAgICAgICAgc2VsZi5BVVRIX1RPS0VOID0gY29uZmlndXJhdG
 lvbkF0dHJpYnV0ZXMuZ2V0KCJ0d2lsaW9fdG9rZW4iKS5nZXRWYWx1ZTIoKQ0KICAgICAgICBleGNlcHQ6DQogICAgICAgICAgICBwcmludCdUd2lsaW9TTVMsIE1pc3NpbmcgcmVxdWlyZWQgY29uZ
 mlndXJhdGlvbiBhdHRyaWJ1dGUgInR3aWxpb190b2tlbiInDQogICAgICAgIHRyeToNCiAgICAgICAgICAgIHNlbGYuRlJPTV9OVU1CRVIgPSBjb25maWd1cmF0aW9uQXR0cmlidXRlcy5nZXQoImZy
 b21fbnVtYmVyIikuZ2V0VmFsdWUyKCkNCiAgICAgICAgZXhjZXB0Og0KICAgICAgICAgICAgcHJpbnQnVHdpbGlvU01TLCBNaXNzaW5nIHJlcXVpcmVkIGNvbmZpZ3VyYXRpb24gYXR0cmlidXRlICJ
 mcm9tX251bWJlciInDQoNCiAgICAgICAgaWYgTm9uZSBpbiAoc2VsZi5BQ0NPVU5UX1NJRCwgc2VsZi5BVVRIX1RPS0VOLCBzZWxmLkZST01fTlVNQkVSKToNCiAgICAgICAgICAgIHByaW50ICJ0d2
 lsaW9fc2lkLCB0d2lsaW9fdG9rZW4sIGZyb21fbnVtYmVyIGlzIGVtcHR5IC4uLiByZXR1cm5pbmcgRmFsc2UiDQogICAgICAgICAgICByZXR1cm4gRmFsc2UNCg0KICAgICAgICBwcmludCAiVHdpb
 GlvIFNNUy4gSW5pdGlhbGl6ZWQgc3VjY2Vzc2Z1bGx5Ig0KDQogICAgICAgIHJldHVybiBUcnVlICAgIA0KDQogICAgZGVmIGRlc3Ryb3koc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOg0K
 ICAgICAgICBwcmludCAiVHdpbGlvIFNNUy4gRGVzdHJveSINCiAgICAgICAgcHJpbnQgIlR3aWxpbyBTTVMuIERlc3Ryb3llZCBzdWNjZXNzZnVsbHkiDQogICAgICAgIHJldHVybiBUcnVlDQoNCiA
 gICBkZWYgZ2V0QXBpVmVyc2lvbihzZWxmKToNCiAgICAgICAgcmV0dXJuIDENCiANCiAgICBkZWYgaXNWYWxpZEF1dGhlbnRpY2F0aW9uTWV0aG9kKHNlbGYsIHVzYWdlVHlwZSwgY29uZmlndXJhdG
 lvbkF0dHJpYnV0ZXMpOg0KICAgICAgICByZXR1cm4gVHJ1ZQ0KICAgICAgICAgIA0KICAgIGRlZiBnZXRBbHRlcm5hdGl2ZUF1dGhlbnRpY2F0aW9uTWV0aG9kKHNlbGYsIHVzYWdlVHlwZSwgY29uZ
 mlndXJhdGlvbkF0dHJpYnV0ZXMpOg0KICAgICAgICByZXR1cm4gTm9uZQ0KDQogICAgZGVmIGF1dGhlbnRpY2F0ZShzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcywgcmVxdWVzdFBhcmFtZXRl
 cnMsIHN0ZXApOg0KICAgICAgICBjb250ZXh0ID0gQ29udGV4dHMuZ2V0RXZlbnRDb250ZXh0KCkNCiAgICAgICAgdXNlclNlcnZpY2UgPSBVc2VyU2VydmljZS5pbnN0YW5jZSgpDQogICAgICAgIHN
 lc3Npb25fYXR0cmlidXRlcyA9IGNvbnRleHQuZ2V0KCJzZXNzaW9uQXR0cmlidXRlcyIpDQoNCiAgICAgICAgZm9ybV9wYXNzY29kZSA9IFNlcnZlclV0aWwuZ2V0Rmlyc3RWYWx1ZShyZXF1ZXN0UG
 FyYW1ldGVycywgInBhc3Njb2RlIikNCiAgICAgICAgZm9ybV9uYW1lID0gU2VydmVyVXRpbC5nZXRGaXJzdFZhbHVlKHJlcXVlc3RQYXJhbWV0ZXJzLCAiVHdpbGlvU21zbG9naW5Gb3JtIikNCg0KI
 CAgICAgICBwcmludCAiVHdpbGlvU01TLiBmb3JtX3Jlc3BvbnNlX3Bhc3Njb2RlOiAlcyIgJSBzdHIoZm9ybV9wYXNzY29kZSkNCiAgICAgICAgDQogICAgICAgIGlmIHN0ZXAgPT0gMToNCiAgICAg
 ICAgICAgIHByaW50ICJUd2lsaW9TTVMuIFN0ZXAgMSBQYXNzd29yZCBBdXRoZW50aWNhdGlvbiINCiAgICAgICAgICAgIGNyZWRlbnRpYWxzID0gSWRlbnRpdHkuaW5zdGFuY2UoKS5nZXRDcmVkZW5
 0aWFscygpDQogICAgICAgICAgICB1c2VyX25hbWUgPSBjcmVkZW50aWFscy5nZXRVc2VybmFtZSgpDQogICAgICAgICAgICB1c2VyX3Bhc3N3b3JkID0gY3JlZGVudGlhbHMuZ2V0UGFzc3dvcmQoKQ
 0KICAgICAgICAgICAgDQogICAgICAgICAgICBsb2dnZWRfaW4gPSBGYWxzZQ0KICAgICAgICAgICAgaWYgU3RyaW5nSGVscGVyLmlzTm90RW1wdHlTdHJpbmcodXNlcl9uYW1lKSBhbmQgU3RyaW5nS
 GVscGVyLmlzTm90RW1wdHlTdHJpbmcodXNlcl9wYXNzd29yZCk6DQogICAgICAgICAgICAgICAgbG9nZ2VkX2luID0gdXNlclNlcnZpY2UuYXV0aGVudGljYXRlKHVzZXJfbmFtZSwgdXNlcl9wYXNz
 d29yZCkNCiAgICAgICAgICAgIA0KICAgICAgICAgICAgaWYgbm90IGxvZ2dlZF9pbjoNCiAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UNCg0KICAgICAgICAgICAgIyBHZXQgdGhlIFBlcnNvbid
 zIG51bWJlciBhbmQgZ2VuZXJhdGUgYSBjb2RlDQogICAgICAgICAgICBmb3VuZFVzZXIgPSBOb25lDQogICAgICAgICAgICB0cnk6DQogICAgICAgICAgICAgICAgZm91bmRVc2VyID0gdXNlclNlcn
 ZpY2UuZ2V0VXNlckJ5QXR0cmlidXRlKCJ1aWQiLCB1c2VyX25hbWUpDQogICAgICAgICAgICBleGNlcHQ6DQogICAgICAgICAgICAgICAgcHJpbnQgJ1R3aWxpb1NNUywgRXJyb3IgcmV0cmlldmluZ
 yB1c2VyICVzIGZyb20gTERBUCcgJSAodXNlcl9uYW1lKQ0KICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQ0KDQogICAgICAgICAgICB0cnk6DQogICAgICAgICAgICAgICAgbW9iaWxlX251bWJl
 ciA9IGZvdW5kVXNlci5nZXRBdHRyaWJ1dGUoInBob25lTnVtYmVyVmVyaWZpZWQiKQ0KICAgICAgICAgICAgZXhjZXB0Og0KICAgICAgICAgICAgICAgIHByaW50ICdUd2lsaW9TTVMsIEVycm9yIGZ
 pbmRpbmcgbW9iaWxlIG51bWJlciBmb3InICUgKHVzZXJfbmFtZSkgDQogICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlDQogICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICMgR2
 VuZXJhdGUgUmFuZG9tIHNpeCBkaWdpdCBjb2RlIGFuZCBzdG9yZSBpdCBpbiBhcnJheQ0KICAgICAgICAgICAgY29kZSA9IHJhbmRvbS5yYW5kaW50KDEwMDAwMCwgOTk5OTk5KQ0KICAgICAgICAgI
 CAgDQogICAgICAgICAgICAjIEdldCBjb2RlIGFuZCBzYXZlIGl0IGluIExEQVAgdGVtcG9yYXJpbHkgd2l0aCBzcGVjaWFsIHNlc3Npb24gZW50cnkgDQogICAgICAgICAgICBjb250ZXh0LnNldCgi
 Y29kZSIsIGNvZGUpDQoNCiAgICAgICAgICAgIGNsaWVudCA9IFR3aWxpb1Jlc3RDbGllbnQoc2VsZi5BQ0NPVU5UX1NJRCwgc2VsZi5BVVRIX1RPS0VOKQ0KICAgICAgICAgICAgYm9keVBhcmFtID0
 gQmFzaWNOYW1lVmFsdWVQYWlyKCJCb2R5Iiwgc3RyKGNvZGUpKQ0KICAgICAgICAgICAgdG9QYXJhbSA9IEJhc2ljTmFtZVZhbHVlUGFpcigiVG8iLCBtb2JpbGVfbnVtYmVyKQ0KICAgICAgICAgIC
 AgZnJvbVBhcmFtID0gQmFzaWNOYW1lVmFsdWVQYWlyKCJGcm9tIiwgc2VsZi5GUk9NX05VTUJFUikNCg0KICAgICAgICAgICAgcGFyYW1zID0gQXJyYXlMaXN0KCkNCiAgICAgICAgICAgIHBhcmFtc
 y5hZGQoYm9keVBhcmFtKQ0KICAgICAgICAgICAgcGFyYW1zLmFkZCh0b1BhcmFtKQ0KICAgICAgICAgICAgcGFyYW1zLmFkZChmcm9tUGFyYW0pDQogICAgICAgICAgICANCiAgICAgICAgICAgIHRy
 eToNCiAgICAgICAgICAgICAgICBtZXNzYWdlRmFjdG9yeSA9IGNsaWVudC5nZXRBY2NvdW50KCkuZ2V0TWVzc2FnZUZhY3RvcnkoKQ0KICAgICAgICAgICAgICAgIG1lc3NhZ2UgPSBtZXNzYWdlRmF
 jdG9yeS5jcmVhdGUocGFyYW1zKQ0KDQogICAgICAgICAgICAgICAgcHJpbnQgJ1R3aWxpb1NNcywgTWVzc2FnZSBTaWQ6ICVzJyAlIChtZXNzYWdlLmdldFNpZCgpKQ0KICAgICAgICAgICAgICAgIH
 JldHVybiBUcnVlDQogICAgICAgICAgICBleGNlcHQ6DQogICAgICAgICAgICAgICAgcHJpbnQgIlR3aWxpb1NNUy4gRXJyb3Igc2VuZGluZyBtZXNzYWdlIHRvIFR3aWxpbyINCg0KICAgICAgICAgI
 CAgcmV0dXJuIEZhbHNlDQogICAgICAgIGVsaWYgc3RlcCA9PSAyOg0KICAgICAgICAgICAgIyBSZXRyaWV2ZSB0aGUgc2Vzc2lvbiBhdHRyaWJ1dGUNCiAgICAgICAgICAgIHByaW50ICJUd2lsaW9T
 TVMuIFN0ZXAgMiBTTVMvT1RQIEF1dGhlbnRpY2F0aW9uIg0KICAgICAgICAgICAgY29kZSA9IHNlc3Npb25fYXR0cmlidXRlcy5nZXQoImNvZGUiKQ0KICAgICAgICAgICAgcHJpbnQgIlR3aWxpb1N
 NUy4gQ29kZTogJXMiICUgc3RyKGNvZGUpDQogICAgDQogICAgICAgICAgICBpZiBjb2RlIGlzIE5vbmU6DQogICAgICAgICAgICAgICAgcHJpbnQgIlR3aWxpb1NNUy4gRmFpbGVkIHRvIGZpbmQgcH
 JldmlvdXNseSBzZW50IGNvZGUiDQogICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlIA0KICAgIA0KICAgICAgICAgICAgaWYgZm9ybV9wYXNzY29kZSBpcyBOb25lOg0KICAgICAgICAgICAgICAgI
 HByaW50ICJUd2lsaW9TTVMuIFBhc3Njb2RlIGlzIGVtcHR5Ig0KICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZSANCiAgICANCiAgICAgICAgICAgIGlmIGxlbihmb3JtX3Bhc3Njb2RlKSAhPSA2
 Og0KICAgICAgICAgICAgICAgIHByaW50ICJUd2lsaW9TTVMuIFBhc3Njb2RlIGZyb20gcmVzcG9uc2UgaXMgbm90IDYgZGlnaXRzOiAlcyIgJSBmb3JtX3Bhc3Njb2RlDQogICAgICAgICAgICAgICA
 gcmV0dXJuIEZhbHNlDQoNCiAgICAgICAgICAgIGlmIGZvcm1fcGFzc2NvZGUgPT0gY29kZToNCiAgICAgICAgICAgICAgICBwcmludCAiVGl3bGlvU01TLCBTVUNDRVNTISBVc2VyIGVudGVyZWQgdG
 hlIHNhbWUgY29kZSEiIA0KICAgICAgICAgICAgICAgIHJldHVybiBUcnVlDQoNCiAgICAgICAgICAgIHByaW50ICJUd2lsaW9TTVMuIEZBSUwhIFVzZXIgZW50ZXJlZCB0aGUgd3JvbmcgY29kZSEgJ
 XMgIT0gJXMiICUgKGZvcm1fcGFzc2NvZGUsIGNvZGUpDQoNCiAgICAgICAgICAgIHJldHVybiBGYWxzZSAgICAgICAgICAgIA0KDQogICAgICAgIHByaW50ICJUd2lsaW9TTVMuIEVSUk9SOiBzdGVw
 IHBhcmFtIG5vdCBmb3VuZCBvciAhPSAoMXwyKSINCg0KICAgICAgICByZXR1cm4gRmFsc2UNCg0KICAgIGRlZiBwcmVwYXJlRm9yU3RlcChzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcywgcmV
 xdWVzdFBhcmFtZXRlcnMsIHN0ZXApOg0KICAgICAgICBpZiBzdGVwID09IDE6DQogICAgICAgICAgICBwcmludCAiVHdpbGlvU01TLiBQcmVwYXJlIGZvciBTdGVwIDEiDQogICAgICAgICAgICByZX
 R1cm4gVHJ1ZQ0KICAgICAgICBlbGlmIHN0ZXAgPT0gMjoNCiAgICAgICAgICAgIHByaW50ICJUd2lsaW9TTVMuIFByZXBhcmUgZm9yIFN0ZXAgMiINCiAgICAgICAgICAgIHJldHVybiBUcnVlDQoNC
 iAgICAgICAgcmV0dXJuIEZhbHNlDQoNCiAgICBkZWYgZ2V0RXh0cmFQYXJhbWV0ZXJzRm9yU3RlcChzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcywgc3RlcCk6DQogICAgICAgIGlmIHN0ZXAg
 PT0gMjoNCiAgICAgICAgICAgIHJldHVybiBBcnJheXMuYXNMaXN0KCJjb2RlIikNCg0KICAgICAgICByZXR1cm4gTm9uZQ0KDQogICAgZGVmIGdldENvdW50QXV0aGVudGljYXRpb25TdGVwcyhzZWx
 mLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6DQogICAgICAgIHJldHVybiAyDQoNCiAgICBkZWYgZ2V0UGFnZUZvclN0ZXAoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIHN0ZXApOg0KIC
 AgICAgICBpZiBzdGVwID09IDI6DQogICAgICAgICAgICByZXR1cm4gIi9hdXRoL3R3aWxpb3Ntcy90d2lsaW9zbXMueGh0bWwiDQoNCiAgICAgICAgcmV0dXJuICIiDQoNCiAgICBkZWYgbG9nb3V0K
 HNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCByZXF1ZXN0UGFyYW1ldGVycyk6DQogICAgICAgIHJldHVybiBUcnVlDQo=
oxScriptType: person_authentication
programmingLanguage: python

dn: inum=%(inumOrg)s!0011!DAA9.B789,ou=scripts,o=%(inumOrg)s,o=gluu
objectClass: top
objectClass: oxCustomScript
description: Sample Application Session script
displayName: application_session
gluuStatus: false
inum: %(inumOrg)s!0011!DAA9.B789
oxLevel: 100
oxModuleProperty: {"value1":"location_type","value2":"ldap","description":""}
oxRevision: 1
oxScript:: IyBveEF1dGggaXMgYXZhaWxhYmxlIHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoMjAwOCkuIFNlZSBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUIGZvciBmdWxsIHRleHQuC
 iMgQ29weXJpZ2h0IChjKSAyMDE2LCBHbHV1CiMKIyBBdXRob3I6IFl1cml5IE1vdmNoYW4KIwoKZnJvbSBvcmcueGRpLm1vZGVsLmN1c3RvbS5zY3JpcHQudHlwZS5zZXNzaW9uIGltcG9ydCBBcHBs
 aWNhdGlvblNlc3Npb25UeXBlCmZyb20gb3JnLnhkaS51dGlsIGltcG9ydCBTdHJpbmdIZWxwZXIsIEFycmF5SGVscGVyCmZyb20gamF2YS51dGlsIGltcG9ydCBBcnJheXMsIEFycmF5TGlzdAoKaW1
 wb3J0IGphdmEKCmNsYXNzIEFwcGxpY2F0aW9uU2Vzc2lvbihBcHBsaWNhdGlvblNlc3Npb25UeXBlKToKICAgIGRlZiBfX2luaXRfXyhzZWxmLCBjdXJyZW50VGltZU1pbGxpcyk6CiAgICAgICAgc2
 VsZi5jdXJyZW50VGltZU1pbGxpcyA9IGN1cnJlbnRUaW1lTWlsbGlzCgogICAgZGVmIGluaXQoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOgogICAgICAgIHByaW50ICJBcHBsaWNhdGlvb
 iBzZXNzaW9uLiBJbml0aWFsaXphdGlvbiIKICAgICAgICBwcmludCAiQXBwbGljYXRpb24gc2Vzc2lvbi4gSW5pdGlhbGl6ZWQgc3VjY2Vzc2Z1bGx5IgoKICAgICAgICByZXR1cm4gVHJ1ZSAgIAoK
 ICAgIGRlZiBkZXN0cm95KHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKToKICAgICAgICBwcmludCAiQXBwbGljYXRpb24gc2Vzc2lvbi4gRGVzdHJveSIKICAgICAgICBwcmludCAiQXBwbGl
 jYXRpb24gc2Vzc2lvbi4gRGVzdHJveWVkIHN1Y2Nlc3NmdWxseSIKICAgICAgICByZXR1cm4gVHJ1ZSAgIAoKICAgIGRlZiBnZXRBcGlWZXJzaW9uKHNlbGYpOgogICAgICAgIHJldHVybiAxCgogIC
 AgIyBBcHBsaWNhdGlvbiBjYWxscyBpdCBhdCBlbmQgc2Vzc2lvbiByZXF1ZXN0IHRvIGFsbG93IG5vdGlmeSAzcmQgcGFydCBzeXN0ZW1zCiAgICAjICAgaHR0cFJlcXVlc3QgaXMgamF2YXguc2Vyd
 mxldC5odHRwLkh0dHBTZXJ2bGV0UmVxdWVzdAogICAgIyAgIGF1dGhvcml6YXRpb25HcmFudCBpcyBvcmcueGRpLm94YXV0aC5tb2RlbC5jb21tb24uQXV0aG9yaXphdGlvbkdyYW50CiAgICAjICAg
 Y29uZmlndXJhdGlvbkF0dHJpYnV0ZXMgaXMgamF2YS51dGlsLk1hcDxTdHJpbmcsIFNpbXBsZUN1c3RvbVByb3BlcnR5PgogICAgZGVmIGVuZFNlc3Npb24oc2VsZiwgaHR0cFJlcXVlc3QsIGF1dGh
 vcml6YXRpb25HcmFudCwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOgogICAgICAgIHByaW50ICJBcHBsaWNhdGlvbiBzZXNzaW9uLiBTdGFydGluZyBleHRlcm5hbCBzZXNzaW9uIGVuZCIKCiAgIC
 AgICAgcHJpbnQgIkFwcGxpY2F0aW9uIHNlc3Npb24uIEV4dGVybmFsIHNlc3Npb24gZW5kZWQgc3VjY2Vzc2Z1bGx5IgogICAgICAgIHJldHVybiBUcnVlCg==
oxScriptType: application_session
programmingLanguage: python

