/*
 * Janssen Project software is available under the Apache License (2004). See http://www.apache.org/licenses/ for full text.
 *
 * Copyright (c) 2020, Janssen Project
 */

package io.jans.as.server.comp;

import static org.testng.Assert.assertTrue;

import io.jans.saml.Response;
import io.jans.saml.SamlConfiguration;
import org.testng.annotations.Test;

/**
 * @author Yuriy Zabrovarnyy
 * @version December 28, 2020
 */

public class XmlSignatureTest {

	@Test
	public void checkSignatureOld() throws Exception {
		System.out.println(System.getProperties());
    	String cert =
				"MIIDcDCCAlgCCQCweorgMjoVHzANBgkqhkiG9w0BAQUFADB6MQswCQYDVQQGEwJVUzELMAkGA1UE\r\n" + 
				"CAwCVFgxDzANBgNVBAcMBkF1c3RpbjESMBAGA1UECgwJR2x1dSBJbmMuMRswGQYDVQQDDBJhc2lt\r\n" + 
				"YmEzMTEuZ2x1dS5vcmcxHDAaBgkqhkiG9w0BCQEWDXppY29AZ2x1dS5vcmcwHhcNMjAxMjExMDUw\r\n" + 
				"NDQ4WhcNMjExMjExMDUwNDQ4WjB6MQswCQYDVQQGEwJVUzELMAkGA1UECAwCVFgxDzANBgNVBAcM\r\n" + 
				"BkF1c3RpbjESMBAGA1UECgwJR2x1dSBJbmMuMRswGQYDVQQDDBJhc2ltYmEzMTEuZ2x1dS5vcmcx\r\n" + 
				"HDAaBgkqhkiG9w0BCQEWDXppY29AZ2x1dS5vcmcwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK\r\n" + 
				"AoIBAQDBGe69Xiy9Jeo6yg9FkkYWqeGFAgWwsNESima1WIjplM+CARiVS42wcqpEI6G79W2mKC8c\r\n" + 
				"yukTpAXTtGU68pArTIu72Abq55L5WTLxGQnr2/iYVWUrHPNTVVtjylsZA9gX/BvqqbWMS84q69T6\r\n" + 
				"jVnjIoPBzMIeqq4LjmPJQ00s2AlHFahmt0d22o3NdoQeVBHZ79bsWKyagIF16/anvDr/j1+51Ttg\r\n" + 
				"+3k3IPbCLXPMKUgBwN/tIaOfj9A+pUYoqHKakuwzpErITrIJrJQzQmk8bEWJVkj6UasA7ZDCt+KV\r\n" + 
				"mGSJtDr71kgNDJIUhRT1YeH2NfnQ0MPenOej4repFkdVAgMBAAEwDQYJKoZIhvcNAQEFBQADggEB\r\n" + 
				"AKTIhyUQmVC9IcQfF/U7c6ZoF08xhnDb4RGOo7CC1BQ652ehqmC5hZrDbMZiG5TKdeFMCDPcU9NC\r\n" + 
				"Jv6xybVTzbDxG4PCXSKBv+PneNEhJZiDtCr0CBub7+cw3ZGLBjriwVkRq7Wh/1ZlRB+vlBP0Si0j\r\n" + 
				"Nmh67mDMsbeyubnttSU4S8HgiJYGHSHTQoM1ncXggy805jJn0JOyp1TFO0Cp7s7VRPb1PsrcfmfK\r\n" + 
				"qOTOCIaumckVsfz6EofPPdoYDA+c+J0nYXFxzsrdXscWJvW+flAWGpw2995hlmwpR1L92uM8O1km\r\n" + 
				"cOllnhfo6n0P3GfutOf2dEM2z65F0J249GTA0QA=";
		
		String response = "";

		SamlConfiguration samlConfiguration = new SamlConfiguration();
		samlConfiguration.loadCertificateFromString(cert);

		Response resp = new Response(samlConfiguration);
		resp.loadXmlFromBase64(response);
		boolean result = resp.isValidNew();
		assertTrue(result, "XML signature is invalid");
	}


	@Test
	public void checkSignatureNew() throws Exception {
    	String cert =
				"MIIDcDCCAlgCCQCweorgMjoVHzANBgkqhkiG9w0BAQUFADB6MQswCQYDVQQGEwJVUzELMAkGA1UE\r\n" + 
				"CAwCVFgxDzANBgNVBAcMBkF1c3RpbjESMBAGA1UECgwJR2x1dSBJbmMuMRswGQYDVQQDDBJhc2lt\r\n" + 
				"YmEzMTEuZ2x1dS5vcmcxHDAaBgkqhkiG9w0BCQEWDXppY29AZ2x1dS5vcmcwHhcNMjAxMjExMDUw\r\n" + 
				"NDQ4WhcNMjExMjExMDUwNDQ4WjB6MQswCQYDVQQGEwJVUzELMAkGA1UECAwCVFgxDzANBgNVBAcM\r\n" + 
				"BkF1c3RpbjESMBAGA1UECgwJR2x1dSBJbmMuMRswGQYDVQQDDBJhc2ltYmEzMTEuZ2x1dS5vcmcx\r\n" + 
				"HDAaBgkqhkiG9w0BCQEWDXppY29AZ2x1dS5vcmcwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK\r\n" + 
				"AoIBAQDBGe69Xiy9Jeo6yg9FkkYWqeGFAgWwsNESima1WIjplM+CARiVS42wcqpEI6G79W2mKC8c\r\n" + 
				"yukTpAXTtGU68pArTIu72Abq55L5WTLxGQnr2/iYVWUrHPNTVVtjylsZA9gX/BvqqbWMS84q69T6\r\n" + 
				"jVnjIoPBzMIeqq4LjmPJQ00s2AlHFahmt0d22o3NdoQeVBHZ79bsWKyagIF16/anvDr/j1+51Ttg\r\n" + 
				"+3k3IPbCLXPMKUgBwN/tIaOfj9A+pUYoqHKakuwzpErITrIJrJQzQmk8bEWJVkj6UasA7ZDCt+KV\r\n" + 
				"mGSJtDr71kgNDJIUhRT1YeH2NfnQ0MPenOej4repFkdVAgMBAAEwDQYJKoZIhvcNAQEFBQADggEB\r\n" + 
				"AKTIhyUQmVC9IcQfF/U7c6ZoF08xhnDb4RGOo7CC1BQ652ehqmC5hZrDbMZiG5TKdeFMCDPcU9NC\r\n" + 
				"Jv6xybVTzbDxG4PCXSKBv+PneNEhJZiDtCr0CBub7+cw3ZGLBjriwVkRq7Wh/1ZlRB+vlBP0Si0j\r\n" + 
				"Nmh67mDMsbeyubnttSU4S8HgiJYGHSHTQoM1ncXggy805jJn0JOyp1TFO0Cp7s7VRPb1PsrcfmfK\r\n" + 
				"qOTOCIaumckVsfz6EofPPdoYDA+c+J0nYXFxzsrdXscWJvW+flAWGpw2995hlmwpR1L92uM8O1km\r\n" + 
				"cOllnhfo6n0P3GfutOf2dEM2z65F0J249GTA0QA=";
		
		String response = "";

		SamlConfiguration samlConfiguration = new SamlConfiguration();
		samlConfiguration.loadCertificateFromString(cert);

		Response resp = new Response(samlConfiguration);
		resp.loadXmlFromBase64(response);
		boolean result = resp.isValid();
		assertTrue(result, "XML signature is invalid");
	}

}
